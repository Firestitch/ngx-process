{"version":3,"file":"stylesheet-processor.js","sourceRoot":"","sources":["../../../src/lib/styles/stylesheet-processor.ts"],"names":[],"mappings":";;;AAAA,6CAA6C;AAC7C,+BAA4B;AAC5B,qDAAqD;AACrD,2BAA4B;AAC5B,mDAA8E;AAE9E,oCAAoC;AACpC,kEAA8D;AAE9D,IAAY,MAGX;AAHD,WAAY,MAAM;IAChB,2BAAiB,CAAA;IACjB,uBAAa,CAAA;AACf,CAAC,EAHW,MAAM,GAAN,cAAM,KAAN,cAAM,QAGjB;AAkBD,MAAa,mBAAmB;IAO9B,YACmB,QAAgB,EAChB,MAAe,EACf,iBAA4B;QAF5B,aAAQ,GAAR,QAAQ,CAAQ;QAChB,WAAM,GAAN,MAAM,CAAS;QACf,sBAAiB,GAAjB,iBAAiB,CAAW;QALvC,kBAAa,GAAG,CAAC,kCAAe,CAAC,gBAAgB,EAAE,CAAC;QAO1D,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,IAAI,WAAM,EAAE,CAAC;IACjF,CAAC;IAED,OAAO,CAAC,QAAgB;QACtB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,uBAAM,CAAC,WAAI,CAAC,SAAS,EAAE,kCAAkC,CAAC,CAAC,CAAC;SAC/E;QAED,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,GAAG,CAAC,KAAK,CAAC,8BAA8B,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,sDAAsD;YACtD,gHAAgH;YAEhH,gEAAgE;YAChE,2CAA2C;YAC1C,YAAY,CAAC,QAAqB,GAAG;gBACpC,uBAAuB;gBACvB,wBAAwB;gBACxB,4BAA4B;gBAC5B,8BAA8B;gBAC9B,2BAA2B;gBAC3B,aAAa;aACd,CAAC;YAEF,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzE,IAAI,CAAC,OAAO,GAAG,mCAAmC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC3E;QAED,MAAM,aAAa,GAAkB;YACnC,QAAQ;YACR,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,aAAa,EAAE,IAAI,CAAC,aAAa;SAClC,CAAC;QAEF,MAAM,SAAS,GAAG,IAAI,+BAAc,EAAE,CAAC;QAEvC,IAAI;YACF,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,aAAa,EAAE,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YAE7F,6BAA6B;YAC7B,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAE3B,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,qCAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YAC/E,IAAI,KAAK,EAAE;gBACT,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;aACxB;YAED,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACvC,OAAO,GAAG,CAAC;SACZ;gBAAS;YACR,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACxB,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACrB;IACH,CAAC;CACF;AAzED,kDAyEC;AAED,SAAS,mCAAmC,CAAC,iBAA2B;IACtE,MAAM,WAAW,GAAa,EAAE,CAAC;IAEjC,wCAAwC;IACxC,MAAM,wBAAwB,GAAG,IAAI,GAAG,CAAC,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;IAEzF,KAAK,MAAM,OAAO,IAAI,iBAAiB,EAAE;QACvC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEhD,iFAAiF;QACjF,IAAI,WAAW,KAAK,SAAS,EAAE;YAC7B,WAAW,GAAG,KAAK,CAAC;SACrB;QAED,gFAAgF;QAChF,sFAAsF;QACtF,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE/B,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B;aAAM,IAAI,wBAAwB,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;YACpD,IAAI,WAAW,KAAK,QAAQ,IAAI,OAAO,KAAK,IAAI,EAAE;gBAChD,2FAA2F;gBAC3F,0FAA0F;gBAC1F,OAAO,GAAG,KAAK,CAAC;aACjB;YAED,WAAW,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,CAAC;SACzC;KACF;IAED,OAAO,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC;AACtD,CAAC","sourcesContent":["import * as browserslist from 'browserslist';\nimport { join } from 'path';\nimport * as findCacheDirectory from 'find-cache-dir';\nimport { tmpdir } from 'os';\nimport { MessageChannel, receiveMessageOnPort, Worker } from 'worker_threads';\n\nimport * as log from '../utils/log';\nimport { EsbuildExecutor } from '../esbuild/esbuild-executor';\n\nexport enum CssUrl {\n  inline = 'inline',\n  none = 'none',\n}\nexport interface WorkerOptions {\n  filePath: string;\n  basePath: string;\n  targets: string[];\n  browserslistData: string[];\n  cssUrl?: CssUrl;\n  styleIncludePaths?: string[];\n  cachePath: string;\n  alwaysUseWasm: boolean;\n}\n\nexport interface WorkerResult {\n  css: string;\n  warnings: string[];\n  error?: string;\n}\n\nexport class StylesheetProcessor {\n  private browserslistData: string[] | undefined;\n  private worker: Worker | undefined;\n  private readonly cachePath: string;\n  private targets: string[];\n  private alwaysUseWasm = !EsbuildExecutor.hasNativeSupport();\n\n  constructor(\n    private readonly basePath: string,\n    private readonly cssUrl?: CssUrl,\n    private readonly styleIncludePaths?: string[],\n  ) {\n    this.cachePath = findCacheDirectory({ name: 'ng-packagr-styles' }) || tmpdir();\n  }\n\n  process(filePath: string) {\n    if (!this.worker) {\n      this.worker = new Worker(join(__dirname, './stylesheet-processor-worker.js'));\n    }\n\n    if (!this.browserslistData) {\n      log.debug(`determine browserslist for ${this.basePath}`);\n      // By default, browserslist defaults are too inclusive\n      // https://github.com/browserslist/browserslist/blob/83764ea81ffaa39111c204b02c371afa44a4ff07/index.js#L516-L522\n\n      // We change the default query to browsers that Angular support.\n      // https://angular.io/guide/browser-support\n      (browserslist.defaults as string[]) = [\n        'last 1 Chrome version',\n        'last 1 Firefox version',\n        'last 2 Edge major versions',\n        'last 2 Safari major versions',\n        'last 2 iOS major versions',\n        'Firefox ESR',\n      ];\n\n      this.browserslistData = browserslist(undefined, { path: this.basePath });\n      this.targets = transformSupportedBrowsersToTargets(this.browserslistData);\n    }\n\n    const workerOptions: WorkerOptions = {\n      filePath,\n      basePath: this.basePath,\n      cssUrl: this.cssUrl,\n      styleIncludePaths: this.styleIncludePaths,\n      browserslistData: this.browserslistData,\n      cachePath: this.cachePath,\n      targets: this.targets,\n      alwaysUseWasm: this.alwaysUseWasm,\n    };\n\n    const ioChannel = new MessageChannel();\n\n    try {\n      const signal = new Int32Array(new SharedArrayBuffer(4));\n      this.worker.postMessage({ signal, port: ioChannel.port1, workerOptions }, [ioChannel.port1]);\n\n      // Sleep until signal[0] is 0\n      Atomics.wait(signal, 0, 0);\n\n      const { css, warnings, error } = receiveMessageOnPort(ioChannel.port2).message;\n      if (error) {\n        throw new Error(error);\n      }\n\n      warnings.forEach(msg => log.warn(msg));\n      return css;\n    } finally {\n      ioChannel.port1.close();\n      ioChannel.port2.close();\n      this.worker.unref();\n    }\n  }\n}\n\nfunction transformSupportedBrowsersToTargets(supportedBrowsers: string[]): string[] {\n  const transformed: string[] = [];\n\n  // https://esbuild.github.io/api/#target\n  const esBuildSupportedBrowsers = new Set(['safari', 'firefox', 'edge', 'chrome', 'ios']);\n\n  for (const browser of supportedBrowsers) {\n    let [browserName, version] = browser.split(' ');\n\n    // browserslist uses the name `ios_saf` for iOS Safari whereas esbuild uses `ios`\n    if (browserName === 'ios_saf') {\n      browserName = 'ios';\n    }\n\n    // browserslist uses ranges `15.2-15.3` versions but only the lowest is required\n    // to perform minimum supported feature checks. esbuild also expects a single version.\n    [version] = version.split('-');\n\n    if (browserName === 'ie') {\n      transformed.push('edge12');\n    } else if (esBuildSupportedBrowsers.has(browserName)) {\n      if (browserName === 'safari' && version === 'TP') {\n        // esbuild only supports numeric versions so `TP` is converted to a high number (999) since\n        // a Technology Preview (TP) of Safari is assumed to support all currently known features.\n        version = '999';\n      }\n\n      transformed.push(browserName + version);\n    }\n  }\n\n  return transformed.length ? transformed : undefined;\n}\n"]}