import { OnDestroy } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { Observable, Subject } from 'rxjs';
import { ToastrService, ToastToken } from 'ngx-toastr';
import { MessageConfig } from './enums';
import { FsMessageConfig } from './interfaces';
import { MessageDialogConfig } from './interfaces/message-dialog-config';
import { MessageToastConfig } from './interfaces/message-toast-config';
import { MessageBannerConfig } from './interfaces/message-banner-config';
import * as i0 from "@angular/core";
export declare class FsMessage implements OnDestroy {
    private toastr;
    private matDialog;
    private _toastToken;
    private _config;
    bannerMessages$: Subject<unknown>;
    private _dialogs;
    private _dialogsMessagesQueue;
    private _destroy$;
    constructor(toastr: ToastrService, matDialog: MatDialog, _toastToken: ToastToken, _config: FsMessageConfig);
    success(message: string, options?: MessageConfig): Observable<any>;
    info(message: string, options?: MessageConfig): Observable<any>;
    error(message: string, options?: MessageConfig): Observable<any>;
    warning(message: string, options?: MessageConfig): Observable<any>;
    show(type: string, message: string, options: MessageConfig): Observable<any>;
    hide(): void;
    toast(type: string, message: string, options: MessageToastConfig): void;
    banner(type: string, message: string, options: MessageBannerConfig): void;
    dialog(type: string, message: string, options: MessageDialogConfig): Observable<any>;
    getIconName(type: string): string;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsMessage, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<FsMessage>;
}
