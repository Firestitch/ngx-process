import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { MessageType } from '../../enums';
import { FsMessage } from '../../message.service';
import * as i0 from "@angular/core";
import * as i1 from "../../message.service";
import * as i2 from "@angular/material/icon";
import * as i3 from "@angular/common";
export class FsMessageComponent {
    constructor(_fsMessage) {
        this._fsMessage = _fsMessage;
        this.type = MessageType.Info;
        this.icon = 'info';
    }
    set fsType(value) {
        this.type = value;
    }
    set fsMessage(value) {
        this.message = value;
    }
    ngOnInit() {
        this.icon = this._fsMessage.getIconName(this.type);
    }
}
FsMessageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsMessageComponent, deps: [{ token: i1.FsMessage }], target: i0.ɵɵFactoryTarget.Component });
FsMessageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsMessageComponent, selector: "fs-message", inputs: { type: "type", message: "message", fsType: "fsType", fsMessage: "fsMessage" }, ngImport: i0, template: "<div class=\"fs-message-banner fs-message-{{ type }}\">\n  <mat-icon *ngIf=\"icon\" class=\"mat-icon material-icons\" role=\"img\">{{ icon }}</mat-icon>\n  <div class=\"message\">\n    {{ message }}\n    <ng-content></ng-content>\n  </div>\n</div>\n", components: [{ type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsMessageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'fs-message',
                    templateUrl: './message.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.FsMessage }]; }, propDecorators: { type: [{
                type: Input
            }], message: [{
                type: Input
            }], fsType: [{
                type: Input,
                args: ['fsType']
            }], fsMessage: [{
                type: Input,
                args: ['fsMessage']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvYXBwL2NvbXBvbmVudHMvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvY29tcG9uZW50cy9tZXNzYWdlL21lc3NhZ2UuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMxQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7O0FBT2xELE1BQU0sT0FBTyxrQkFBa0I7SUFpQjdCLFlBQW9CLFVBQXFCO1FBQXJCLGVBQVUsR0FBVixVQUFVLENBQVc7UUFmekIsU0FBSSxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUM7UUFhakMsU0FBSSxHQUFHLE1BQU0sQ0FBQztJQUV3QixDQUFDO0lBWjlDLElBQ0ksTUFBTSxDQUFDLEtBQUs7UUFDZCxJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBRUQsSUFDSSxTQUFTLENBQUMsS0FBSztRQUNqQixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBTU0sUUFBUTtRQUNiLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JELENBQUM7O2dIQXJCVSxrQkFBa0I7b0dBQWxCLGtCQUFrQiwwSUNUL0IsMlBBT0E7NEZERWEsa0JBQWtCO2tCQUw5QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxZQUFZO29CQUN0QixXQUFXLEVBQUUsMEJBQTBCO29CQUN2QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7Z0dBR2lCLElBQUk7c0JBQW5CLEtBQUs7Z0JBQ1UsT0FBTztzQkFBdEIsS0FBSztnQkFHRixNQUFNO3NCQURULEtBQUs7dUJBQUMsUUFBUTtnQkFNWCxTQUFTO3NCQURaLEtBQUs7dUJBQUMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1lc3NhZ2VUeXBlIH0gZnJvbSAnLi4vLi4vZW51bXMnO1xuaW1wb3J0IHsgRnNNZXNzYWdlIH0gZnJvbSAnLi4vLi4vbWVzc2FnZS5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZnMtbWVzc2FnZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9tZXNzYWdlLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIEZzTWVzc2FnZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgcHVibGljIHR5cGUgPSBNZXNzYWdlVHlwZS5JbmZvO1xuICBASW5wdXQoKSBwdWJsaWMgbWVzc2FnZTogc3RyaW5nO1xuXG4gIEBJbnB1dCgnZnNUeXBlJylcbiAgc2V0IGZzVHlwZSh2YWx1ZSkge1xuICAgIHRoaXMudHlwZSA9IHZhbHVlO1xuICB9XG5cbiAgQElucHV0KCdmc01lc3NhZ2UnKVxuICBzZXQgZnNNZXNzYWdlKHZhbHVlKSB7XG4gICAgdGhpcy5tZXNzYWdlID0gdmFsdWU7XG4gIH1cblxuICBwdWJsaWMgaWNvbiA9ICdpbmZvJztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9mc01lc3NhZ2U6IEZzTWVzc2FnZSkgeyB9XG5cbiAgcHVibGljIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaWNvbiA9IHRoaXMuX2ZzTWVzc2FnZS5nZXRJY29uTmFtZSh0aGlzLnR5cGUpO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiZnMtbWVzc2FnZS1iYW5uZXIgZnMtbWVzc2FnZS17eyB0eXBlIH19XCI+XG4gIDxtYXQtaWNvbiAqbmdJZj1cImljb25cIiBjbGFzcz1cIm1hdC1pY29uIG1hdGVyaWFsLWljb25zXCIgcm9sZT1cImltZ1wiPnt7IGljb24gfX08L21hdC1pY29uPlxuICA8ZGl2IGNsYXNzPVwibWVzc2FnZVwiPlxuICAgIHt7IG1lc3NhZ2UgfX1cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=