{"version":3,"file":"firestitch-message.umd.js","sources":["../../src/app/components/message-dialog/message-dialog.component.ts","../../src/app/components/message-dialog/message-dialog.component.html","../../src/app/enums.ts","../../src/app/injectors/message-config.ts","../../src/app/message.service.ts","../../src/app/components/message/message.component.ts","../../src/app/components/message/message.component.html","../../src/app/components/messages/messages.component.ts","../../src/app/fs-message.module.ts","../../src/public_api.ts","../../src/firestitch-message.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Inject, OnDestroy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { isObservable, Observable, of, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'fs-message-dialog',\n  templateUrl: './message-dialog.component.html',\n  styleUrls: ['./message-dialog.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsMessageDialogComponent implements OnDestroy {\n\n  private _destroy$ = new Subject();\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef<FsMessageDialogComponent>,\n  ) {}\n\n  public hide() {\n    this.dialogRef.close();\n  }\n\n  public buttonClick(button) {\n    if (button.click) {\n      const result = button.click();\n      const observable$ = isObservable(result) ? result : of(true);\n\n      observable$\n        .pipe(\n          takeUntil(this._destroy$),\n        )\n        .subscribe(() => {\n          this.hide();\n        });\n\n    } else {\n      this.hide();\n    }\n  }\n\n  public ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n}\n","<div class=\"fs-message-{{ data.type }}\">\n  <div mat-dialog-title fxLayout=\"row\" fxLayoutAlign=\"start center\">\n    <mat-icon>{{ data.icon }}</mat-icon>\n    <span>{{ data.options.title }}</span>\n  </div>\n  <mat-dialog-content [innerHTML]=\"data.message\"></mat-dialog-content>\n  <mat-dialog-actions>\n    <button mat-button (click)=\"hide()\" *ngIf=\"!data.options.buttons\" color=\"primary\">OK</button>\n    <button mat-button *ngFor=\"let button of data.options.buttons || []\" (click)=\"buttonClick(button)\" [color]=\"button.color\">{{button.label}}</button>\n  </mat-dialog-actions>\n</div>\n","import { MessageBannerConfig, MessageDialogConfig, MessageToastConfig } from './interfaces';\n\nexport enum MessageType {\n  Success = 'success',\n  Info = 'info',\n  Error = 'error',\n  Warning = 'warning'\n}\n\nexport enum MessageMode {\n  Dialog = 'dialog',\n  Toast = 'toast',\n  Banner = 'banner'\n}\n\nexport type MessageConfig = MessageDialogConfig | MessageToastConfig | MessageBannerConfig;\n","import { InjectionToken } from '@angular/core';\n\nexport const FS_MESSAGE_CONFIG = new InjectionToken<any[]>('fs-message.config');\nexport const FS_MESSAGE_DEFAULT_CONFIG = new InjectionToken<any[]>('fs-message.default-config');\n","import { Injectable, OnDestroy, Inject } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { takeUntil } from 'rxjs/operators';\nimport { Observable, Subject, of } from 'rxjs';\n\nimport { ToastrService, TOAST_CONFIG, ToastToken } from 'ngx-toastr';\n\nimport { FsMessageDialogComponent } from './components/message-dialog/message-dialog.component';\nimport { MessageType, MessageMode, MessageConfig } from './enums';\nimport { FS_MESSAGE_CONFIG } from './injectors/message-config';\nimport { FsMessageConfig } from './interfaces';\nimport { MessageDialogConfig } from './interfaces/message-dialog-config';\nimport { MessageToastConfig } from './interfaces/message-toast-config';\nimport { MessageBannerConfig } from './interfaces/message-banner-config';\n\n\n@Injectable()\nexport class FsMessage implements OnDestroy {\n\n  public bannerMessages$ = new Subject();\n\n  private _dialogs = 0;\n  private _dialogsMessagesQueue = [];\n  private _destroy$ = new Subject<void>();\n\n  constructor(\n    private toastr: ToastrService,\n    private matDialog: MatDialog,\n    @Inject(TOAST_CONFIG) private _toastToken: ToastToken,\n    @Inject(FS_MESSAGE_CONFIG) private _config: FsMessageConfig,\n  ) { }\n\n  public success(message: string, options: MessageConfig = {}): Observable<any> {\n    return this.show(MessageType.Success, message, { title: 'Success', mode: this._config.successMode, ...options });\n  }\n\n  public info(message: string, options: MessageConfig = {}): Observable<any> {\n    return this.show(MessageType.Info, message, { title: 'Information', mode: this._config.infoMode, ...options });\n  }\n\n  public error(message: string, options: MessageConfig = {}): Observable<any> {\n    return this.show(MessageType.Error, message, { title: 'Attention', mode: this._config.errorMode, ...options });\n  }\n\n  public warning(message: string, options: MessageConfig = {}): Observable<any> {\n    return this.show(MessageType.Warning, message, { title: 'Warning', mode: this._config.warningMode, ...options });\n  }\n\n  public show(type: string, message: string, options: MessageConfig): Observable<any> {\n    options = options || {};\n    if (options.icon === undefined) {\n      options.icon = this.getIconName(type);\n    }\n\n    switch (options.mode) {\n      case MessageMode.Toast:\n        this.toast(type, message, options);\n        break;\n      case MessageMode.Banner:\n        this.banner(type, message, options);\n        break;\n      case MessageMode.Dialog:\n        return this.dialog(type, message, options);\n    }\n\n    return of();\n  }\n\n  public hide(): void {\n    this.toastr.clear();\n    this.bannerMessages$.next();\n    this.matDialog.closeAll();\n  }\n\n  public toast(type: string, message: string, options: MessageToastConfig): void {\n    const opts: any = options;\n    opts.enableHtml = true;\n    opts.positionClass = options.positionClass || this._toastToken.config.positionClass || 'toast-bottom-left';\n    opts.timeOut = (options.timeout || this._config.toastTimeout) * 1000;\n\n    const icon = opts.icon ? `<div class=\"mat-icon material-icons\">${ opts.icon }</div>` : '';\n    const template = `<div class=\"mat-toast-content\">${icon}<div class=\"message\">${message}</div></div>`;\n\n    this.toastr[type](template, '', opts);\n  }\n\n  public banner(type: string, message: string, options: MessageBannerConfig): void {\n    this.bannerMessages$.next({\n      type: type,\n      msg: message,\n      timeout: (options.timeout || this._config.bannerTimeout || 5) * 1000\n    });\n  }\n\n  public dialog(type: string, message: string, options: MessageDialogConfig): Observable<any> {\n    const typeMessage = type + message;\n\n    if (this._dialogsMessagesQueue.indexOf(typeMessage) > -1) {\n      return of(true);\n    }\n\n    this._dialogsMessagesQueue.push(typeMessage);\n    this._dialogs++;\n\n    const dialogRef = this.matDialog.open(FsMessageDialogComponent, {\n      /* Waiting for MatDialog to support array of classes like panelClass\n      backdropClass: ['fs-message-backdrop',\n                      'fs-message-backdrop-' + type,\n                      options.backdropClass], */\n      backdropClass: options.backdropClass,\n      width: options.width || this._config.dialogWidth,\n      data: { type: type, message: message, options: options, icon: this.getIconName(type) },\n      panelClass: [\n        'fs-message-pane',\n        'fs-message-pane-' + type,\n        options.panelClass,\n      ],\n    });\n\n    dialogRef.afterClosed()\n      .pipe(\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this._dialogs--;\n\n        const dialogMessageIdx = this._dialogsMessagesQueue.indexOf(typeMessage);\n        if (dialogMessageIdx > -1) {\n          this._dialogsMessagesQueue.splice(dialogMessageIdx, 1);\n        }\n      });\n\n    return dialogRef.afterClosed();\n  }\n\n  public getIconName(type: string): string {\n    switch (type) {\n      case MessageType.Success:\n        return 'done';\n      case MessageType.Error:\n        return 'report_problem';\n      case MessageType.Info:\n        return 'info';\n      case MessageType.Warning:\n        return 'report_problem';\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { MessageType } from '../../enums';\nimport { FsMessage } from '../../message.service';\n\n@Component({\n  selector: 'fs-message',\n  templateUrl: './message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsMessageComponent implements OnInit {\n\n  @Input() public type = MessageType.Info;\n  @Input() public message: string;\n\n  @Input('fsType')\n  set fsType(value) {\n    this.type = value;\n  }\n\n  @Input('fsMessage')\n  set fsMessage(value) {\n    this.message = value;\n  }\n\n  public icon = 'info';\n\n  constructor(private _fsMessage: FsMessage) { }\n\n  public ngOnInit() {\n    this.icon = this._fsMessage.getIconName(this.type);\n  }\n}\n","<div class=\"fs-message-banner fs-message-{{ type }}\">\n  <mat-icon *ngIf=\"icon\" class=\"mat-icon material-icons\" role=\"img\">{{ icon }}</mat-icon>\n  <div class=\"message\">\n    {{ message }}\n    <ng-content></ng-content>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { remove } from 'lodash-es';\n\nimport { FsMessage } from '../../message.service';\n\n\n@Component({\n  selector: 'fs-messages',\n  template: `<fs-message *ngFor=\"let item of messages\" [fsType]=\"item.type\" [fsMessage]=\"item.msg\"></fs-message>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsMessagesComponent implements OnInit, OnDestroy {\n\n  public messages = [];\n\n  private _destroy$ = new Subject<void>();\n\n  constructor(\n    private _fsMessage: FsMessage,\n    private _cdRef: ChangeDetectorRef,\n  ) {}\n\n  public ngOnInit () {\n    this._fsMessage\n      .bannerMessages$\n      .pipe(\n        takeUntil(this._destroy$),\n      )\n      .subscribe((message: any) => {\n        if (!message) {\n          this.messages = [];\n        } else {\n          this.messages.push(message);\n\n          if (message.timeout) {\n            setTimeout(() => {\n              remove(this.messages, (item) => {\n                return item === message;\n              });\n\n              this._cdRef.markForCheck();\n            }, message.timeout);\n          }\n        }\n\n        this._cdRef.markForCheck();\n      });\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","import { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { merge } from 'lodash-es';\n\nimport { FsMessageDialogComponent } from './components/message-dialog/message-dialog.component';\nimport { FsMessagesComponent } from './components/messages/messages.component';\nimport { FsMessageComponent } from './components/message/message.component';\nimport { FsMessage } from './message.service';\nimport { FsMessageConfig } from './interfaces/fs-message-config';\nimport { FS_MESSAGE_CONFIG, FS_MESSAGE_DEFAULT_CONFIG } from './injectors/message-config';\nimport { MessageMode } from './enums';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  exports: [\n    FsMessagesComponent,\n    FsMessageComponent\n  ],\n  entryComponents: [\n    FsMessageDialogComponent\n  ],\n  declarations: [\n    FsMessagesComponent,\n    FsMessageComponent,\n    FsMessageDialogComponent\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class FsMessageModule {\n\n  static forRoot(config: FsMessageConfig = {}): ModuleWithProviders<FsMessageModule> {\n    return {\n      ngModule: FsMessageModule,\n      providers: [\n        FsMessage,\n        { provide: FS_MESSAGE_DEFAULT_CONFIG, useValue: config },\n        {\n          provide: FS_MESSAGE_CONFIG,\n          useFactory: FsMessageConfigFactory,\n          deps: [FS_MESSAGE_DEFAULT_CONFIG]\n        },\n      ]\n    };\n  }\n}\n\n\nexport function FsMessageConfigFactory(config: FsMessageConfig) {\n  return merge({\n    toastTimeout: 5,\n    bannerTimeout: 5,\n    dialogWidth: '500px',\n    successMode: MessageMode.Toast,\n    errorMode: MessageMode.Dialog,\n    warningMode: MessageMode.Toast,\n    infoMode: MessageMode.Toast\n  }, config);\n}","/*\n * Public API Surface of fs-menu\n */\n\n// Modules\nexport { FsMessageModule } from './app/fs-message.module';\n\n// Components\nexport { FsMessagesComponent } from './app/components/messages/messages.component';\nexport { FsMessageComponent } from './app/components/message/message.component';\n\n// Services\nexport { FsMessage } from './app/message.service';\nexport { MessageMode, MessageType, MessageConfig } from './app/enums';\n\nexport { FsMessageConfig } from './app/interfaces/fs-message-config';\nexport { MessageBannerConfig } from './app/interfaces/message-banner-config';\nexport { MessageDialogConfig } from './app/interfaces/message-dialog-config';\nexport { MessageToastConfig } from './app/interfaces/message-toast-config';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Subject","isObservable","of","takeUntil","i0","MAT_DIALOG_DATA","i1","i2","i3","i4","Component","ChangeDetectionStrategy","Inject","MessageType","MessageMode","InjectionToken","TOAST_CONFIG","Injectable","i1.FsMessage","Input","remove","i2.FsMessageComponent","CommonModule","MatDialogModule","MatIconModule","MatButtonModule","NgModule","CUSTOM_ELEMENTS_SCHEMA","merge"],"mappings":"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"}