import { EventEmitter, ChangeDetectorRef, OnChanges, OnDestroy, TemplateRef, SimpleChanges } from '@angular/core';
import { Subject } from 'rxjs';
import { FsGroupMenuItemTemplateDirective } from '../group-menu-item-template/fs-group-menu-item-template.directive';
import * as i0 from "@angular/core";
export declare class FsMenuItemDirective implements OnChanges, OnDestroy {
    cd: ChangeDetectorRef;
    templateRef: TemplateRef<any>;
    parent: FsMenuItemDirective;
    ngClass: any[];
    cssClass: string;
    cssId: string;
    label: any;
    hidden: boolean;
    groupHidden: any;
    dismissAfterClick: boolean;
    link: any[] | string;
    target: string;
    queryParams: {
        [k: string]: any;
    };
    click$: EventEmitter<any>;
    set itemsElements(value: any);
    childrenItems: FsMenuItemDirective[];
    itemChange$: Subject<unknown>;
    private _groupItemTemplateRef;
    private _isGroup;
    constructor(cd: ChangeDetectorRef, templateRef: TemplateRef<any>, parent: FsMenuItemDirective);
    get isGroup(): boolean;
    get visible(): boolean;
    get groupItemTemplateRef(): TemplateRef<FsGroupMenuItemTemplateDirective>;
    ngOnChanges(changes: SimpleChanges): void;
    checkChildrenVisibility(): void;
    ngOnDestroy(): void;
    click(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsMenuItemDirective, [null, { optional: true; }, { optional: true; skipSelf: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<FsMenuItemDirective, "fs-menu-group,[fs-menu-item]", never, { "ngClass": "fsClass"; "cssClass": "class"; "cssId": "id"; "label": "label"; "hidden": "hidden"; "groupHidden": "groupHidden"; "dismissAfterClick": "dismissAfterClick"; "link": "link"; "target": "target"; "queryParams": "queryParams"; }, { "click$": "click"; }, ["_groupItemTemplateRef", "itemsElements"]>;
}
