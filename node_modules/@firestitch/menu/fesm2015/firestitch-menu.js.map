{"version":3,"file":"firestitch-menu.js","sources":["../../src/app/helpers/create-items-observer.ts","../../src/app/components/fs-menu/bottom-sheet/bottom-items-list/bottom-items-list.component.ts","../../src/app/components/fs-menu/bottom-sheet/bottom-items-list/bottom-items-list.component.html","../../src/app/components/fs-menu/bottom-sheet/fs-bottom-sheet.component.ts","../../src/app/components/fs-menu/bottom-sheet/fs-bottom-sheet.component.html","../../src/app/directives/group-menu-item-template/fs-group-menu-item-template.directive.ts","../../src/app/directives/menu-item/fs-menu-item.directive.ts","../../src/app/directives/menu-title/fs-menu-title.directive.ts","../../src/app/components/fs-menu/menu-items-list/menu-items-list.component.ts","../../src/app/components/fs-menu/menu-items-list/menu-items-list.component.html","../../src/app/components/fs-menu/fs-menu.component.ts","../../src/app/components/fs-menu/fs-menu.component.html","../../src/app/directives/menu-trigger/fs-menu-trigger.directive.ts","../../src/app/fs-menu.module.ts","../../src/public_api.ts","../../src/firestitch-menu.ts"],"sourcesContent":["import { merge } from 'rxjs';\nimport { FsMenuItemDirective } from '../directives/menu-item/fs-menu-item.directive';\n\n\nexport function createItemsObserver(data: FsMenuItemDirective[]) {\n  const itemsObservables = data.reduce((acc, item) => {\n\n    if (item.itemChange$) {\n      acc.push(item.itemChange$);\n    }\n\n    return acc;\n  }, []);\n\n  return merge(...itemsObservables);\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\n\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\n\nimport { FsMenuItemDirective } from '../../../../directives/menu-item/fs-menu-item.directive';\nimport { createItemsObserver } from '../../../../helpers/create-items-observer';\n\n@Component({\n  selector: 'fs-bottom-items-list',\n  templateUrl: './bottom-items-list.component.html',\n  styleUrls: [ './bottom-items-list.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BottomItemsListComponent implements OnInit, OnChanges {\n\n  @Input()\n  public items: FsMenuItemDirective[];\n\n  @Input()\n  public parentVisible: boolean;\n\n  private _destroy$ = new Subject();\n\n  constructor(\n    private _bottomSheetRef: MatBottomSheetRef<any>,\n    private _cdRef: ChangeDetectorRef,\n  ) {\n    this._cdRef.detach();\n  }\n\n  public ngOnInit() {\n    this._cdRef.detectChanges();\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.items) {\n      this._destroy$.next();\n\n      this.subscribeToChanges();\n    }\n  }\n\n  /**\n   * For improve ngFor perf\n   * @param index\n   */\n  public trackBy(index) {\n    return index;\n  }\n\n  /**\n   * Click on element\n   * @param event\n   * @param item\n   */\n  public click(event, item) {\n    event.preventDefault();\n\n    const subscription = this._bottomSheetRef.afterDismissed()\n      .pipe(\n        take(1),\n      )\n      .subscribe(() => {\n\n        if (item?.click) {\n          item.click(event)\n        }\n\n        subscription.unsubscribe();\n      });\n\n    if (item?.dismissAfterClick) {\n      this._bottomSheetRef.dismiss();\n    }\n  }\n\n  /**\n   * Subscribe to changes in directive parameters.\n   * For example we must start detect changes if [hidden] param was changed\n   */\n  private subscribeToChanges() {\n    if (this.items && this.items.length) {\n      createItemsObserver(this.items)\n        .pipe(\n          takeUntil(this._destroy$)\n        )\n        .subscribe(() => {\n          this._cdRef.detectChanges();\n        });\n    }\n  }\n\n}\n","<ng-container *ngFor=\"let item of items; trackBy: trackBy\">\n  <ng-container *ngIf=\"item.isGroup else menuItem\">\n    <div class=\"mat-menu-item\" [hidden]=\"!item.visible\" disabled>\n      <ng-container *ngIf=\"!!item.label; else tpl\">\n        {{ item.label }}\n      </ng-container>\n      <ng-template #tpl\n                   [ngTemplateOutlet]=\"item.groupItemTemplateRef\">\n      </ng-template>\n    </div>\n    <fs-bottom-items-list [items]=\"item.childrenItems\"\n                          [hidden]=\"!item.visible\"\n                          [parentVisible]=\"item.visible\"\n                          class=\"group\">\n    </fs-bottom-items-list>\n  </ng-container>\n  <ng-template #menuItem>\n    <ng-container *ngIf=\"item.visible\">\n      <ng-container *ngIf=\"item.link; else btnLikeAction\">\n        <a (click)=\"click($event, item)\"\n           [routerLink]=\"item.link\"\n           [queryParams]=\"item.queryParams\"\n           [target]=\"item.target\"\n           [class]=\"'mat-menu-item ' + item.cssClass\"\n           [ngClass]=\"item.ngClass\"\n           [id]=\"item.cssId\"\n        >\n          <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\n        </a>\n      </ng-container>\n      <ng-template #btnLikeAction>\n        <a (click)=\"click($event, item)\"\n           [class]=\"'mat-menu-item ' + item.cssClass\"\n           [ngClass]=\"item.ngClass\"\n           [id]=\"item.cssId\"\n        >\n          <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\n        </a>\n      </ng-template>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  OnInit,\n} from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\n\n@Component({\n  selector: 'fs-bottom-sheet',\n  templateUrl: './fs-bottom-sheet.component.html',\n  styleUrls: ['./fs-bottom-sheet.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsBottomSheetComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    private _cd: ChangeDetectorRef\n  ) {}\n\n  public ngOnInit(): void {\n    this._cd.detectChanges();\n  }\n}\n","<mat-nav-list class=\"{{ data.klass }}\">\n  <div class=\"fs-menu-title\" *ngIf=\"data.titleTemplate\">\n    <ng-template [ngTemplateOutlet]=\"data.titleTemplate\"></ng-template>\n  </div>\n  <div class=\"fs-menu-container\" [ngClass]=\"{ 'with-title': !!data.titleTemplate }\">\n    <fs-bottom-items-list [items]=\"data.items\"></fs-bottom-items-list>\n  </div>\n</mat-nav-list>\n","import {\n  Directive,\n  ContentChildren,\n  TemplateRef,\n} from '@angular/core';\n\n\n@Directive({\n  selector: '[fs-group-menu-item-template]'\n})\nexport class FsGroupMenuItemTemplateDirective {\n\n  @ContentChildren(FsGroupMenuItemTemplateDirective)\n  public groupMenuItemTemplateRef: TemplateRef<FsGroupMenuItemTemplateDirective>;\n}\n","import {\n  EventEmitter,\n  ChangeDetectorRef,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  ContentChildren,\n  TemplateRef,\n  SimpleChanges,\n  Optional,\n  SkipSelf,\n  ContentChild,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { FsGroupMenuItemTemplateDirective } from '../group-menu-item-template/fs-group-menu-item-template.directive';\n\n\n@Directive({\n  selector: 'fs-menu-group,[fs-menu-item]'\n})\nexport class FsMenuItemDirective implements OnChanges, OnDestroy {\n  @Input('fsClass') public ngClass = [];\n  @Input('class') public cssClass = '';\n  @Input('id') public cssId = '';\n  @Input() public label;\n  @Input() public hidden = false;\n  @Input() public groupHidden; // used only for groups\n  @Input() public dismissAfterClick = true;\n  @Input() public link: any[] | string;\n  @Input() public target: string = null;\n  @Input() public queryParams: { [k: string]: any } = {};\n\n  @Output('click') public click$ = new EventEmitter();\n\n  @ContentChildren(FsMenuItemDirective)\n  public set itemsElements(value) {\n    this.childrenItems = value.toArray()\n      .filter((child) => child !== this);\n\n    this._isGroup = !!this.childrenItems;\n    this.checkChildrenVisibility();\n\n    this.itemChange$.next();\n  }\n\n  public childrenItems: FsMenuItemDirective[];\n\n  public itemChange$ = new Subject();\n\n  @ContentChild(FsGroupMenuItemTemplateDirective, { read: TemplateRef })\n  private _groupItemTemplateRef;\n\n  private _isGroup = false;\n\n  constructor(\n    public cd: ChangeDetectorRef,\n    @Optional() public templateRef: TemplateRef<any>,\n    @SkipSelf() @Optional() public parent: FsMenuItemDirective,\n  ) {}\n\n  get isGroup() {\n    return this._isGroup;\n  }\n\n  get visible() {\n    if (this.groupHidden !== void 0) {\n      return !this.groupHidden;\n    } else {\n      return !this.hidden;\n    }\n  }\n\n  get groupItemTemplateRef(): TemplateRef<FsGroupMenuItemTemplateDirective> {\n    return this._groupItemTemplateRef;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.isGroup && this.parent && changes.hidden && !changes.hidden.firstChange) {\n      this.parent.checkChildrenVisibility();\n    }\n\n    this.itemChange$.next();\n  }\n\n  public checkChildrenVisibility() {\n    if (this.childrenItems) {\n      this.hidden = this.childrenItems.every((item) => item.hidden);\n    }\n  }\n\n  public ngOnDestroy() {\n    this.itemChange$.complete();\n  }\n\n  public click(event) {\n    this.click$.next(event);\n  }\n}\n","import { Directive, } from '@angular/core';\n\n\n@Directive({\n  selector: '[fs-menu-title]'\n})\nexport class FsMenuTitleDirective {\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { createItemsObserver } from '../../../helpers/create-items-observer';\nimport { FsMenuItemDirective } from '../../../directives/menu-item/fs-menu-item.directive';\n\n\n@Component({\n  selector: 'fs-menu-items-list',\n  templateUrl: './menu-items-list.component.html',\n  styleUrls: [ './menu-items-list.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MenuItemsListComponent implements OnChanges, OnDestroy {\n\n  @Input()\n  public items: FsMenuItemDirective[];\n\n  @Input()\n  public parentVisible: boolean;\n\n  private _destroy$ = new Subject();\n\n  constructor(private _cdRef: ChangeDetectorRef) {}\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.items) {\n      this._cdRef.detectChanges();\n      this._destroy$.next();\n\n      this.subscribeToChanges();\n    }\n  }\n\n  public ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  /**\n   * For improve ngFor perf\n   * @param index\n   */\n  public trackBy(index) {\n    return index;\n  }\n\n\n  /**\n   * Subscribe to changes in directive parameters.\n   * For example we must start detect changes if [hidden] param was changed\n   */\n  private subscribeToChanges() {\n    if (this.items && this.items.length) {\n      createItemsObserver(this.items)\n        .pipe(\n          takeUntil(this._destroy$)\n        )\n        .subscribe(() => {\n          this._cdRef.detectChanges();\n        });\n    }\n  }\n}\n","<ng-container *ngFor=\"let item of items; trackBy: trackBy\">\n  <ng-container *ngIf=\"item.isGroup; else menuItem\">\n    <div class=\"fs-menu-groupped-list\" [hidden]=\"!item.visible\">\n      <div class=\"mat-menu-item fs-menu-group-label\" disabled>\n        <ng-container *ngIf=\"!!item.label; else tpl\">\n          {{ item.label }}\n        </ng-container>\n        <ng-template #tpl\n                     [ngTemplateOutlet]=\"item.groupItemTemplateRef\">\n        </ng-template>\n      </div>\n      <fs-menu-items-list [items]=\"item.childrenItems\"\n                          [parentVisible]=\"item.visible\">\n      </fs-menu-items-list>\n    </div>\n  </ng-container>\n  <ng-template #menuItem>\n    <ng-container *ngIf=\"item.link; else btn\">\n      <a\n        mat-menu-item\n        *ngIf=\"item.visible\"\n        [routerLink]=\"item.link\"\n        [queryParams]=\"item.queryParams\"\n        [target]=\"item.target\"\n        (click)=\"item.click($event)\"\n        [class]=\"item.cssClass\"\n        [ngClass]=\"item.ngClass\"\n        [id]=\"item.cssId\">\n        <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\n      </a>\n    </ng-container>\n    <ng-template #btn>\n      <button type=\"button\"\n              mat-menu-item\n              *ngIf=\"item.visible\"\n              (click)=\"item.click($event)\"\n              [class]=\"item.cssClass\"\n              [ngClass]=\"item.ngClass\"\n              [id]=\"item.cssId\"\n      >\n        <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n  </ng-template>\n</ng-container>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\n\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\n\nimport { FsBottomSheetComponent } from './bottom-sheet/fs-bottom-sheet.component';\n\nimport { FsMenuItemDirective } from '../../directives/menu-item/fs-menu-item.directive';\nimport { FsMenuTitleDirective } from '../../directives/menu-title/fs-menu-title.directive';\n\n\n@Component({\n  selector: 'fs-menu',\n  templateUrl: 'fs-menu.component.html',\n  styleUrls: [ 'fs-menu.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsMenuComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @Input('class') public klass = null;\n  @Input('buttonClass') public buttonClass = '';\n\n  @Output()\n  public opened = new EventEmitter<void>();\n\n  @Output()\n  public closed = new EventEmitter<void>();\n\n  public static MOBILE_BREAKPOINT = '(max-width: 599px)';\n\n  // Items with TemplateRefs and DirectiveRef for passing to bottomSheet\n  public items: FsMenuItemDirective[] = [];\n\n  public useInternalTrigger = false;\n  public mobile = false;\n  public menuOpened = false;\n  public initialized = false;\n\n  /** Title **/\n  @ContentChild(FsMenuTitleDirective, { read: TemplateRef })\n  public titleTemplate;\n\n  @ContentChildren(FsMenuItemDirective)\n  set itemsElements(value) {\n    this.items = value.toArray();\n  }\n\n  // Catch trigger for matMenu\n  @ViewChild(MatMenuTrigger)\n  set internalMatMenuTrigger(val) {\n    if (val) {\n      this.useInternalTrigger = true;\n    }\n\n    this._internalMatMenuTrigger = val;\n  };\n\n  set externalMatMenuTrigger(val) {\n    this.useInternalTrigger = false;\n    this._externalMatMenuTrigger = val;\n\n    this._cd.detectChanges();\n  }\n\n  @ViewChild('fsMenu', { static: true })\n  public fsMenuRef: MatMenu;\n\n  private _internalMatMenuTrigger;\n  private _externalMatMenuTrigger;\n\n  private _resolutionChanged = false;\n\n  // Active bottom sheet that was opened\n  private _activeSheetRef: MatBottomSheetRef = null;\n\n  private _destroy$ = new Subject();\n\n  constructor(\n    private _bottomSheet: MatBottomSheet,\n    private _breakpointObserver: BreakpointObserver,\n    private _cd: ChangeDetectorRef,\n  ) {\n    this._cd.detach();\n  }\n\n  set resolutionChanged(val) {\n    this._resolutionChanged = val;\n  }\n\n  get resolutionChanged() {\n    return this._resolutionChanged;\n  }\n\n  get matMenuTrigger() {\n    if (this.useInternalTrigger) {\n      return this._internalMatMenuTrigger;\n    } else {\n      return this._externalMatMenuTrigger;\n    }\n  }\n\n  public ngOnInit() {\n    this.subscribeToResChanges();\n    this.initialized = true;\n\n    this._cd.detectChanges();\n  }\n\n  public ngAfterViewInit(): void {\n    if (!this._externalMatMenuTrigger) {\n      this.useInternalTrigger = true;\n      this._cd.detectChanges();\n    }\n  }\n\n  public ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  /**\n   * Subscribe to window resolution changes\n   * and switch between mobile and desktop\n   */\n  public subscribeToResChanges() {\n    const layoutChanges = this._breakpointObserver.observe([\n      FsMenuComponent.MOBILE_BREAKPOINT,\n    ]);\n\n    layoutChanges\n      .pipe(\n        debounceTime(500),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(result => {\n        // Set mobile/desktop flag\n        this.mobile = result.breakpoints[FsMenuComponent.MOBILE_BREAKPOINT];\n\n        if (this.menuOpened) {\n\n          // Flag that menus was closed not by user\n          this.resolutionChanged = true;\n\n          if (this.mobile) {\n            this.closeMatMenu();\n            this.openSheetMenu();\n          } else {\n            this.closeSheetMenu();\n\n            // Must be here because we should wait till menuTrigger will be catched by @ViewChild\n            setTimeout(() => {\n              if (this.matMenuTrigger) {\n                this.matMenuTrigger.openMenu();\n\n                // Detect changes because for strategies like OnPush if won't detected by default\n                this._cd.detectChanges();\n              }\n            });\n          }\n\n          // Detect changes because for strategies like OnPush if won't detected by default\n          this._cd.detectChanges();\n        } else {\n          // Detect changes because for strategies like OnPush if won't detected by default\n          this._cd.detectChanges();\n        }\n      });\n  }\n\n  /**\n   * Open fs menu depends from mode\n   */\n  public openMenu() {\n    if (this.mobile) {\n      this.openSheetMenu();\n    } else {\n      this.openMatMenu();\n    }\n\n    this.opened.emit();\n\n    this._cd.detectChanges();\n  }\n\n  /**\n   * Close fs menu depends from mode\n   */\n  public closeMenu() {\n    if (this.mobile) {\n      this.closeSheetMenu();\n    } else {\n      this.closeMatMenu();\n    }\n  }\n\n  /**\n   * Open Mat Menu\n   */\n  public openMatMenu() {\n    this.menuOpened = true;\n    this.resolutionChanged = false;\n\n    this.matMenuTrigger.openMenu();\n  }\n\n  /**\n   * Close Mat Menu\n   */\n  public closeMatMenu() {\n    if (this.matMenuTrigger) {\n      this.matMenuTrigger.closeMenu();\n    }\n  }\n\n  /**\n   * After menu close event\n   */\n  public closedMatMenu() {\n    if (!this.resolutionChanged) {\n      this.menuOpened = false;\n    }\n\n    this.resolutionChanged = false;\n\n    this.closed.emit();\n  }\n\n  /**\n   * Open Mat Bottom Sheet\n   */\n  public openSheetMenu() {\n    this._activeSheetRef = this._bottomSheet.open(FsBottomSheetComponent, {\n      data: { items: this.items, titleTemplate: this.titleTemplate, klass: this.klass }\n    });\n\n    this.menuOpened = true;\n\n    this._activeSheetRef.afterDismissed()\n      .pipe(\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        if (!this.resolutionChanged) {\n          this.menuOpened = false;\n        }\n\n        this.resolutionChanged = false;\n      })\n  }\n\n  /**\n   * Close Mat Bottom Sheet\n   */\n  public closeSheetMenu() {\n    if (this._activeSheetRef) {\n      this._activeSheetRef.dismiss();\n    }\n  }\n}\n","<ng-template [ngIf]=\"!mobile\" [ngIfElse]=\"sheetMenu\">\n  <button type=\"button\"\n          [ngClass]=\"buttonClass\"\n          mat-icon-button\n          *ngIf=\"useInternalTrigger\"\n          [matMenuTriggerFor]=\"fsMenu\"\n          #menuTrigger=\"matMenuTrigger\"\n          (click)=\"openMenu()\"\n  >\n    <mat-icon>more_vert</mat-icon>\n  </button>\n</ng-template>\n\n<ng-template #sheetMenu>\n  <button type=\"button\"\n          mat-icon-button\n          [ngClass]=\"buttonClass\"\n          *ngIf=\"useInternalTrigger\"\n          (click)=\"openMenu()\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n</ng-template>\n\n\n<mat-menu #fsMenu=\"matMenu\" [class]=\"klass\" (close)=\"closedMatMenu()\">\n  <div class=\"mat-menu-item fs-menu-title\" *ngIf=\"titleTemplate\" disabled>\n    <ng-template [ngTemplateOutlet]=\"titleTemplate\"></ng-template>\n  </div>\n  <div class=\"fs-menu-container\" [ngClass]=\"{ 'with-title': !!titleTemplate }\">\n    <fs-menu-items-list [items]=\"items\"></fs-menu-items-list>\n  </div>\n</mat-menu>\n","import {\n  Directive,\n  Input,\n  Optional,\n  Inject,\n  Self,\n  ElementRef,\n  ViewContainerRef,\n  OnInit,\n} from '@angular/core';\nimport { MatMenuTrigger, MatMenu, MatMenuItem, MAT_MENU_SCROLL_STRATEGY } from '@angular/material/menu';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\nimport { FsMenuComponent } from '../../components/fs-menu/fs-menu.component';\n\n\n@Directive({\n  selector: '[fsMenuTriggerFor]',\n})\nexport class FsMenuTriggerDirective extends MatMenuTrigger implements OnInit {\n\n  @Input('fsMenuTriggerFor') public fsMenu: FsMenuComponent = null;\n\n  constructor(\n    _overlay: Overlay,\n    _element: ElementRef<HTMLElement>,\n    _viewContainerRef: ViewContainerRef,\n    @Inject(MAT_MENU_SCROLL_STRATEGY) scrollStrategy: any,\n    @Optional() _parentMenu: MatMenu,\n    @Optional() @Self() _menuItemInstance: MatMenuItem,\n    @Optional() _dir: Directionality,\n    _focusMonitor?: FocusMonitor\n  ) {\n    super(\n      _overlay,\n      _element,\n      _viewContainerRef,\n      scrollStrategy,\n      _parentMenu,\n      _menuItemInstance,\n      _dir,\n      _focusMonitor\n    );\n  }\n\n  public ngOnInit(): void {\n    this.menu = this.fsMenu.fsMenuRef;\n    this.fsMenu.externalMatMenuTrigger = this;\n  }\n\n  _handleKeydown(event: KeyboardEvent): void {\n    this._triggerClick();\n  }\n\n  /** Handles click events on the trigger. */\n  _handleClick(event: MouseEvent): void {\n    this._triggerClick();\n  }\n\n  private _triggerClick() {\n    if (this.fsMenu.menuOpened) {\n      this.fsMenu.closeMenu();\n    } else {\n      this.fsMenu.openMenu();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { RouterModule } from '@angular/router';\n\nimport { FsMenuComponent } from './components/fs-menu/fs-menu.component';\nimport { FsBottomSheetComponent } from './components/fs-menu/bottom-sheet/fs-bottom-sheet.component';\nimport { MenuItemsListComponent } from './components/fs-menu/menu-items-list/menu-items-list.component';\nimport { BottomItemsListComponent } from\n    './components/fs-menu/bottom-sheet/bottom-items-list/bottom-items-list.component';\n\nimport { FsMenuItemDirective } from './directives/menu-item/fs-menu-item.directive';\nimport { FsMenuTriggerDirective } from './directives/menu-trigger/fs-menu-trigger.directive';\nimport { FsMenuTitleDirective } from './directives/menu-title/fs-menu-title.directive';\nimport { FsGroupMenuItemTemplateDirective } from './directives/group-menu-item-template/fs-group-menu-item-template.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatBottomSheetModule,\n    MatListModule,\n  ],\n  exports: [\n    FsMenuComponent,\n    FsMenuItemDirective,\n    FsMenuTriggerDirective,\n    FsMenuTitleDirective,\n    FsGroupMenuItemTemplateDirective,\n  ],\n  declarations: [\n    FsMenuComponent,\n    FsBottomSheetComponent,\n    MenuItemsListComponent,\n    BottomItemsListComponent,\n\n    FsMenuItemDirective,\n    FsMenuTriggerDirective,\n    FsMenuTitleDirective,\n    FsGroupMenuItemTemplateDirective,\n  ]\n})\nexport class FsMenuModule {\n  static forRoot(): ModuleWithProviders<FsMenuModule> {\n    return {\n      ngModule: FsMenuModule\n    };\n  }\n}\n","/*\n * Public API Surface of fs-menu\n */\n\nexport { FsMenuModule } from './app/fs-menu.module';\n\nexport { FsMenuComponent } from './app/components/fs-menu/fs-menu.component';\n\nexport { FsMenuItemDirective } from './app/directives/menu-item/fs-menu-item.directive';\nexport { FsMenuTriggerDirective } from './app/directives/menu-trigger/fs-menu-trigger.directive';\nexport { FsMenuTitleDirective } from './app/directives/menu-title/fs-menu-title.directive';\nexport { FsGroupMenuItemTemplateDirective } from './app/directives/group-menu-item-template/fs-group-menu-item-template.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}