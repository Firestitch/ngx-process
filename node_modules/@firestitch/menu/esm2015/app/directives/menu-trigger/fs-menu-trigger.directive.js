import { Directive, Input, Optional, Inject, Self, ElementRef, ViewContainerRef, } from '@angular/core';
import { MatMenuTrigger, MatMenu, MatMenuItem, MAT_MENU_SCROLL_STRATEGY } from '@angular/material/menu';
import { Directionality } from '@angular/cdk/bidi';
import { Overlay } from '@angular/cdk/overlay';
import { FocusMonitor } from '@angular/cdk/a11y';
import { FsMenuComponent } from '../../components/fs-menu/fs-menu.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/overlay";
import * as i2 from "@angular/material/menu";
import * as i3 from "@angular/cdk/bidi";
import * as i4 from "@angular/cdk/a11y";
export class FsMenuTriggerDirective extends MatMenuTrigger {
    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {
        super(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor);
        this.fsMenu = null;
    }
    ngOnInit() {
        this.menu = this.fsMenu.fsMenuRef;
        this.fsMenu.externalMatMenuTrigger = this;
    }
    _handleKeydown(event) {
        this._triggerClick();
    }
    /** Handles click events on the trigger. */
    _handleClick(event) {
        this._triggerClick();
    }
    _triggerClick() {
        if (this.fsMenu.menuOpened) {
            this.fsMenu.closeMenu();
        }
        else {
            this.fsMenu.openMenu();
        }
    }
}
/** @nocollapse */ FsMenuTriggerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0, type: FsMenuTriggerDirective, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: MAT_MENU_SCROLL_STRATEGY }, { token: i2.MatMenu, optional: true }, { token: i2.MatMenuItem, optional: true, self: true }, { token: i3.Directionality, optional: true }, { token: i4.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ FsMenuTriggerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.13", type: FsMenuTriggerDirective, selector: "[fsMenuTriggerFor]", inputs: { fsMenu: ["fsMenuTriggerFor", "fsMenu"] }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0, type: FsMenuTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[fsMenuTriggerFor]',
                }]
        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_MENU_SCROLL_STRATEGY]
                }] }, { type: i2.MatMenu, decorators: [{
                    type: Optional
                }] }, { type: i2.MatMenuItem, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }] }, { type: i3.Directionality, decorators: [{
                    type: Optional
                }] }, { type: i4.FocusMonitor }]; }, propDecorators: { fsMenu: [{
                type: Input,
                args: ['fsMenuTriggerFor']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnMtbWVudS10cmlnZ2VyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvZGlyZWN0aXZlcy9tZW51LXRyaWdnZXIvZnMtbWVudS10cmlnZ2VyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULEtBQUssRUFDTCxRQUFRLEVBQ1IsTUFBTSxFQUNOLElBQUksRUFDSixVQUFVLEVBQ1YsZ0JBQWdCLEdBRWpCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxjQUFjLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3hHLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWpELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQzs7Ozs7O0FBTTdFLE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxjQUFjO0lBSXhELFlBQ0UsUUFBaUIsRUFDakIsUUFBaUMsRUFDakMsaUJBQW1DLEVBQ0QsY0FBbUIsRUFDekMsV0FBb0IsRUFDWixpQkFBOEIsRUFDdEMsSUFBb0IsRUFDaEMsYUFBNEI7UUFFNUIsS0FBSyxDQUNILFFBQVEsRUFDUixRQUFRLEVBQ1IsaUJBQWlCLEVBQ2pCLGNBQWMsRUFDZCxXQUFXLEVBQ1gsaUJBQWlCLEVBQ2pCLElBQUksRUFDSixhQUFhLENBQ2QsQ0FBQztRQXJCOEIsV0FBTSxHQUFvQixJQUFJLENBQUM7SUFzQmpFLENBQUM7SUFFTSxRQUFRO1FBQ2IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUNsQyxJQUFJLENBQUMsTUFBTSxDQUFDLHNCQUFzQixHQUFHLElBQUksQ0FBQztJQUM1QyxDQUFDO0lBRUQsY0FBYyxDQUFDLEtBQW9CO1FBQ2pDLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRUQsMkNBQTJDO0lBQzNDLFlBQVksQ0FBQyxLQUFpQjtRQUM1QixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVPLGFBQWE7UUFDbkIsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRTtZQUMxQixJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO1NBQ3pCO2FBQU07WUFDTCxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3hCO0lBQ0gsQ0FBQzs7dUlBOUNVLHNCQUFzQixtR0FRdkIsd0JBQXdCOzJIQVJ2QixzQkFBc0I7NEZBQXRCLHNCQUFzQjtrQkFIbEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2lCQUMvQjs7MEJBU0ksTUFBTTsyQkFBQyx3QkFBd0I7OzBCQUMvQixRQUFROzswQkFDUixRQUFROzswQkFBSSxJQUFJOzswQkFDaEIsUUFBUTt1RUFUdUIsTUFBTTtzQkFBdkMsS0FBSzt1QkFBQyxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIElucHV0LFxuICBPcHRpb25hbCxcbiAgSW5qZWN0LFxuICBTZWxmLFxuICBFbGVtZW50UmVmLFxuICBWaWV3Q29udGFpbmVyUmVmLFxuICBPbkluaXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0TWVudVRyaWdnZXIsIE1hdE1lbnUsIE1hdE1lbnVJdGVtLCBNQVRfTUVOVV9TQ1JPTExfU1RSQVRFR1kgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9tZW51JztcbmltcG9ydCB7IERpcmVjdGlvbmFsaXR5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2JpZGknO1xuaW1wb3J0IHsgT3ZlcmxheSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IEZvY3VzTW9uaXRvciB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9hMTF5JztcblxuaW1wb3J0IHsgRnNNZW51Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9mcy1tZW51L2ZzLW1lbnUuY29tcG9uZW50JztcblxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbZnNNZW51VHJpZ2dlckZvcl0nLFxufSlcbmV4cG9ydCBjbGFzcyBGc01lbnVUcmlnZ2VyRGlyZWN0aXZlIGV4dGVuZHMgTWF0TWVudVRyaWdnZXIgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgnZnNNZW51VHJpZ2dlckZvcicpIHB1YmxpYyBmc01lbnU6IEZzTWVudUNvbXBvbmVudCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgX292ZXJsYXk6IE92ZXJsYXksXG4gICAgX2VsZW1lbnQ6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgIF92aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLFxuICAgIEBJbmplY3QoTUFUX01FTlVfU0NST0xMX1NUUkFURUdZKSBzY3JvbGxTdHJhdGVneTogYW55LFxuICAgIEBPcHRpb25hbCgpIF9wYXJlbnRNZW51OiBNYXRNZW51LFxuICAgIEBPcHRpb25hbCgpIEBTZWxmKCkgX21lbnVJdGVtSW5zdGFuY2U6IE1hdE1lbnVJdGVtLFxuICAgIEBPcHRpb25hbCgpIF9kaXI6IERpcmVjdGlvbmFsaXR5LFxuICAgIF9mb2N1c01vbml0b3I/OiBGb2N1c01vbml0b3JcbiAgKSB7XG4gICAgc3VwZXIoXG4gICAgICBfb3ZlcmxheSxcbiAgICAgIF9lbGVtZW50LFxuICAgICAgX3ZpZXdDb250YWluZXJSZWYsXG4gICAgICBzY3JvbGxTdHJhdGVneSxcbiAgICAgIF9wYXJlbnRNZW51LFxuICAgICAgX21lbnVJdGVtSW5zdGFuY2UsXG4gICAgICBfZGlyLFxuICAgICAgX2ZvY3VzTW9uaXRvclxuICAgICk7XG4gIH1cblxuICBwdWJsaWMgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5tZW51ID0gdGhpcy5mc01lbnUuZnNNZW51UmVmO1xuICAgIHRoaXMuZnNNZW51LmV4dGVybmFsTWF0TWVudVRyaWdnZXIgPSB0aGlzO1xuICB9XG5cbiAgX2hhbmRsZUtleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkIHtcbiAgICB0aGlzLl90cmlnZ2VyQ2xpY2soKTtcbiAgfVxuXG4gIC8qKiBIYW5kbGVzIGNsaWNrIGV2ZW50cyBvbiB0aGUgdHJpZ2dlci4gKi9cbiAgX2hhbmRsZUNsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgdGhpcy5fdHJpZ2dlckNsaWNrKCk7XG4gIH1cblxuICBwcml2YXRlIF90cmlnZ2VyQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMuZnNNZW51Lm1lbnVPcGVuZWQpIHtcbiAgICAgIHRoaXMuZnNNZW51LmNsb3NlTWVudSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmZzTWVudS5vcGVuTWVudSgpO1xuICAgIH1cbiAgfVxufVxuIl19