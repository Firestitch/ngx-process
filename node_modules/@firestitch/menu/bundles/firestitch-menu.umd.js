(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/material/bottom-sheet'), require('@angular/material/button'), require('@angular/material/icon'), require('@angular/material/list'), require('@angular/material/menu'), require('@angular/router'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/layout'), require('@angular/cdk/overlay'), require('@angular/cdk/bidi'), require('@angular/cdk/a11y')) :
    typeof define === 'function' && define.amd ? define('@firestitch/menu', ['exports', '@angular/core', '@angular/common', '@angular/material/bottom-sheet', '@angular/material/button', '@angular/material/icon', '@angular/material/list', '@angular/material/menu', '@angular/router', 'rxjs', 'rxjs/operators', '@angular/cdk/layout', '@angular/cdk/overlay', '@angular/cdk/bidi', '@angular/cdk/a11y'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.firestitch = global.firestitch || {}, global.firestitch.menu = {}), global.ng.core, global.ng.common, global.ng.material.bottomSheet, global.ng.material.button, global.ng.material.icon, global.ng.material.list, global.ng.material.menu, global.ng.router, global.rxjs, global.rxjs.operators, global.ng.cdk.layout, global.ng.cdk.overlay, global.ng.cdk.bidi, global.ng.cdk.a11y));
})(this, (function (exports, i0, i2, i1, i3$1, i4, i1$1, i2$1, i3, rxjs, operators, i2$2, i1$2, i3$2, i4$1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i3__namespace$2 = /*#__PURE__*/_interopNamespace(i3$2);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    function createItemsObserver(data) {
        var itemsObservables = data.reduce(function (acc, item) {
            if (item.itemChange$) {
                acc.push(item.itemChange$);
            }
            return acc;
        }, []);
        return rxjs.merge.apply(void 0, __spreadArray([], __read(itemsObservables)));
    }

    var BottomItemsListComponent = /** @class */ (function () {
        function BottomItemsListComponent(_bottomSheetRef, _cdRef) {
            this._bottomSheetRef = _bottomSheetRef;
            this._cdRef = _cdRef;
            this._destroy$ = new rxjs.Subject();
            this._cdRef.detach();
        }
        BottomItemsListComponent.prototype.ngOnInit = function () {
            this._cdRef.detectChanges();
        };
        BottomItemsListComponent.prototype.ngOnChanges = function (changes) {
            if (changes.items) {
                this._destroy$.next();
                this.subscribeToChanges();
            }
        };
        /**
         * For improve ngFor perf
         * @param index
         */
        BottomItemsListComponent.prototype.trackBy = function (index) {
            return index;
        };
        /**
         * Click on element
         * @param event
         * @param item
         */
        BottomItemsListComponent.prototype.click = function (event, item) {
            event.preventDefault();
            var subscription = this._bottomSheetRef.afterDismissed()
                .pipe(operators.take(1))
                .subscribe(function () {
                if (item === null || item === void 0 ? void 0 : item.click) {
                    item.click(event);
                }
                subscription.unsubscribe();
            });
            if (item === null || item === void 0 ? void 0 : item.dismissAfterClick) {
                this._bottomSheetRef.dismiss();
            }
        };
        /**
         * Subscribe to changes in directive parameters.
         * For example we must start detect changes if [hidden] param was changed
         */
        BottomItemsListComponent.prototype.subscribeToChanges = function () {
            var _this = this;
            if (this.items && this.items.length) {
                createItemsObserver(this.items)
                    .pipe(operators.takeUntil(this._destroy$))
                    .subscribe(function () {
                    _this._cdRef.detectChanges();
                });
            }
        };
        return BottomItemsListComponent;
    }());
    /** @nocollapse */ BottomItemsListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: BottomItemsListComponent, deps: [{ token: i1__namespace.MatBottomSheetRef }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ BottomItemsListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.13", type: BottomItemsListComponent, selector: "fs-bottom-items-list", inputs: { items: "items", parentVisible: "parentVisible" }, usesOnChanges: true, ngImport: i0__namespace, template: "<ng-container *ngFor=\"let item of items; trackBy: trackBy\">\n  <ng-container *ngIf=\"item.isGroup else menuItem\">\n    <div class=\"mat-menu-item\" [hidden]=\"!item.visible\" disabled>\n      <ng-container *ngIf=\"!!item.label; else tpl\">\n        {{ item.label }}\n      </ng-container>\n      <ng-template #tpl\n                   [ngTemplateOutlet]=\"item.groupItemTemplateRef\">\n      </ng-template>\n    </div>\n    <fs-bottom-items-list [items]=\"item.childrenItems\"\n                          [hidden]=\"!item.visible\"\n                          [parentVisible]=\"item.visible\"\n                          class=\"group\">\n    </fs-bottom-items-list>\n  </ng-container>\n  <ng-template #menuItem>\n    <ng-container *ngIf=\"item.visible\">\n      <ng-container *ngIf=\"item.link; else btnLikeAction\">\n        <a (click)=\"click($event, item)\"\n           [routerLink]=\"item.link\"\n           [queryParams]=\"item.queryParams\"\n           [target]=\"item.target\"\n           [class]=\"'mat-menu-item ' + item.cssClass\"\n           [ngClass]=\"item.ngClass\"\n           [id]=\"item.cssId\"\n        >\n          <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\n        </a>\n      </ng-container>\n      <ng-template #btnLikeAction>\n        <a (click)=\"click($event, item)\"\n           [class]=\"'mat-menu-item ' + item.cssClass\"\n           [ngClass]=\"item.ngClass\"\n           [id]=\"item.cssId\"\n        >\n          <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\n        </a>\n      </ng-template>\n    </ng-container>\n  </ng-template>\n</ng-container>\n", styles: ["fs-bottom-items-list a.mat-menu-item{padding:0 32px}\n"], components: [{ type: BottomItemsListComponent, selector: "fs-bottom-items-list", inputs: ["items", "parentVisible"] }], directives: [{ type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i3__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i2__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: BottomItemsListComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'fs-bottom-items-list',
                        templateUrl: './bottom-items-list.component.html',
                        styleUrls: ['./bottom-items-list.component.scss'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.MatBottomSheetRef }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { items: [{
                    type: i0.Input
                }], parentVisible: [{
                    type: i0.Input
                }] } });

    var FsBottomSheetComponent = /** @class */ (function () {
        function FsBottomSheetComponent(data, _cd) {
            this.data = data;
            this._cd = _cd;
        }
        FsBottomSheetComponent.prototype.ngOnInit = function () {
            this._cd.detectChanges();
        };
        return FsBottomSheetComponent;
    }());
    /** @nocollapse */ FsBottomSheetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsBottomSheetComponent, deps: [{ token: i1.MAT_BOTTOM_SHEET_DATA }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ FsBottomSheetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.13", type: FsBottomSheetComponent, selector: "fs-bottom-sheet", ngImport: i0__namespace, template: "<mat-nav-list class=\"{{ data.klass }}\">\n  <div class=\"fs-menu-title\" *ngIf=\"data.titleTemplate\">\n    <ng-template [ngTemplateOutlet]=\"data.titleTemplate\"></ng-template>\n  </div>\n  <div class=\"fs-menu-container\" [ngClass]=\"{ 'with-title': !!data.titleTemplate }\">\n    <fs-bottom-items-list [items]=\"data.items\"></fs-bottom-items-list>\n  </div>\n</mat-nav-list>\n", styles: [".mat-list-base{padding-top:0;margin:0 -16px}\n"], components: [{ type: i1__namespace$1.MatNavList, selector: "mat-nav-list", inputs: ["disableRipple", "disabled"], exportAs: ["matNavList"] }, { type: BottomItemsListComponent, selector: "fs-bottom-items-list", inputs: ["items", "parentVisible"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i2__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsBottomSheetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'fs-bottom-sheet',
                        templateUrl: './fs-bottom-sheet.component.html',
                        styleUrls: ['./fs-bottom-sheet.component.scss'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.MAT_BOTTOM_SHEET_DATA]
                        }] }, { type: i0__namespace.ChangeDetectorRef }];
        } });

    var FsGroupMenuItemTemplateDirective = /** @class */ (function () {
        function FsGroupMenuItemTemplateDirective() {
        }
        return FsGroupMenuItemTemplateDirective;
    }());
    /** @nocollapse */ FsGroupMenuItemTemplateDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsGroupMenuItemTemplateDirective, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ FsGroupMenuItemTemplateDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.13", type: FsGroupMenuItemTemplateDirective, selector: "[fs-group-menu-item-template]", queries: [{ propertyName: "groupMenuItemTemplateRef", predicate: FsGroupMenuItemTemplateDirective }], ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsGroupMenuItemTemplateDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[fs-group-menu-item-template]'
                    }]
            }], propDecorators: { groupMenuItemTemplateRef: [{
                    type: i0.ContentChildren,
                    args: [FsGroupMenuItemTemplateDirective]
                }] } });

    var FsMenuItemDirective = /** @class */ (function () {
        function FsMenuItemDirective(cd, templateRef, parent) {
            this.cd = cd;
            this.templateRef = templateRef;
            this.parent = parent;
            this.ngClass = [];
            this.cssClass = '';
            this.cssId = '';
            this.hidden = false;
            this.dismissAfterClick = true;
            this.target = null;
            this.queryParams = {};
            this.click$ = new i0.EventEmitter();
            this.itemChange$ = new rxjs.Subject();
            this._isGroup = false;
        }
        Object.defineProperty(FsMenuItemDirective.prototype, "itemsElements", {
            set: function (value) {
                var _this = this;
                this.childrenItems = value.toArray()
                    .filter(function (child) { return child !== _this; });
                this._isGroup = !!this.childrenItems;
                this.checkChildrenVisibility();
                this.itemChange$.next();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FsMenuItemDirective.prototype, "isGroup", {
            get: function () {
                return this._isGroup;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FsMenuItemDirective.prototype, "visible", {
            get: function () {
                if (this.groupHidden !== void 0) {
                    return !this.groupHidden;
                }
                else {
                    return !this.hidden;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FsMenuItemDirective.prototype, "groupItemTemplateRef", {
            get: function () {
                return this._groupItemTemplateRef;
            },
            enumerable: false,
            configurable: true
        });
        FsMenuItemDirective.prototype.ngOnChanges = function (changes) {
            if (!this.isGroup && this.parent && changes.hidden && !changes.hidden.firstChange) {
                this.parent.checkChildrenVisibility();
            }
            this.itemChange$.next();
        };
        FsMenuItemDirective.prototype.checkChildrenVisibility = function () {
            if (this.childrenItems) {
                this.hidden = this.childrenItems.every(function (item) { return item.hidden; });
            }
        };
        FsMenuItemDirective.prototype.ngOnDestroy = function () {
            this.itemChange$.complete();
        };
        FsMenuItemDirective.prototype.click = function (event) {
            this.click$.next(event);
        };
        return FsMenuItemDirective;
    }());
    /** @nocollapse */ FsMenuItemDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuItemDirective, deps: [{ token: i0__namespace.ChangeDetectorRef }, { token: i0__namespace.TemplateRef, optional: true }, { token: FsMenuItemDirective, optional: true, skipSelf: true }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ FsMenuItemDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.13", type: FsMenuItemDirective, selector: "fs-menu-group,[fs-menu-item]", inputs: { ngClass: ["fsClass", "ngClass"], cssClass: ["class", "cssClass"], cssId: ["id", "cssId"], label: "label", hidden: "hidden", groupHidden: "groupHidden", dismissAfterClick: "dismissAfterClick", link: "link", target: "target", queryParams: "queryParams" }, outputs: { click$: "click" }, queries: [{ propertyName: "_groupItemTemplateRef", first: true, predicate: FsGroupMenuItemTemplateDirective, descendants: true, read: i0.TemplateRef }, { propertyName: "itemsElements", predicate: FsMenuItemDirective }], usesOnChanges: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuItemDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'fs-menu-group,[fs-menu-item]'
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ChangeDetectorRef }, { type: i0__namespace.TemplateRef, decorators: [{
                            type: i0.Optional
                        }] }, { type: FsMenuItemDirective, decorators: [{
                            type: i0.SkipSelf
                        }, {
                            type: i0.Optional
                        }] }];
        }, propDecorators: { ngClass: [{
                    type: i0.Input,
                    args: ['fsClass']
                }], cssClass: [{
                    type: i0.Input,
                    args: ['class']
                }], cssId: [{
                    type: i0.Input,
                    args: ['id']
                }], label: [{
                    type: i0.Input
                }], hidden: [{
                    type: i0.Input
                }], groupHidden: [{
                    type: i0.Input
                }], dismissAfterClick: [{
                    type: i0.Input
                }], link: [{
                    type: i0.Input
                }], target: [{
                    type: i0.Input
                }], queryParams: [{
                    type: i0.Input
                }], click$: [{
                    type: i0.Output,
                    args: ['click']
                }], itemsElements: [{
                    type: i0.ContentChildren,
                    args: [FsMenuItemDirective]
                }], _groupItemTemplateRef: [{
                    type: i0.ContentChild,
                    args: [FsGroupMenuItemTemplateDirective, { read: i0.TemplateRef }]
                }] } });

    var FsMenuTitleDirective = /** @class */ (function () {
        function FsMenuTitleDirective() {
        }
        return FsMenuTitleDirective;
    }());
    /** @nocollapse */ FsMenuTitleDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuTitleDirective, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ FsMenuTitleDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.13", type: FsMenuTitleDirective, selector: "[fs-menu-title]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuTitleDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[fs-menu-title]'
                    }]
            }] });

    var MenuItemsListComponent = /** @class */ (function () {
        function MenuItemsListComponent(_cdRef) {
            this._cdRef = _cdRef;
            this._destroy$ = new rxjs.Subject();
        }
        MenuItemsListComponent.prototype.ngOnChanges = function (changes) {
            if (changes.items) {
                this._cdRef.detectChanges();
                this._destroy$.next();
                this.subscribeToChanges();
            }
        };
        MenuItemsListComponent.prototype.ngOnDestroy = function () {
            this._destroy$.next();
            this._destroy$.complete();
        };
        /**
         * For improve ngFor perf
         * @param index
         */
        MenuItemsListComponent.prototype.trackBy = function (index) {
            return index;
        };
        /**
         * Subscribe to changes in directive parameters.
         * For example we must start detect changes if [hidden] param was changed
         */
        MenuItemsListComponent.prototype.subscribeToChanges = function () {
            var _this = this;
            if (this.items && this.items.length) {
                createItemsObserver(this.items)
                    .pipe(operators.takeUntil(this._destroy$))
                    .subscribe(function () {
                    _this._cdRef.detectChanges();
                });
            }
        };
        return MenuItemsListComponent;
    }());
    /** @nocollapse */ MenuItemsListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: MenuItemsListComponent, deps: [{ token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ MenuItemsListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.13", type: MenuItemsListComponent, selector: "fs-menu-items-list", inputs: { items: "items", parentVisible: "parentVisible" }, usesOnChanges: true, ngImport: i0__namespace, template: "<ng-container *ngFor=\"let item of items; trackBy: trackBy\">\n  <ng-container *ngIf=\"item.isGroup; else menuItem\">\n    <div class=\"fs-menu-groupped-list\" [hidden]=\"!item.visible\">\n      <div class=\"mat-menu-item fs-menu-group-label\" disabled>\n        <ng-container *ngIf=\"!!item.label; else tpl\">\n          {{ item.label }}\n        </ng-container>\n        <ng-template #tpl\n                     [ngTemplateOutlet]=\"item.groupItemTemplateRef\">\n        </ng-template>\n      </div>\n      <fs-menu-items-list [items]=\"item.childrenItems\"\n                          [parentVisible]=\"item.visible\">\n      </fs-menu-items-list>\n    </div>\n  </ng-container>\n  <ng-template #menuItem>\n    <ng-container *ngIf=\"item.link; else btn\">\n      <a\n        mat-menu-item\n        *ngIf=\"item.visible\"\n        [routerLink]=\"item.link\"\n        [queryParams]=\"item.queryParams\"\n        [target]=\"item.target\"\n        (click)=\"item.click($event)\"\n        [class]=\"item.cssClass\"\n        [ngClass]=\"item.ngClass\"\n        [id]=\"item.cssId\">\n        <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\n      </a>\n    </ng-container>\n    <ng-template #btn>\n      <button type=\"button\"\n              mat-menu-item\n              *ngIf=\"item.visible\"\n              (click)=\"item.click($event)\"\n              [class]=\"item.cssClass\"\n              [ngClass]=\"item.ngClass\"\n              [id]=\"item.cssId\"\n      >\n        <ng-template [ngTemplateOutlet]=\"item.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n  </ng-template>\n</ng-container>\n", styles: [":host ::ng-deep .fs-menu-groupped-list a,:host ::ng-deep .fs-menu-groupped-list button{padding-left:32px}\n"], components: [{ type: MenuItemsListComponent, selector: "fs-menu-items-list", inputs: ["items", "parentVisible"] }, { type: i2__namespace$1.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }], directives: [{ type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i3__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i2__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: MenuItemsListComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'fs-menu-items-list',
                        templateUrl: './menu-items-list.component.html',
                        styleUrls: ['./menu-items-list.component.scss'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { items: [{
                    type: i0.Input
                }], parentVisible: [{
                    type: i0.Input
                }] } });

    var FsMenuComponent = /** @class */ (function () {
        function FsMenuComponent(_bottomSheet, _breakpointObserver, _cd) {
            this._bottomSheet = _bottomSheet;
            this._breakpointObserver = _breakpointObserver;
            this._cd = _cd;
            this.klass = null;
            this.buttonClass = '';
            this.opened = new i0.EventEmitter();
            this.closed = new i0.EventEmitter();
            // Items with TemplateRefs and DirectiveRef for passing to bottomSheet
            this.items = [];
            this.useInternalTrigger = false;
            this.mobile = false;
            this.menuOpened = false;
            this.initialized = false;
            this._resolutionChanged = false;
            // Active bottom sheet that was opened
            this._activeSheetRef = null;
            this._destroy$ = new rxjs.Subject();
            this._cd.detach();
        }
        Object.defineProperty(FsMenuComponent.prototype, "itemsElements", {
            set: function (value) {
                this.items = value.toArray();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FsMenuComponent.prototype, "internalMatMenuTrigger", {
            // Catch trigger for matMenu
            set: function (val) {
                if (val) {
                    this.useInternalTrigger = true;
                }
                this._internalMatMenuTrigger = val;
            },
            enumerable: false,
            configurable: true
        });
        ;
        Object.defineProperty(FsMenuComponent.prototype, "externalMatMenuTrigger", {
            set: function (val) {
                this.useInternalTrigger = false;
                this._externalMatMenuTrigger = val;
                this._cd.detectChanges();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FsMenuComponent.prototype, "resolutionChanged", {
            get: function () {
                return this._resolutionChanged;
            },
            set: function (val) {
                this._resolutionChanged = val;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FsMenuComponent.prototype, "matMenuTrigger", {
            get: function () {
                if (this.useInternalTrigger) {
                    return this._internalMatMenuTrigger;
                }
                else {
                    return this._externalMatMenuTrigger;
                }
            },
            enumerable: false,
            configurable: true
        });
        FsMenuComponent.prototype.ngOnInit = function () {
            this.subscribeToResChanges();
            this.initialized = true;
            this._cd.detectChanges();
        };
        FsMenuComponent.prototype.ngAfterViewInit = function () {
            if (!this._externalMatMenuTrigger) {
                this.useInternalTrigger = true;
                this._cd.detectChanges();
            }
        };
        FsMenuComponent.prototype.ngOnDestroy = function () {
            this._destroy$.next();
            this._destroy$.complete();
        };
        /**
         * Subscribe to window resolution changes
         * and switch between mobile and desktop
         */
        FsMenuComponent.prototype.subscribeToResChanges = function () {
            var _this = this;
            var layoutChanges = this._breakpointObserver.observe([
                FsMenuComponent.MOBILE_BREAKPOINT,
            ]);
            layoutChanges
                .pipe(operators.debounceTime(500), operators.takeUntil(this._destroy$))
                .subscribe(function (result) {
                // Set mobile/desktop flag
                _this.mobile = result.breakpoints[FsMenuComponent.MOBILE_BREAKPOINT];
                if (_this.menuOpened) {
                    // Flag that menus was closed not by user
                    _this.resolutionChanged = true;
                    if (_this.mobile) {
                        _this.closeMatMenu();
                        _this.openSheetMenu();
                    }
                    else {
                        _this.closeSheetMenu();
                        // Must be here because we should wait till menuTrigger will be catched by @ViewChild
                        setTimeout(function () {
                            if (_this.matMenuTrigger) {
                                _this.matMenuTrigger.openMenu();
                                // Detect changes because for strategies like OnPush if won't detected by default
                                _this._cd.detectChanges();
                            }
                        });
                    }
                    // Detect changes because for strategies like OnPush if won't detected by default
                    _this._cd.detectChanges();
                }
                else {
                    // Detect changes because for strategies like OnPush if won't detected by default
                    _this._cd.detectChanges();
                }
            });
        };
        /**
         * Open fs menu depends from mode
         */
        FsMenuComponent.prototype.openMenu = function () {
            if (this.mobile) {
                this.openSheetMenu();
            }
            else {
                this.openMatMenu();
            }
            this.opened.emit();
            this._cd.detectChanges();
        };
        /**
         * Close fs menu depends from mode
         */
        FsMenuComponent.prototype.closeMenu = function () {
            if (this.mobile) {
                this.closeSheetMenu();
            }
            else {
                this.closeMatMenu();
            }
        };
        /**
         * Open Mat Menu
         */
        FsMenuComponent.prototype.openMatMenu = function () {
            this.menuOpened = true;
            this.resolutionChanged = false;
            this.matMenuTrigger.openMenu();
        };
        /**
         * Close Mat Menu
         */
        FsMenuComponent.prototype.closeMatMenu = function () {
            if (this.matMenuTrigger) {
                this.matMenuTrigger.closeMenu();
            }
        };
        /**
         * After menu close event
         */
        FsMenuComponent.prototype.closedMatMenu = function () {
            if (!this.resolutionChanged) {
                this.menuOpened = false;
            }
            this.resolutionChanged = false;
            this.closed.emit();
        };
        /**
         * Open Mat Bottom Sheet
         */
        FsMenuComponent.prototype.openSheetMenu = function () {
            var _this = this;
            this._activeSheetRef = this._bottomSheet.open(FsBottomSheetComponent, {
                data: { items: this.items, titleTemplate: this.titleTemplate, klass: this.klass }
            });
            this.menuOpened = true;
            this._activeSheetRef.afterDismissed()
                .pipe(operators.takeUntil(this._destroy$))
                .subscribe(function () {
                if (!_this.resolutionChanged) {
                    _this.menuOpened = false;
                }
                _this.resolutionChanged = false;
            });
        };
        /**
         * Close Mat Bottom Sheet
         */
        FsMenuComponent.prototype.closeSheetMenu = function () {
            if (this._activeSheetRef) {
                this._activeSheetRef.dismiss();
            }
        };
        return FsMenuComponent;
    }());
    FsMenuComponent.MOBILE_BREAKPOINT = '(max-width: 599px)';
    /** @nocollapse */ FsMenuComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuComponent, deps: [{ token: i1__namespace.MatBottomSheet }, { token: i2__namespace$2.BreakpointObserver }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ FsMenuComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.13", type: FsMenuComponent, selector: "fs-menu", inputs: { klass: ["class", "klass"], buttonClass: "buttonClass" }, outputs: { opened: "opened", closed: "closed" }, queries: [{ propertyName: "titleTemplate", first: true, predicate: FsMenuTitleDirective, descendants: true, read: i0.TemplateRef }, { propertyName: "itemsElements", predicate: FsMenuItemDirective }], viewQueries: [{ propertyName: "internalMatMenuTrigger", first: true, predicate: i2$1.MatMenuTrigger, descendants: true }, { propertyName: "fsMenuRef", first: true, predicate: ["fsMenu"], descendants: true, static: true }], ngImport: i0__namespace, template: "<ng-template [ngIf]=\"!mobile\" [ngIfElse]=\"sheetMenu\">\n  <button type=\"button\"\n          [ngClass]=\"buttonClass\"\n          mat-icon-button\n          *ngIf=\"useInternalTrigger\"\n          [matMenuTriggerFor]=\"fsMenu\"\n          #menuTrigger=\"matMenuTrigger\"\n          (click)=\"openMenu()\"\n  >\n    <mat-icon>more_vert</mat-icon>\n  </button>\n</ng-template>\n\n<ng-template #sheetMenu>\n  <button type=\"button\"\n          mat-icon-button\n          [ngClass]=\"buttonClass\"\n          *ngIf=\"useInternalTrigger\"\n          (click)=\"openMenu()\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n</ng-template>\n\n\n<mat-menu #fsMenu=\"matMenu\" [class]=\"klass\" (close)=\"closedMatMenu()\">\n  <div class=\"mat-menu-item fs-menu-title\" *ngIf=\"titleTemplate\" disabled>\n    <ng-template [ngTemplateOutlet]=\"titleTemplate\"></ng-template>\n  </div>\n  <div class=\"fs-menu-container\" [ngClass]=\"{ 'with-title': !!titleTemplate }\">\n    <fs-menu-items-list [items]=\"items\"></fs-menu-items-list>\n  </div>\n</mat-menu>\n", styles: ["::ng-deep *[hidden]{display:none!important}\n"], components: [{ type: i3__namespace$1.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i4__namespace.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i2__namespace$1.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { type: MenuItemsListComponent, selector: "fs-menu-items-list", inputs: ["items", "parentVisible"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2__namespace$1.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'fs-menu',
                        templateUrl: 'fs-menu.component.html',
                        styleUrls: ['fs-menu.component.scss'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.MatBottomSheet }, { type: i2__namespace$2.BreakpointObserver }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { klass: [{
                    type: i0.Input,
                    args: ['class']
                }], buttonClass: [{
                    type: i0.Input,
                    args: ['buttonClass']
                }], opened: [{
                    type: i0.Output
                }], closed: [{
                    type: i0.Output
                }], titleTemplate: [{
                    type: i0.ContentChild,
                    args: [FsMenuTitleDirective, { read: i0.TemplateRef }]
                }], itemsElements: [{
                    type: i0.ContentChildren,
                    args: [FsMenuItemDirective]
                }], internalMatMenuTrigger: [{
                    type: i0.ViewChild,
                    args: [i2$1.MatMenuTrigger]
                }], fsMenuRef: [{
                    type: i0.ViewChild,
                    args: ['fsMenu', { static: true }]
                }] } });

    var FsMenuTriggerDirective = /** @class */ (function (_super) {
        __extends(FsMenuTriggerDirective, _super);
        function FsMenuTriggerDirective(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {
            var _this = _super.call(this, _overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) || this;
            _this.fsMenu = null;
            return _this;
        }
        FsMenuTriggerDirective.prototype.ngOnInit = function () {
            this.menu = this.fsMenu.fsMenuRef;
            this.fsMenu.externalMatMenuTrigger = this;
        };
        FsMenuTriggerDirective.prototype._handleKeydown = function (event) {
            this._triggerClick();
        };
        /** Handles click events on the trigger. */
        FsMenuTriggerDirective.prototype._handleClick = function (event) {
            this._triggerClick();
        };
        FsMenuTriggerDirective.prototype._triggerClick = function () {
            if (this.fsMenu.menuOpened) {
                this.fsMenu.closeMenu();
            }
            else {
                this.fsMenu.openMenu();
            }
        };
        return FsMenuTriggerDirective;
    }(i2$1.MatMenuTrigger));
    /** @nocollapse */ FsMenuTriggerDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuTriggerDirective, deps: [{ token: i1__namespace$2.Overlay }, { token: i0__namespace.ElementRef }, { token: i0__namespace.ViewContainerRef }, { token: i2$1.MAT_MENU_SCROLL_STRATEGY }, { token: i2__namespace$1.MatMenu, optional: true }, { token: i2__namespace$1.MatMenuItem, optional: true, self: true }, { token: i3__namespace$2.Directionality, optional: true }, { token: i4__namespace$1.FocusMonitor }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ FsMenuTriggerDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.13", type: FsMenuTriggerDirective, selector: "[fsMenuTriggerFor]", inputs: { fsMenu: ["fsMenuTriggerFor", "fsMenu"] }, usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuTriggerDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[fsMenuTriggerFor]',
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace$2.Overlay }, { type: i0__namespace.ElementRef }, { type: i0__namespace.ViewContainerRef }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i2$1.MAT_MENU_SCROLL_STRATEGY]
                        }] }, { type: i2__namespace$1.MatMenu, decorators: [{
                            type: i0.Optional
                        }] }, { type: i2__namespace$1.MatMenuItem, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Self
                        }] }, { type: i3__namespace$2.Directionality, decorators: [{
                            type: i0.Optional
                        }] }, { type: i4__namespace$1.FocusMonitor }];
        }, propDecorators: { fsMenu: [{
                    type: i0.Input,
                    args: ['fsMenuTriggerFor']
                }] } });

    var FsMenuModule = /** @class */ (function () {
        function FsMenuModule() {
        }
        FsMenuModule.forRoot = function () {
            return {
                ngModule: FsMenuModule
            };
        };
        return FsMenuModule;
    }());
    /** @nocollapse */ FsMenuModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ FsMenuModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuModule, declarations: [FsMenuComponent,
            FsBottomSheetComponent,
            MenuItemsListComponent,
            BottomItemsListComponent,
            FsMenuItemDirective,
            FsMenuTriggerDirective,
            FsMenuTitleDirective,
            FsGroupMenuItemTemplateDirective], imports: [i2.CommonModule,
            i3.RouterModule,
            i3$1.MatButtonModule,
            i4.MatIconModule,
            i2$1.MatMenuModule,
            i1.MatBottomSheetModule,
            i1$1.MatListModule], exports: [FsMenuComponent,
            FsMenuItemDirective,
            FsMenuTriggerDirective,
            FsMenuTitleDirective,
            FsGroupMenuItemTemplateDirective] });
    /** @nocollapse */ FsMenuModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuModule, imports: [[
                i2.CommonModule,
                i3.RouterModule,
                i3$1.MatButtonModule,
                i4.MatIconModule,
                i2$1.MatMenuModule,
                i1.MatBottomSheetModule,
                i1$1.MatListModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.13", ngImport: i0__namespace, type: FsMenuModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i2.CommonModule,
                            i3.RouterModule,
                            i3$1.MatButtonModule,
                            i4.MatIconModule,
                            i2$1.MatMenuModule,
                            i1.MatBottomSheetModule,
                            i1$1.MatListModule,
                        ],
                        exports: [
                            FsMenuComponent,
                            FsMenuItemDirective,
                            FsMenuTriggerDirective,
                            FsMenuTitleDirective,
                            FsGroupMenuItemTemplateDirective,
                        ],
                        declarations: [
                            FsMenuComponent,
                            FsBottomSheetComponent,
                            MenuItemsListComponent,
                            BottomItemsListComponent,
                            FsMenuItemDirective,
                            FsMenuTriggerDirective,
                            FsMenuTitleDirective,
                            FsGroupMenuItemTemplateDirective,
                        ]
                    }]
            }] });

    /*
     * Public API Surface of fs-menu
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.FsGroupMenuItemTemplateDirective = FsGroupMenuItemTemplateDirective;
    exports.FsMenuComponent = FsMenuComponent;
    exports.FsMenuItemDirective = FsMenuItemDirective;
    exports.FsMenuModule = FsMenuModule;
    exports.FsMenuTitleDirective = FsMenuTitleDirective;
    exports.FsMenuTriggerDirective = FsMenuTriggerDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=firestitch-menu.umd.js.map
