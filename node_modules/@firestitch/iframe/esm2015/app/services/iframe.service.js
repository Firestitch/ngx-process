import { Injectable } from '@angular/core';
import { interval } from 'rxjs';
import { postMessage } from '../functions/post-message';
import * as i0 from "@angular/core";
export class FsIFrame {
    observeBody() {
        return interval(100)
            .subscribe(() => {
            const height = window.document.body.offsetHeight;
            if (this.height !== height) {
                this.updateHeight(height);
                this.height = height;
            }
        });
    }
    updateCurrentHeight() {
        this.updateHeight(window.document.body.offsetHeight);
    }
    updateHeight(value) {
        this.update('height', value);
    }
    update(name, value) {
        postMessage({ name: name, value: value });
    }
}
FsIFrame.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsIFrame, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
FsIFrame.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsIFrame });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsIFrame, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWZyYW1lLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYXBwL3NlcnZpY2VzL2lmcmFtZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFFBQVEsRUFBZ0IsTUFBTSxNQUFNLENBQUM7QUFFOUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDJCQUEyQixDQUFDOztBQUl4RCxNQUFNLE9BQU8sUUFBUTtJQUluQixXQUFXO1FBQ1QsT0FBTyxRQUFRLENBQUMsR0FBRyxDQUFDO2FBQ25CLFNBQVMsQ0FBQyxHQUFHLEVBQUU7WUFDZCxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7WUFFakQsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLE1BQU0sRUFBRTtnQkFDMUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDMUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7YUFDdEI7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxtQkFBbUI7UUFDakIsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQsWUFBWSxDQUFDLEtBQUs7UUFDaEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFJLEVBQUUsS0FBSztRQUNoQixXQUFXLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQzVDLENBQUM7O3NHQTFCVSxRQUFROzBHQUFSLFFBQVE7NEZBQVIsUUFBUTtrQkFEcEIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGludGVydmFsLCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgcG9zdE1lc3NhZ2UgfSBmcm9tICcuLi9mdW5jdGlvbnMvcG9zdC1tZXNzYWdlJztcblxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRnNJRnJhbWUge1xuXG4gIHByaXZhdGUgaGVpZ2h0O1xuXG4gIG9ic2VydmVCb2R5KCk6IFN1YnNjcmlwdGlvbiB7XG4gICAgcmV0dXJuIGludGVydmFsKDEwMClcbiAgICAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIGNvbnN0IGhlaWdodCA9IHdpbmRvdy5kb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodDtcblxuICAgICAgaWYgKHRoaXMuaGVpZ2h0ICE9PSBoZWlnaHQpIHtcbiAgICAgICAgdGhpcy51cGRhdGVIZWlnaHQoaGVpZ2h0KTtcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICB1cGRhdGVDdXJyZW50SGVpZ2h0KCkge1xuICAgIHRoaXMudXBkYXRlSGVpZ2h0KHdpbmRvdy5kb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodCk7XG4gIH1cblxuICB1cGRhdGVIZWlnaHQodmFsdWUpIHtcbiAgICB0aGlzLnVwZGF0ZSgnaGVpZ2h0JywgdmFsdWUpO1xuICB9XG5cbiAgdXBkYXRlKG5hbWUsIHZhbHVlKSB7XG4gICAgcG9zdE1lc3NhZ2UoeyBuYW1lOiBuYW1lLCB2YWx1ZTogdmFsdWUgfSk7XG4gIH1cbn1cbiJdfQ==