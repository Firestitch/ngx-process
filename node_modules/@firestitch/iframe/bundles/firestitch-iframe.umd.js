(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('lodash-es'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@firestitch/iframe', ['exports', '@angular/core', '@angular/common', 'lodash-es', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.firestitch = global.firestitch || {}, global.firestitch.iframe = {}), global.ng.core, global.ng.common, global.lodashEs, global.rxjs, global.rxjs.operators));
})(this, (function (exports, i0, common, lodashEs, rxjs, operators) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    function postMessage(data) {
        window.parent.postMessage('fs-iframe:' + JSON.stringify(data), '*');
    }

    var FsIFrameScrollToDirective = /** @class */ (function () {
        function FsIFrameScrollToDirective(elementRef, renderer) {
            this.elementRef = elementRef;
            this.renderer = renderer;
        }
        FsIFrameScrollToDirective.prototype.ngOnInit = function () {
            this.renderer.addClass(this.elementRef.nativeElement, 'fs-iframe-scrollto');
        };
        FsIFrameScrollToDirective.prototype.onClick = function (event) {
            postMessage({ name: 'scrollto', value: this.elementRef.nativeElement.getBoundingClientRect().top });
        };
        return FsIFrameScrollToDirective;
    }());
    FsIFrameScrollToDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrameScrollToDirective, deps: [{ token: i0__namespace.ElementRef }, { token: i0__namespace.Renderer2 }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    FsIFrameScrollToDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: FsIFrameScrollToDirective, selector: "[fsIFrameScrollTo]", host: { listeners: { "click": "onClick($event)" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrameScrollToDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[fsIFrameScrollTo]'
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.Renderer2 }]; }, propDecorators: { onClick: [{
                    type: i0.HostListener,
                    args: ['click', ['$event']]
                }] } });

    function parseEvent(event) {
        if (event.data && lodashEs.isString(event.data)) {
            var matches = event.data.match(/(fs-iframe):(.*)/);
            if (matches) {
                try {
                    return JSON.parse(matches[2]);
                }
                catch (e) { }
            }
        }
        return { name: null, value: null };
    }

    var FsIFrameDirective = /** @class */ (function () {
        function FsIFrameDirective(elementRef, renderer) {
            this.elementRef = elementRef;
            this.renderer = renderer;
            this.offset = 0;
        }
        FsIFrameDirective.prototype.ngOnInit = function () {
            this.renderer.addClass(this.elementRef.nativeElement, 'fs-iframe');
        };
        FsIFrameDirective.prototype.onMessage = function (event) {
            var data = parseEvent(event);
            if (data.name === 'height') {
                var height = data.value;
                this.renderer.setStyle(this.elementRef.nativeElement, 'height', height + 'px');
            }
            else if (data.name === 'scrollto') {
                window.document.documentElement.scrollTop = data.value + this.offset;
            }
            else if (data.name === 'offset') {
                this.offset = data.value;
            }
        };
        return FsIFrameDirective;
    }());
    FsIFrameDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrameDirective, deps: [{ token: i0__namespace.ElementRef }, { token: i0__namespace.Renderer2 }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    FsIFrameDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: FsIFrameDirective, selector: "[fsIFrame]", host: { listeners: { "window:message": "onMessage($event)" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrameDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[fsIFrame]'
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }, { type: i0__namespace.Renderer2 }]; }, propDecorators: { onMessage: [{
                    type: i0.HostListener,
                    args: ['window:message', ['$event']]
                }] } });

    var FsIFrame = /** @class */ (function () {
        function FsIFrame() {
        }
        FsIFrame.prototype.observeBody = function () {
            var _this = this;
            return rxjs.interval(100)
                .subscribe(function () {
                var height = window.document.body.offsetHeight;
                if (_this.height !== height) {
                    _this.updateHeight(height);
                    _this.height = height;
                }
            });
        };
        FsIFrame.prototype.updateCurrentHeight = function () {
            this.updateHeight(window.document.body.offsetHeight);
        };
        FsIFrame.prototype.updateHeight = function (value) {
            this.update('height', value);
        };
        FsIFrame.prototype.update = function (name, value) {
            postMessage({ name: name, value: value });
        };
        return FsIFrame;
    }());
    FsIFrame.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrame, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    FsIFrame.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrame });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrame, decorators: [{
                type: i0.Injectable
            }] });

    var FsIFrameComponent = /** @class */ (function () {
        function FsIFrameComponent() {
            this._destroy$ = new rxjs.Subject();
        }
        FsIFrameComponent.prototype.onload = function () {
            this.updateHeight();
        };
        Object.defineProperty(FsIFrameComponent.prototype, "frameEl", {
            get: function () {
                var _a;
                return (_a = this.frame) === null || _a === void 0 ? void 0 : _a.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        FsIFrameComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            rxjs.fromEvent(window, 'resize')
                .pipe(operators.debounceTime(50), operators.takeUntil(this._destroy$))
                .subscribe(function () {
                _this.updateHeight();
            });
            if (this.html) {
                this._updateBodyFrames();
            }
        };
        FsIFrameComponent.prototype._updateBodyFrames = function () {
            var win = this.frameEl.contentWindow;
            var doc = win.document;
            var data = "\n    <style>\n      body {\n        font-family: Roboto;\n        font-size: 15px;\n        margin: 0 !important;\n        overflow-y: hidden !important;\n        width: auto !important;\n      }\n\n      a {\n        color: #1155CC;\n      }\n\n      * {\n        box-sizing: border-box !important;\n      }\n\n      " + this.styles + "\n    </style>\n    " + this.html;
            doc.open();
            doc.write(data);
            doc.close();
        };
        FsIFrameComponent.prototype.ngOnDestroy = function () {
            this._destroy$.next();
            this._destroy$.complete();
        };
        FsIFrameComponent.prototype.updateHeight = function () {
            if (this.frameEl) {
                this.frameEl.removeAttribute('height');
                this.frameEl.setAttribute('height', this.frameEl.contentDocument.body.scrollHeight);
            }
        };
        return FsIFrameComponent;
    }());
    FsIFrameComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrameComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    FsIFrameComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsIFrameComponent, selector: "fs-iframe", inputs: { html: "html", styles: "styles" }, viewQueries: [{ propertyName: "frame", first: true, predicate: ["frame"], descendants: true }], ngImport: i0__namespace, template: "<iframe #frame (load)=\"onload()\"></iframe>\n", styles: ["iframe{width:100%;border:none}\n"] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrameComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'fs-iframe',
                        templateUrl: './iframe.component.html',
                        styleUrls: ['./iframe.component.scss'],
                    }]
            }], propDecorators: { frame: [{
                    type: i0.ViewChild,
                    args: ['frame']
                }], html: [{
                    type: i0.Input
                }], styles: [{
                    type: i0.Input
                }] } });

    var FsIFrameModule = /** @class */ (function () {
        function FsIFrameModule() {
        }
        FsIFrameModule.forRoot = function () {
            return {
                ngModule: FsIFrameModule,
                providers: [FsIFrame]
            };
        };
        return FsIFrameModule;
    }());
    FsIFrameModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrameModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    FsIFrameModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrameModule, declarations: [FsIFrameScrollToDirective,
            FsIFrameDirective,
            FsIFrameComponent], imports: [common.CommonModule], exports: [FsIFrameScrollToDirective,
            FsIFrameDirective,
            FsIFrameComponent] });
    FsIFrameModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrameModule, imports: [[
                common.CommonModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsIFrameModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            common.CommonModule,
                        ],
                        exports: [
                            FsIFrameScrollToDirective,
                            FsIFrameDirective,
                            FsIFrameComponent,
                        ],
                        declarations: [
                            FsIFrameScrollToDirective,
                            FsIFrameDirective,
                            FsIFrameComponent,
                        ],
                    }]
            }] });

    // Modules

    /**
     * Generated bundle index. Do not edit.
     */

    exports.FsIFrame = FsIFrame;
    exports.FsIFrameComponent = FsIFrameComponent;
    exports.FsIFrameDirective = FsIFrameDirective;
    exports.FsIFrameModule = FsIFrameModule;
    exports.FsIFrameScrollToDirective = FsIFrameScrollToDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=firestitch-iframe.umd.js.map
