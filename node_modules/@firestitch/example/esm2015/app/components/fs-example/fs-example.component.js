import { Component, Input } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { FsExampleService } from '../../services/fs-example.service';
import { FsDrawerAction, FsDrawerService } from '@firestitch/drawer-unique-namespace';
import { ExampleService } from '../../services/example.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "../../services/fs-example.service";
import * as i3 from "@firestitch/drawer-unique-namespace";
import * as i4 from "../../services/example.service";
import * as i5 from "@angular/material/toolbar";
import * as i6 from "@angular/material/button";
import * as i7 from "@angular/material/icon";
import * as i8 from "@angular/material/tabs";
import * as i9 from "../fs-example-highlight/fs-example-highlight.component";
import * as i10 from "@angular/material/card";
import * as i11 from "@angular/material/tooltip";
import * as i12 from "@angular/common";
export class FsExampleComponent {
    constructor(http, fsExampleService, drawer, exampleService) {
        this.http = http;
        this.fsExampleService = fsExampleService;
        this.drawer = drawer;
        this.exampleService = exampleService;
        this.showTabs = false;
        this.tabs = [];
        this.code = '';
        this.show = true;
        this.configureData = {};
    }
    toggleContent() {
        this.showTabs = !this.showTabs;
        this.tabs = [];
        if (this.showTabs) {
            this._loadComponents();
        }
    }
    configureClick() {
        if (this.drawerRef) {
            this.drawerRef.close();
        }
        this.drawerRef = this.drawer.open(this.configureComponent, {
            data: this.configureData,
            disableClose: false,
            position: 'right',
            width: {
                main: {
                    initial: 500,
                    min: 260,
                    // max: 1000,
                },
            },
            actions: [
                {
                    icon: 'clear',
                    type: FsDrawerAction.Button,
                    close: true
                }
            ]
        });
    }
    setConfigureComponent(component, data) {
        setTimeout(() => {
            if (!data) {
                data = {};
            }
            this.exampleService.exampleComponent = this;
            data.example = this.exampleService;
            this.configureComponent = component;
            this.configureData = data;
        });
    }
    _loadComponents() {
        this.fsExampleService.getFileContents(this.componentPath, this.componentName)
            .subscribe((files) => {
            files.forEach((file) => {
                file.name = file.type;
            });
            this._filesToTabs(files);
        });
        if (this.componentNames) {
            this.componentNames.split(',').forEach((name) => {
                this.fsExampleService.getFileContents(this.componentPath, name)
                    .subscribe((files) => {
                    this._filesToTabs(files);
                });
            });
        }
    }
    _filesToTabs(files) {
        const order = ['html', 'ts', 'css', 'scss'];
        const tabs = files.sort((a, b) => {
            return order.indexOf(a.type) - order.indexOf(b.type);
        });
        tabs.forEach((tab) => {
            this.tabs.push(tab);
        });
    }
}
FsExampleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsExampleComponent, deps: [{ token: i1.HttpClient }, { token: i2.FsExampleService }, { token: i3.FsDrawerService }, { token: i4.ExampleService }], target: i0.ɵɵFactoryTarget.Component });
FsExampleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsExampleComponent, selector: "fs-example", inputs: { name: "name", componentPath: "componentPath", componentName: "componentName", componentNames: "componentNames" }, providers: [ExampleService], ngImport: i0, template: "<div class=\"mat-elevation-z2\">\n  <mat-toolbar>\n    <span>{{name}}</span>\n    <div class=\"container\">\n      <ng-content select=\"[fs-example-actions]\"></ng-content>\n      <button mat-icon-button [matTooltip]=\"showTabs ? 'Hide Code' : 'View Code'\" (click)=\"toggleContent()\">\n        <mat-icon>code</mat-icon>\n      </button>\n\n      <button mat-icon-button *ngIf=\"configureComponent\" matTooltip=\"Configure Example\" (click)=\"configureClick()\">\n        <mat-icon>settings</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar>\n  <div *ngIf=\"showTabs\">\n    <mat-tab-group>\n      <div *ngFor=\"let tab of tabs\">\n        <mat-tab label=\"{{tab.name | uppercase}}\">\n          <fs-example-highlight [source]=\"tab.code\" [language]=\"tab.type\"></fs-example-highlight>\n        </mat-tab>\n      </div>\n    </mat-tab-group>\n  </div>\n  <mat-card class=\"mat-elevation-z0\">\n    <div #items>\n      <div *ngIf=\"show\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </mat-card>\n</div>\n", styles: [":host ::ng-deep .hljs{display:block;overflow-x:auto;padding:1em;background:#FAFAFA;color:#37474f;-webkit-font-smoothing:antialiased;-webkit-text-size-adjust:100%;text-size-adjust:100%;font:300 100%/1 Roboto Mono,monospace;font-size:14px}:host ::ng-deep .hljs>*::selection,:host ::ng-deep .hljs-section{background-color:#d6edea}:host ::ng-deep .hljs-comment{color:#b0bec5;font-style:italic}:host ::ng-deep .hljs-tag,:host ::ng-deep .hljs-selector-tag,:host ::ng-deep .hljs-regexp,:host ::ng-deep .hljs-meta{color:#9c27b0}:host ::ng-deep .hljs-string,:host ::ng-deep .hljs-subst{color:#0d904f}:host ::ng-deep .hljs-number,:host ::ng-deep .hljs-variable,:host ::ng-deep .hljs-template-variable{color:#80cbc4}:host ::ng-deep .hljs-name,:host ::ng-deep .hljs-keyword,:host ::ng-deep .hljs-type,:host ::ng-deep .hljs-attribute{color:#3b78e7}:host ::ng-deep .hljs-title,:host ::ng-deep .hljs-function>.hljs-title,:host ::ng-deep .hljs-symbol,:host ::ng-deep .hljs-bullet,:host ::ng-deep .hljs-built_in,:host ::ng-deep .hljs-builtin-name,:host ::ng-deep .hljs-link{color:#6182b8}:host ::ng-deep .hljs-params{color:#d81b60}:host ::ng-deep .hljs-addition{color:#3b78e7;display:inline-block;width:100%}:host ::ng-deep .hljs-deletion{color:#e53935;display:inline-block;width:100%}:host ::ng-deep .hljs-selector-id,:host ::ng-deep .hljs-selector-class{color:#8796b0}:host ::ng-deep .hljs-emphasis{font-style:italic}:host ::ng-deep .hljs-strong{font-weight:bold}:host ::ng-deep .hljs-link{text-decoration:underline}mat-toolbar{color:#0000008a;font-size:16px;display:flex;justify-content:space-between}.example-code{border-bottom:1px solid rgba(0,0,0,.1);font-family:monospace;margin:0;padding:15px!important}:host{padding:20px 0;display:block}:host mat-toolbar span{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}\n"], components: [{ type: i5.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { type: i6.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i7.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i8.MatTabGroup, selector: "mat-tab-group", inputs: ["color", "disableRipple"], exportAs: ["matTabGroup"] }, { type: i8.MatTab, selector: "mat-tab", inputs: ["disabled", "label", "aria-label", "aria-labelledby"], exportAs: ["matTab"] }, { type: i9.FsExampleHighlightComponent, selector: "fs-example-highlight", inputs: ["language", "source"] }, { type: i10.MatCard, selector: "mat-card", exportAs: ["matCard"] }], directives: [{ type: i11.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { type: i12.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i12.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "uppercase": i12.UpperCasePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsExampleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'fs-example',
                    templateUrl: 'fs-example.component.html',
                    styleUrls: ['fs-example.component.scss'],
                    providers: [ExampleService]
                }]
        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: i2.FsExampleService }, { type: i3.FsDrawerService }, { type: i4.ExampleService }]; }, propDecorators: { name: [{
                type: Input
            }], componentPath: [{
                type: Input
            }], componentName: [{
                type: Input
            }], componentNames: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,