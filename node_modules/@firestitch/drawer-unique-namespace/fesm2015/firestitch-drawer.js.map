{"version":3,"file":"firestitch-drawer.js","sources":["ng://@firestitch/drawer/app/helpers/action-type.enum.ts","ng://@firestitch/drawer/app/models/base-action.ts","ng://@firestitch/drawer/app/models/menu-action.model.ts","ng://@firestitch/drawer/app/models/action.model.ts","ng://@firestitch/drawer/app/models/drawer-config.model.ts","ng://@firestitch/drawer/app/classes/drawer-ref.ts","ng://@firestitch/drawer/app/components/drawer-menu/drawer-menu.component.ts","ng://@firestitch/drawer/app/classes/drawer-menu-ref.ts","ng://@firestitch/drawer/app/classes/drawer-data.ts","ng://@firestitch/drawer/app/services/drawer-menu-data.ts","ng://@firestitch/drawer/app/services/drawer-menu.service.ts","ng://@firestitch/drawer/app/components/drawer-actions/drawer-actions.component.ts","ng://@firestitch/drawer/app/classes/drawer-size-controller.ts","ng://@firestitch/drawer/app/components/drawer/drawer.component.ts","ng://@firestitch/drawer/app/directives/drawer-action.directive.ts","ng://@firestitch/drawer/app/components/drawer-side/drawer-side.component.ts","ng://@firestitch/drawer/app/components/drawer-actions/drawer-action-item/drawer-action-item.component.ts","ng://@firestitch/drawer/app/components/drawer-content/drawer-content.component.ts","ng://@firestitch/drawer/app/directives/drawer-resizer.directive.ts","ng://@firestitch/drawer/app/services/drawer-data.ts","ng://@firestitch/drawer/app/services/drawer.service.ts","ng://@firestitch/drawer/app/fs-drawer.module.ts","ng://@firestitch/drawer/public_api.ts","ng://@firestitch/drawer/firestitch-drawer.ts"],"sourcesContent":["export enum FsDrawerAction {\n  Button = 'button',\n  Menu = 'menu',\n  Component = 'component',\n}\n","import {\n  IDrawerActionLink,\n  IDrawerActionLinkFn,\n  IDrawerActionShowFn,\n  IMenuActionClick\n} from '../interfaces/action.iterface';\nimport { DrawerData } from '../classes/drawer-data';\n\nexport class BaseAction {\n\n  protected _visible = true;\n  protected _routerLink: IDrawerActionLink;\n\n  protected _icon: string;\n  protected readonly _show: IDrawerActionShowFn;\n  protected readonly _click: Function | null;\n  protected readonly _link: IDrawerActionLinkFn;\n\n  constructor(data: any = {}) {\n    this._icon = data.icon || '';\n    this._click = data.click || null;\n    this._link = data.link;\n    this._show = data.show || null;\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  get click() {\n    return this._click;\n  }\n\n  get routerLink() {\n    return this._routerLink;\n  }\n\n  get visible() {\n    return this._visible\n  }\n\n  public checkVisibility(data: DrawerData) {\n    if (this._show) {\n      this._visible = this._show(data);\n    }\n  }\n\n  public updateRouterLink(data: IMenuActionClick) {\n    if (this._visible && this._link) {\n      this._routerLink = this._link(data);\n    }\n  }\n}\n","import { BaseAction } from './base-action';\nimport { DrawerData } from '../classes/drawer-data';\n\n\nexport class MenuAction extends BaseAction {\n  public actions: MenuAction[] = [];\n\n  private _label: string;\n\n  private readonly _isGroup: boolean = false;\n\n  constructor(data: any = {}) {\n    super(data);\n\n    if (Array.isArray(data.actions)) {\n      this._isGroup = true;\n\n      this.actions = data.actions.map((action) => new MenuAction(action));\n    }\n    this._label = data.label || '';\n  }\n\n  get isGroup() {\n    return this._isGroup;\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  public updateRouterLink(data) {\n    super.updateRouterLink(data);\n\n    if (this.actions.length > 0) {\n      this.actions.forEach((action) => {\n        action.updateRouterLink(data);\n      })\n    }\n  }\n\n\n  public checkVisibility(data: DrawerData) {\n    super.checkVisibility(data);\n\n    if (this.actions.length > 0) {\n      this.actions.forEach((action) => {\n        action.checkVisibility(data);\n      })\n    }\n\n    if (this.actions.length > 0) {\n      this._visible = this.actions.some((action) => action.visible);\n    }\n  }\n}\n","import { FsDrawerAction } from '../helpers/action-type.enum';\nimport { BaseAction } from './base-action';\nimport { DrawerData } from '../classes/drawer-data';\nimport { MenuAction } from './menu-action.model';\n\n\nexport class Action extends BaseAction {\n  private _tooltip: string;\n  private _data: any = null;\n  private readonly _toggle: boolean;\n  private readonly _type: FsDrawerAction;\n  private readonly _name: string;\n  private readonly _close: boolean = false;\n  private readonly _closeSide: boolean = true;\n  private readonly _menuActions: MenuAction[] = [];\n  private readonly _component = null;\n  private readonly _menuRefName = null;\n\n  constructor(data: any = {}) {\n    super(data);\n    this._icon = data.icon || '';\n    this._type = data.type || '';\n    this._name = data.name || '';\n    this._toggle = data.toggle === void 0 ? true : data.toggle;\n    this._tooltip = data.tooltip || '';\n    this._close = !!data.close;\n    this._component = data.component || null;\n    this._data = data.data === void 0 ? {} : data.data;\n\n    if (this._type === FsDrawerAction.Component) {\n      this._menuRefName = data.name || data.icon;\n    }\n\n    if (this._type === FsDrawerAction.Menu && data.closeSide === void 0) {\n     this._closeSide = false;\n    } else {\n      this._closeSide = data.closeSide === void 0 ? true : !!data.closeSide;\n    }\n\n    if (Array.isArray(data.actions)) {\n      this._menuActions = data.actions.map((action) => new MenuAction(action));\n    }\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  set icon(value: string) {\n    this._icon = value;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get toggle() {\n    return this._toggle;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get tooltip() {\n    return this._tooltip;\n  }\n\n  set tooltip(value: string) {\n    this._tooltip = value;\n  }\n\n  get close() {\n    return this._close;\n  }\n\n  get closeSide() {\n    return this._closeSide;\n  }\n\n  get menuActions() {\n    return this._menuActions;\n  }\n\n  get component() {\n    return this._component;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  set data(value: any) {\n    this._data = value;\n  }\n\n  get menuRefName() {\n    return this._menuRefName;\n  }\n\n  public updateRouterLink(data) {\n    if (this._visible) {\n      super.updateRouterLink(data);\n\n      if (this._menuActions.length > 0) {\n        this._menuActions.forEach((action) => {\n          action.updateRouterLink(data);\n        })\n      }\n    }\n  }\n\n  public checkVisibility(data: DrawerData) {\n    super.checkVisibility(data);\n\n    if (this._menuActions.length > 0) {\n      this._menuActions.forEach((action) => {\n        action.checkVisibility(data);\n      })\n    }\n\n    if (this.menuActions.length > 0) {\n      this._visible = this.menuActions.some((action) => action.visible);\n    }\n  }\n}\n","import { Action } from './action.model';\nimport { IDrawerConfig, IDrawerWidthConfig } from '../interfaces/drawer-config.interface';\n\n\nexport class DrawerConfig {\n  public disableClose: boolean;\n  public position: 'right' | 'left';\n  public activeAction: string;\n  public resizable: boolean;\n  public width: IDrawerWidthConfig;\n  public actions: Action[] | null;\n\n  constructor(data: IDrawerConfig = {}) {\n    this.disableClose = data.disableClose || false;\n    this.position = data.position || 'right';\n    this.activeAction = data.activeAction || '';\n\n    this.resizable = data.resizable === void 0 ? true : data.resizable;\n\n    if (data.width) {\n      this.width = data.width;\n    }\n\n    this.actions = data.actions && data.actions.map((action) => new Action(action)) || null;\n  }\n}\n","import { ComponentRef, ElementRef } from '@angular/core';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { OverlayRef } from '@angular/cdk/overlay';\n\nimport { BehaviorSubject, Observable, Subject, Subscriber, zip } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { DrawerData } from './drawer-data';\nimport { FsDrawerComponent } from '../components/drawer/drawer.component';\nimport { DrawerConfig } from '../models/drawer-config.model';\nimport { DrawerMenuRef } from '../classes/drawer-menu-ref';\nimport { IDrawerConfig } from '../interfaces/drawer-config.interface';\nimport { DrawerSizeController } from './drawer-size-controller';\n\n\nexport class DrawerRef<T, R = any> {\n\n  public readonly drawerConfig: DrawerConfig;\n\n  /** Subject for notifying the user that the drawer has finished opening. */\n  private readonly _afterOpened$ = new Subject<void>();\n\n  /** Subject for notifying the user that the drawer has finished closing. */\n  private readonly _afterClosed$ = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the drawer has started closing. */\n  private readonly _closeStart$ = new Subject<Subscriber<void>>();\n\n  /** Subject for notifying the user that the drawer has started opening. */\n  private readonly _openStart$ = new Subject<Subscriber<void>>();\n\n  /** Subject for notifying the user that the drawer has started closing. */\n  private readonly _sideToggle = new Subject<boolean>();\n\n  /** Subject for notifying the user that the drawer has finished opening. */\n  private readonly _actionsUpdated$ = new Subject<string>();\n\n  /** Destroy notifier **/\n  private readonly _destroy$ = new Subject<void>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  /** Main drawer component and template */\n  private _drawerContainerRef: FsDrawerComponent;\n\n  /** Main drawer component and template */\n  private _drawerComponentRef: ComponentRef<T>;\n\n  /** Drawer Content Template */\n  private _drawerContentContainer: ElementRef;\n\n  /** Drawer Actions Template */\n  private _drawerActionsContainer: ElementRef;\n\n  private _resizeController: DrawerSizeController;\n\n  private _activeAction = new BehaviorSubject<string>(void 0);\n\n  private _menuRefs = new Map<string, DrawerMenuRef<T, R>>();\n\n  private _isOpen = false;\n  private _isSideOpen = false;\n\n\n  constructor(\n    private _overlayRef: OverlayRef,\n    private _dataFactory: DrawerData,\n    _config: IDrawerConfig\n  ) {\n    this.drawerConfig = new DrawerConfig(_config);\n    this._activeAction.next(this.drawerConfig.activeAction);\n  }\n\n  public get overlayRef() {\n    return this._overlayRef;\n  }\n\n  /**\n   * Getter for DRAWER_DATA for current drawer\n   */\n  public get drawerData() {\n    return { ...this._dataFactory.getValue() } // Like immutable.... TODO switch to Immer\n  }\n\n  public get destroy$() {\n    return this._destroy$.asObservable();\n  }\n\n  /**\n   * Set reference to drawer container\n   * @param value\n   */\n  public set containerRef(value: FsDrawerComponent) {\n    this._drawerContainerRef = value;\n  }\n\n  /**\n   * Set reference to drawer component\n   * @param value\n   */\n  public set componentRef(value: ComponentRef<T>) {\n    this._drawerComponentRef = value;\n  }\n\n  public set drawerContentContainer(value: ElementRef) {\n    this._drawerContentContainer = value;\n  }\n\n  public set drawerActionsContainer(value: ElementRef) {\n    this._drawerActionsContainer = value;\n  }\n\n  public get drawerContentContainer(): ElementRef {\n    return this._drawerContentContainer;\n  }\n\n  public get drawerActionsContainer(): ElementRef {\n    return this._drawerActionsContainer;\n  }\n\n  public get activeAction() {\n    return this._activeAction.getValue();\n  }\n\n  public get activeAction$() {\n    return this._activeAction.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Return actual status of the drawer\n   */\n  public get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  /**\n   * Return actual status of the side of the drawer\n   */\n  public get isSideOpen(): boolean {\n    return this._isSideOpen;\n  }\n\n  public set resizeController(value: DrawerSizeController) {\n    this._resizeController = value;\n  }\n\n  public get resizeController(): DrawerSizeController {\n    return this._resizeController;\n  }\n\n  /**\n   * Gets an observable that action was updated and change detection should be started\n   */\n  public get actionUpdated$(): Observable<string> {\n    return this._actionsUpdated$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  public get afterClosed$(): Observable<R | undefined> {\n    return this._afterClosed$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  public get afterOpened$(): Observable<void> {\n    return this._afterOpened$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog open starts.\n   */\n  public get openStart$(): Observable<Subscriber<void>> {\n    return this._openStart$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  public get closeStart$(): Observable<Subscriber<void>> {\n    return this._closeStart$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when data in DRAWER_DATA was changed\n   */\n  public get dataChanged$(): Observable<any> {\n    return this._dataFactory.dataChange$;\n  }\n\n  /**\n   * Gets an observable that is notify that side status toggled\n   */\n  public get sideToggle$(): Observable<boolean> {\n    return this._sideToggle.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Subscribe on keydown events to react on escape\n   */\n  public events() {\n    this._overlayRef.keydownEvents()\n      .pipe(\n        filter(event => event.keyCode === ESCAPE && !this.drawerConfig.disableClose),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => this.close());\n  }\n\n  /**\n   * Set value for DRAWER_DATA\n   * @param data\n   */\n  public dataChange(data) {\n    this._dataFactory.setValue(data);\n  }\n\n  /**\n   * Open drawer and notify observable\n   */\n  public open() {\n    new Observable<void>((obs) => {\n      setTimeout(() => { // FIXME Crutch\n        if (this._openStart$.observers.length) {\n          this._openStart$.next(obs);\n        } else {\n          obs.next();\n          obs.complete();\n        }\n      });\n    }).pipe(takeUntil(this._destroy$))\n      .subscribe({\n        next: () => {\n          if (this.activeAction) {\n            this.openSide();\n          }\n\n          this._drawerContainerRef.open();\n          this._afterOpened$.next();\n          this._afterOpened$.complete();\n        },\n        error: () => {\n          this.destroy();\n        },\n    });\n  }\n\n  /**\n   * Close the drawer.\n   * @param result Optional result to return to the dialog opener.\n   */\n  public close(result?: R): void {\n    new Observable<void>(observer => {\n      if (this._closeStart$.observers.length) {\n        zip(...this._closeStart$.observers.map(item => {\n          return Observable.create(closeObserver => {\n            item.next(closeObserver);\n          });\n        }))\n        .pipe(\n          takeUntil(this._destroy$)\n        )\n        .subscribe(() => {\n          observer.next();\n          observer.complete();\n        }, () => {\n          observer.error();\n        });\n      } else {\n        observer.next();\n        observer.complete();\n      }\n\n    }).pipe(takeUntil(this._destroy$))\n      .subscribe({\n      next: () => {\n        this._drawerContainerRef.close();\n        this._result = result;\n        this._afterClosed$.next(result);\n        this.destroy();\n      }\n    });\n  }\n\n  /**\n   * Open the side of the drawer\n   */\n  public openSide() {\n    this._isSideOpen = true;\n    this._sideToggle.next(this._isSideOpen);\n  }\n\n  /**\n   * Close the side of the drawer\n   */\n  public closeSide() {\n    this._isSideOpen = false;\n    this._sideToggle.next(this._isSideOpen);\n\n    this.setActiveAction(null);\n  }\n\n  /**\n   * Toggle the side of the drawer\n   */\n  public toggleSide() {\n    this.isSideOpen ? this.closeSide() : this.openSide();\n  }\n\n  /**\n   * Change active action\n   * @param name\n   */\n  public setActiveAction(name: string) {\n    this._activeAction.next(name);\n\n    if (name) {\n      this.openSide();\n    }\n  }\n\n  /**\n   * Store opened menu reference and subscribe for auto remove\n   * @param name\n   * @param ref\n   */\n  public addMenuRef(name: string, ref: DrawerMenuRef<T, R>) {\n    this._menuRefs.set(name, ref);\n\n    ref.afterClosed()\n      .pipe(\n        take(1),\n        takeUntil(this._destroy$)\n      )\n      .subscribe(() => {\n        this._menuRefs.delete(name);\n      })\n  }\n\n  /**\n   * Get opened menu reference by name\n   * @param name\n   */\n  public getMenuRef(name: string) {\n    return this._menuRefs.get(name);\n  }\n\n  public getAction(name: string) {\n    return this.drawerConfig.actions.find((action) => action.name === name);\n  }\n\n  /**\n   * Do update for icon for target action\n   * @param name\n   * @param icon\n   */\n  public updateActionIcon(name: string, icon: string) {\n    const action = this.getAction(name);\n\n    if (action) {\n      action.icon = icon;\n\n      this._actionsUpdated$.next(name);\n    }\n  }\n\n  /**\n   * Do update\n   * @param name\n   * @param data\n   */\n  public updateAction(name: string, data) {\n    const action = this.getAction(name);\n\n    if (action) {\n      const allowedFields = ['icon', 'type', 'toggle', 'tooltip', 'close', 'closeSide', 'component', 'data'];\n\n      const forUpdate = Object.keys(data).filter((key) => allowedFields.indexOf(key) > -1);\n\n      forUpdate.forEach((key) => {\n        action[key] = data[key];\n      });\n\n      this._actionsUpdated$.next(name);\n    }\n  }\n\n  public updateDrawerWidth(width: number) {\n    this.resizeController.updateMainWidth(width);\n  }\n\n  public updateSideDrawerWidth(width: number) {\n    this.resizeController.updateSideWidth(width);\n  }\n\n  public destroy() {\n    this._overlayRef.detachBackdrop();\n    this._overlayRef.detach();\n    this._drawerComponentRef.destroy();\n    this._dataFactory.destroy();\n\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n}\n\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  EmbeddedViewRef,\n  ViewChild,\n} from '@angular/core';\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  TemplatePortal\n} from '@angular/cdk/portal';\nimport { DrawerMenuRef } from '../../classes/drawer-menu-ref';\n\n@Component({\n  selector: 'fs-drawer-menu',\n  templateUrl: 'drawer-menu.component.html',\n  styleUrls: [ 'drawer-menu.component.scss' ],\n  host: {\n    'class': 'mat-elevation-z2'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsDrawerMenuComponent extends BasePortalOutlet {\n\n  @ViewChild(CdkPortalOutlet, { static: true }) _portalOutlet: CdkPortalOutlet;\n\n  public ref: DrawerMenuRef<any>;\n\n  constructor() {\n    super();\n  }\n\n  public setDrawerMenuRef(value: DrawerMenuRef<any>) {\n    this.ref = value;\n\n    // this.config = this.externalMenuRef.config;\n  }\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  public attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Drawer component already attached');\n    }\n\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  public attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Drawer template already attached');\n    }\n\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n}\n","import { ComponentRef } from '@angular/core';\nimport { OverlayRef } from '@angular/cdk/overlay';\n\nimport { Observable, Subject, Subscriber, zip } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { FsDrawerMenuComponent } from '../components/drawer-menu/drawer-menu.component';\nimport { DrawerData } from './drawer-data';\n\nexport class DrawerMenuRef<TCmp, R = any> {\n\n  /** Subject for notifying the user that the menu has finished closing. */\n  private readonly _afterClosed$ = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the menu has started closing. */\n  private readonly _closeStart$ = new Subject<Subscriber<void>>();\n\n  /** Destroy notifier **/\n  private readonly _destroy$ = new Subject<void>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  /** Main menu component and template */\n  private _externalMenuContainerRef: FsDrawerMenuComponent;\n\n  /** Main menu component and template */\n  private _externalMenuComponentRef: ComponentRef<TCmp>;\n\n\n  constructor(private _overlayRef: OverlayRef, private _dataFactory: DrawerData) {\n    this._overlayRef.backdropClick()\n      .pipe(\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this.close();\n      })\n  }\n\n  /**\n   * Getter for DRAWER_MENU_DATA for current drawer\n   */\n  get menuData() {\n    return { ...this._dataFactory.getValue() } // Like immutable.... TODO switch to Immer\n  }\n\n  /**\n   * Set reference to menu container\n   * @param value\n   */\n  set containerRef(value: FsDrawerMenuComponent) {\n    this._externalMenuContainerRef = value;\n  }\n\n  /**\n   * Set reference to menu component\n   * @param value\n   */\n  set componentRef(value: ComponentRef<TCmp>) {\n    this._externalMenuComponentRef = value;\n  }\n\n  /**\n   * Gets an observable that is notified when data in DRAWER_DATA was changed\n   */\n  get dataChanged$(): Observable<void> {\n    return this._dataFactory.dataChange$;\n  }\n\n  /**\n   * Set value for DRAWER_DATA\n   * @param data\n   */\n  public dataChange(data) {\n    this._dataFactory.setValue(data);\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  public afterClosed(): Observable<R | undefined> {\n    return this._afterClosed$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  public closeStart(): Observable<Subscriber<void>> {\n    return this._closeStart$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Close the menu.\n   * @param result Optional result to return to the dialog opener.\n   */\n  public close(result?: R): void {\n    new Observable<void>(observer => {\n      if (this._closeStart$.observers.length) {\n        zip(...this._closeStart$.observers.map(item => {\n          return Observable.create(closeObserver => {\n            item.next(closeObserver);\n          });\n        }))\n        .pipe(\n          takeUntil(this._destroy$)\n        )\n        .subscribe(() => {\n          observer.next();\n          observer.complete();\n        }, () => {\n          observer.error();\n        });\n      } else {\n        observer.next();\n        observer.complete();\n      }\n\n    }).pipe(takeUntil(this._destroy$))\n      .subscribe({\n      next: () => {\n        this._result = result;\n        this._afterClosed$.next(result);\n        this.destroy();\n      }\n    });\n  }\n\n\n  public destroy() {\n    this._overlayRef.detachBackdrop();\n    this._overlayRef.detach();\n    this._externalMenuComponentRef && this._externalMenuComponentRef.destroy();\n\n    this._dataFactory.destroy();\n\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport class DrawerData {\n\n  private _data;\n  private _dataChange = new Subject<any>();\n  private _destroy = new Subject<void>();\n\n  constructor(data: any = {}) {\n    this._data = data;\n  }\n\n  public static createWithProxy(data: any = {}) {\n    const drawerData = new DrawerData(data);\n\n    return new Proxy(drawerData, {\n      get(target, property) {\n        if (typeof target[property] === 'function'\n          || property === '_data'\n          || target[property] instanceof Observable\n        ) {\n          return target[property];\n        } else {\n          return target._data[property];\n        }\n      },\n\n      set(target, property, value) {\n        if (property !== '_data') {\n          target._data[property] = value;\n        } else {\n          target[property] = value;\n        }\n\n        return true;\n      },\n\n      has(target, property) {\n        return property in target._data;\n      },\n\n      ownKeys(target) {\n        return Object.keys(target._data);\n      },\n\n      enumerate(target) {\n        return Object.keys(target._data);\n      },\n\n      getOwnPropertyDescriptor(target, property) {\n        return Object.getOwnPropertyDescriptor(target._data, property);\n      }\n    });\n  }\n\n  get dataChange$(): Observable<void> {\n    return this._dataChange.pipe(takeUntil(this._destroy));\n  }\n\n  public getValue() {\n    return this._data;\n  }\n\n  public setValue(value) {\n    this._data = value;\n    this._dataChange.next(this._data);\n  }\n\n  public destroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/** Injection token that can be used to access the data that was passed in to a drawer. */\nexport const DRAWER_MENU_DATA = new InjectionToken<any>('fs.drawer.menu-data');\n","import {ElementRef, Injectable, Injector} from '@angular/core';\nimport { ConnectedPosition, Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType, PortalInjector } from '@angular/cdk/portal';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { FsDrawerMenuComponent } from '../components/drawer-menu/drawer-menu.component';\nimport { DrawerMenuRef } from '../classes/drawer-menu-ref';\nimport { DrawerData } from '../classes/drawer-data';\nimport { DRAWER_MENU_DATA } from '../services/drawer-menu-data';\n\n\n@Injectable()\nexport class FsDrawerMenuService {\n\n  constructor(private _overlay: Overlay,\n              private _injector: Injector,\n              private _breakpointObserver: BreakpointObserver) {\n  }\n\n  public create(component: ComponentType<any>, container: Element, config?: any) {\n    const overlayRef = this.createOverlay(container);\n    const dataFactory = DrawerData.createWithProxy(config.data);\n    const menuRef = new DrawerMenuRef(overlayRef, dataFactory);\n    const containerRef = this.attachContainer(overlayRef, menuRef, dataFactory);\n    const componentRef = this.attachComponent(component, containerRef, menuRef, dataFactory);\n    menuRef.containerRef = containerRef;\n    containerRef.setDrawerMenuRef(menuRef);\n\n    menuRef.componentRef = componentRef;\n\n    return menuRef;\n  }\n\n  private createOverlay(container: Element): OverlayRef {\n    const overlayConfig = this.getOverlayConfig(container);\n    return this._overlay.create(overlayConfig);\n  }\n\n  private getOverlayConfig(container: Element): OverlayConfig {\n    const element = new ElementRef(container); // positionStrategy needs ElementRef;\n\n    let strategy = null;\n    if (this._breakpointObserver.isMatched(Breakpoints.XSmall)) {\n      strategy = this._overlay\n        .position()\n        .global()\n        .centerHorizontally()\n        .centerVertically();\n    } else {\n      const positions: ConnectedPosition[] = [\n        { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' }\n      ];\n      strategy = this._overlay\n        .position()\n        .flexibleConnectedTo(element)\n        .withPositions(positions);\n    }\n\n    return new OverlayConfig({\n      positionStrategy: strategy,\n      scrollStrategy:  this._overlay.scrollStrategies.reposition(),\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop'\n    });\n  }\n\n  private attachContainer<T, R>(overlayRef: OverlayRef, menuRef: DrawerMenuRef<T, R>, dataFactory: DrawerData) {\n    const injector = this.createInjector(menuRef, dataFactory);\n    const containerPortal = new ComponentPortal(FsDrawerMenuComponent, undefined, injector);\n    const containerRef = overlayRef.attach<FsDrawerMenuComponent>(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private attachComponent<T, R>(\n    componentRef: ComponentType<T>,\n    externalContainer: FsDrawerMenuComponent,\n    externalRef: DrawerMenuRef<T, R>,\n    config: any,\n  ) {\n\n    const injector = this.createInjector(externalRef, config);\n\n    return externalContainer.attachComponentPortal<T>(\n      new ComponentPortal<T>(componentRef, undefined, injector)\n    );\n  }\n\n\n  private createInjector(componentRef, dataFactory: DrawerData) {\n    const injectionTokens = new WeakMap<any, any>([\n      [DrawerMenuRef, componentRef],\n      [DRAWER_MENU_DATA, dataFactory]\n    ]);\n\n    return new PortalInjector(this._injector, injectionTokens);\n  }\n}\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { FsDrawerAction } from '../../helpers/action-type.enum';\nimport { DrawerRef } from '../../classes/drawer-ref';\nimport { Action } from '../../models/action.model';\nimport { FsDrawerMenuService } from '../../services/drawer-menu.service';\n\n\n@Component({\n  selector: 'fs-drawer-actions',\n  templateUrl: './drawer-actions.component.html',\n  styleUrls: [ './drawer-actions.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsDrawerActionsComponent implements OnInit, OnDestroy {\n  @Input() public actions: Action[];\n  @Input() public activeAction: string;\n\n  private _destroy$ = new Subject<void>();\n\n  constructor(\n    private _drawerRef: DrawerRef<any>,\n    private _drawerMenu: FsDrawerMenuService,\n    private _cdRef: ChangeDetectorRef,\n  ) {}\n\n  public ngOnInit() {\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public actionClick(action, event) {\n    const hasComponentType = action.type === FsDrawerAction.Component;\n    const hasMenuType = action.type === FsDrawerAction.Menu;\n\n    if (hasComponentType) {\n      const menuRef = this._drawerMenu.create(action.component, event.srcElement, action);\n\n      this._drawerRef.addMenuRef(action.menuRefName, menuRef);\n\n      const params = {\n        event: event,\n        action: action,\n        drawerRef: this._drawerRef,\n        menuRef: menuRef\n      };\n      // Call click\n      action.click.call(null, params);\n\n      if (action.closeSide) {\n        this._drawerRef.closeSide();\n      }\n    } else if (action.click) {\n      const params = { event: event, action: action };\n      action.click.call(null, params);\n    }\n\n    if (action.close) {\n      this._drawerRef.close();\n    }\n\n    if (action.toggle && ((!hasComponentType && !hasMenuType) || action.closeSide)) {\n      if (this._drawerRef.isSideOpen && this._drawerRef.activeAction === action.name) {\n        this._drawerRef.toggleSide();\n      } else {\n        this._drawerRef.setActiveAction(action.name);\n      }\n    }\n  }\n\n}\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\n\nimport { fromEvent, Subject } from 'rxjs';\nimport { debounceTime, delay, takeUntil } from 'rxjs/operators';\n\nimport { DrawerRef } from '../classes/drawer-ref';\nimport { FsDrawerResizerDirective } from '../directives/drawer-resizer.directive';\nimport { IDrawerWidthDefinition } from '../interfaces/drawer-config.interface';\n\nconst MAIN_DRAWER_DEFAULT_WIDTH = 500;\nconst SIDE_DRAWER_DEFAULT_WIDTH = 200;\nconst SIDE_RESIZE_BAR_WIDTH = 25;\nconst MAIN_RESIZE_ACTION_BAR_WIDTH = 40;\n\n@Injectable()\nexport class DrawerSizeController implements OnDestroy {\n\n  private _mainElRef: FsDrawerResizerDirective;\n  private _sideElRef: FsDrawerResizerDirective;\n\n  private _mainConfig: IDrawerWidthDefinition;\n  private _sideConfig: IDrawerWidthDefinition;\n\n  private _sideOpened = false;\n  private _screenWidth: number;\n\n  private readonly _borderPadding = 0;\n\n  private _destroy$ = new Subject<void>();\n\n  constructor(\n    private _drawerRef: DrawerRef<any>,\n    private _ngZone: NgZone,\n  ) {\n    this._initDefaultConfigs();\n    this._updateScreenWidth();\n    this._listenWindowResize();\n    this._listenSideToggle();\n  }\n\n  public get mainElRef() {\n    return this._mainElRef;\n  }\n\n  public get sideElRef() {\n    return this._sideElRef;\n  }\n\n  public get mainConfig(): IDrawerWidthDefinition {\n    return this._mainConfig;\n  }\n\n  public get sideConfig(): IDrawerWidthDefinition {\n    return this._sideConfig;\n  }\n\n  public get screenWidth(): number {\n    return this._screenWidth;\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public registerElRef(el: FsDrawerResizerDirective) {\n    if (el.type === 'main') {\n      this._registerMainRef(el);\n    } else if (el.type === 'side') {\n      this._registerSideRef(el);\n    } else {\n      throw Error('Unrecognized resize element type')\n    }\n  }\n\n  public getInitialWidth(type: 'main' | 'side'): number {\n    if (type === 'main') {\n      return this.mainConfig.initial;\n    } else if (type === 'side') {\n      return this.sideConfig.initial;\n    } else {\n      return void 0;\n    }\n  }\n\n  public getMinWidth(type: 'main' | 'side'): number {\n    if (type === 'main') {\n      return this.mainConfig.min;\n    } else if (type === 'side') {\n      return this.sideConfig.min;\n    } else {\n      return void 0;\n    }\n  }\n\n  public getMaxWidth(type: 'main' | 'side'): number {\n    if (type === 'main') {\n      return this.mainConfig.max;\n    } else if (type === 'side') {\n      return this.sideConfig.max;\n    } else {\n      return void 0;\n    }\n  }\n\n  /**\n   * Update width from outside with all calculations to be done\n   * @param width\n   */\n  public updateMainWidth(width: number) {\n    const sideWidth = (this.sideElRef && this.sideElRef.width) || 0;\n    this.mainElRef.updateWidth(sideWidth + width);\n  }\n\n  /**\n   * Update width from outside with all calculations to be done\n   * @param width\n   */\n  public updateSideWidth(width: number) {\n    if (this.sideElRef) {\n      const currentWidth = this.mainElRef.width - this.sideElRef.width;\n      this.mainElRef.updateWidth(currentWidth + width);\n      this.sideElRef.updateWidth(width);\n    }\n  }\n\n  /**\n   * Push current drawer to be visible under new one opened\n   * @param inFrontDrawer\n   */\n  public pushMainWidth(inFrontDrawer: DrawerRef<any>) {\n    const inFrontDrawerTotalWidth = inFrontDrawer.resizeController.mainElRef.width + MAIN_RESIZE_ACTION_BAR_WIDTH;\n\n    if (this.mainElRef.width <= inFrontDrawerTotalWidth) {\n      this.updateMainWidth(inFrontDrawerTotalWidth);\n    }\n  }\n\n  /**\n   * Listen for browser resize and update restrictions\n   */\n  private _listenWindowResize() {\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent(window, 'resize')\n        .pipe(\n          debounceTime(50),\n          takeUntil(this._destroy$),\n        )\n        .subscribe(() => {\n          this._updateScreenWidth();\n          this._updateMinMaxStyles();\n        });\n    });\n  }\n\n  /**\n   * Copy initial configs or set default values\n   */\n  private _initDefaultConfigs() {\n    this._mainConfig =\n      (this._drawerRef.drawerConfig.width && this._drawerRef.drawerConfig.width.main)\n      || {};\n\n    this._mainConfig.initial = this._mainConfig.initial || MAIN_DRAWER_DEFAULT_WIDTH;\n\n    this._sideConfig =\n      (this._drawerRef.drawerConfig.width && this._drawerRef.drawerConfig.width.side)\n      || {};\n\n    this._sideConfig.initial = this._sideConfig.initial || SIDE_DRAWER_DEFAULT_WIDTH;\n  }\n\n  private _registerMainRef(el: FsDrawerResizerDirective) {\n    this._mainElRef = el;\n  }\n\n  private _registerSideRef(el: FsDrawerResizerDirective) {\n    this._sideElRef = el;\n  }\n\n  /**\n   * Update current window size\n   */\n  private _updateScreenWidth(): void {\n    this._screenWidth = (window.innerWidth - this._borderPadding);\n  }\n\n  /**\n   * Update min&max css props for containers\n   */\n  private _updateMinMaxStyles(): void {\n    this.mainElRef.setMinMaxStyles();\n\n    if (this.sideElRef) {\n      this.sideElRef.setMinMaxStyles();\n    }\n  }\n\n  private _listenSideToggle(): void {\n    this._drawerRef.sideToggle$\n      .pipe(\n        takeUntil(this._destroy$),\n      )\n      .subscribe((opened: boolean) => {\n        if (this._sideOpened === opened) {\n          return;\n        }\n\n        this._sideOpened = opened;\n\n        if (opened) {\n          const currentWidth = this.mainElRef.width;\n          const sideWidth = this.getInitialWidth('side');\n\n          this._mainElRef.updateWidth(currentWidth + sideWidth + SIDE_RESIZE_BAR_WIDTH);\n        } else {\n          const actualSideWidth = this.sideElRef.fsDrawerResizer.getBoundingClientRect().width;\n          const mainWidth = this.mainElRef.width - actualSideWidth - SIDE_RESIZE_BAR_WIDTH;\n\n          this._mainElRef.updateWidth(mainWidth);\n        }\n      })\n  }\n}\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  TemplatePortal,\n} from '@angular/cdk/portal';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { DrawerRef } from '../../classes/drawer-ref';\nimport { DrawerConfig } from '../../models/drawer-config.model';\nimport { FsDrawerMenuService } from '../../services/drawer-menu.service';\nimport { DrawerSizeController } from '../../classes/drawer-size-controller';\n\n\n@Component({\n  selector: 'fs-drawer',\n  templateUrl: './drawer.component.html',\n  providers: [\n    FsDrawerMenuService,\n    DrawerSizeController,\n  ],\n  host: {\n    'class': 'fs-drawer-container',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsDrawerComponent extends BasePortalOutlet implements OnInit, OnDestroy {\n\n  public config: DrawerConfig;\n  public isOpen = false;\n  public isOpenSide = false;\n\n  public drawerRef: DrawerRef<any>;\n\n  public initialized = false;\n\n  @ViewChild(CdkPortalOutlet, { static: true })\n  private _portalOutlet: CdkPortalOutlet;\n\n  @ViewChild('drawerContentContainer', { static: true })\n  private _drawerContentContainer: ElementRef;\n\n  @ViewChild('drawerActionsContainer', { read: ElementRef, static: true })\n  private _drawerActionsContainer: ElementRef;\n\n  private _sideOpen = false;\n  private _destroy$ = new Subject();\n\n  constructor(\n    private _el: ElementRef<HTMLElement>,\n    private _drawerMenu: FsDrawerMenuService,\n    private _drawerRef: DrawerRef<any>,\n    private _cdRef: ChangeDetectorRef,\n    private _resizeController: DrawerSizeController,\n  ) {\n    super();\n\n    this._drawerRef.resizeController = this._resizeController;\n  }\n\n  public get sideOpen() {\n    return this._sideOpen;\n  }\n\n  public set sideOpen(value: boolean) {\n    this._sideOpen = value;\n\n    this._el.nativeElement.classList\n      .toggle('side-open', this.sideOpen);\n  }\n\n  public ngOnInit() {\n    this._listenDataChanges();\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public open() {\n    this.isOpen = true;\n  }\n\n  public close() {\n    this.isOpen = false;\n  }\n\n  public openSide() {\n    this.isOpenSide = true;\n  }\n\n  public closeSide() {\n    this.isOpenSide = false;\n  }\n\n  public setDrawerRef(value: DrawerRef<any>) {\n    this.drawerRef = value;\n\n    this.config = this.drawerRef.drawerConfig;\n\n    // Need to be like a parent for children resize\n    this.drawerRef.drawerContentContainer = this._drawerContentContainer;\n    this.drawerRef.drawerActionsContainer = this._drawerActionsContainer;\n\n    this.drawerRef.sideToggle$\n      .pipe(\n        takeUntil(this._destroy$),\n      )\n      .subscribe((opened) => {\n        this.sideOpen = opened;\n      });\n\n    this.initialized = true;\n  }\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  public attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Drawer component already attached');\n    }\n\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  public attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Drawer template already attached');\n    }\n\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  private _listenDataChanges() {\n    this._drawerRef.dataChanged$\n      .pipe(\n        takeUntil(this._destroy$)\n      )\n      .subscribe(() => {\n        this._cdRef.detectChanges();\n      });\n  }\n}\n","import { Directive, Input, } from '@angular/core';\n\n@Directive({\n  selector: '[fsDrawerAction]',\n})\nexport class FsDrawerActionDirective {\n\n  @Input('fsDrawerAction') public name: string;\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { DrawerRef } from '../../classes/drawer-ref';\nimport { FsDrawerActionDirective } from '../../directives/drawer-action.directive';\n\n\n@Component({\n  selector: '[fsDrawerSide]',\n  templateUrl: './drawer-side.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [\n    './drawer-side.component.scss',\n  ],\n})\nexport class FsDrawerSideComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @Input('fsDrawerSide') public drawer: DrawerRef<any>;\n\n  @HostBinding('class.side') public classSide = true;\n\n  @ContentChildren(FsDrawerActionDirective) actions: QueryList<FsDrawerActionDirective>;\n\n  @ContentChildren(FsDrawerActionDirective, { read: TemplateRef })\n  actionsTemplates: QueryList<TemplateRef<any>>;\n\n  public activeTemplate: TemplateRef<any> = null;\n\n  private _hidden = false;\n  private _destroy$ = new EventEmitter();\n\n  constructor(\n    private _cdRef: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    private _elRef: ElementRef,\n  ) {}\n\n  public set hidden(value: boolean) {\n    this._hidden = value;\n\n    if (this._hidden) {\n      this._renderer.setAttribute(this._elRef.nativeElement, 'hidden', 'true');\n    } else {\n      this._renderer.removeAttribute(this._elRef.nativeElement, 'hidden');\n    }\n  }\n  public ngOnInit() {\n\n    this.hidden = true;\n\n    if (!this.drawer) {\n      console.error('Drawer reference is null for @Input(\"fsDrawerSide\")');\n    }\n\n    this._subscribeToActionChanges();\n  }\n\n  public ngAfterViewInit() {\n    setTimeout(() => {\n      // Check current side status\n      if (this.drawer) {\n        this.hidden = !this.drawer.isSideOpen;\n      }\n\n      this._updateActiveActionTemplate();\n    });\n  }\n\n  public ngOnDestroy() {\n    this._destroy$.emit();\n    this._destroy$.complete();\n  }\n\n  private _subscribeToActionChanges() {\n    if (this.drawer) {\n      this.drawer.sideToggle$\n        .pipe(\n          takeUntil(this._destroy$),\n        )\n        .subscribe(() => {\n          this.hidden = !this.drawer.isSideOpen;\n          this._updateActiveActionTemplate();\n\n          this._cdRef.detectChanges();\n        });\n    }\n  }\n\n  private _updateActiveActionTemplate() {\n    if (this.drawer) {\n      const activatedAction = this.drawer.activeAction;\n\n      if (this.drawer.isSideOpen && activatedAction) {\n        const selectedActionIndex = this.actions\n          .toArray()\n          .findIndex((action) => action.name === activatedAction);\n\n        this.activeTemplate = this.actionsTemplates.toArray()[selectedActionIndex];\n      } else {\n        this.activeTemplate = null;\n      }\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, EventEmitter,\n  Input,\n  OnChanges, OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { debounceTime, filter, takeUntil } from 'rxjs/operators';\n\nimport { DrawerRef } from '../../../classes/drawer-ref';\nimport { FsDrawerAction } from '../../../helpers/action-type.enum';\nimport { Action } from '../../../models/action.model';\n\n\n@Component({\n  selector: 'fs-drawer-action-item',\n  templateUrl: './drawer-action-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsDrawerActionItemComponent implements OnInit, OnChanges {\n  @Input()\n  public action: Action;\n\n  @Input()\n  public activeAction: string;\n\n  @Output()\n  public actionClicked = new EventEmitter();\n\n  public isActive = false;\n  public actionTypes = FsDrawerAction;\n\n  private _destroy$ = new Subject<void>();\n\n  constructor(\n    public drawer: DrawerRef<any>,\n    private _cdRef: ChangeDetectorRef,\n  ) {\n    this._listenActionChanges();\n    this._listenDataChanges();\n  }\n\n  public ngOnInit(): void {\n    this._updateVisibilityAndLinks();\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.activeAction) {\n      this.isActive = this.action.name !== '' && this.action.name === this.activeAction;\n    }\n  }\n\n  public actionClick(event) {\n    this.actionClicked.emit(event);\n  }\n\n  public menuActionClick(action, event) {\n    if (action.click) {\n      action.click.call(null, {\n        data: this.drawer.drawerData,\n        event: event,\n        drawerRef: this.drawer,\n        action: action\n      });\n    }\n  }\n\n  private _listenActionChanges() {\n    this.drawer.actionUpdated$\n      .pipe(\n        filter((name) => name === this.action.name),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this._cdRef.detectChanges();\n      })\n  }\n\n  private _listenDataChanges() {\n    this.drawer.dataChanged$\n      .pipe(\n        takeUntil(this._destroy$),\n        debounceTime(50),\n      )\n      .subscribe(() => {\n        this._updateVisibilityAndLinks();\n      });\n  }\n\n\n  private _updateVisibilityAndLinks() {\n    this._updateVisibility();\n    this._updateRouterLinks();\n\n    this._cdRef.detectChanges();\n  }\n\n  private _updateVisibility() {\n    this.action.checkVisibility(this.drawer.drawerData);\n  }\n\n  private _updateRouterLinks() {\n    if (this.action.type === this.actionTypes.Menu) {\n      this.action.updateRouterLink({\n        data: this.drawer.drawerData,\n        drawerRef: this.drawer\n      });\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: '[fsDrawerContent]',\n  template: '<div class=\"content\"><ng-content></ng-content></div>',\n  host: {\n    'class': 'content-container'\n  }\n})\nexport class FsDrawerContentComponent {}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { DrawerSizeController } from '../classes/drawer-size-controller';\n\n\n@Directive({\n  selector: '[fsDrawerResizer]',\n  host: {\n    '[style.cursor]': '\"col-resize\"',\n  }\n})\nexport class FsDrawerResizerDirective implements OnInit, OnDestroy {\n\n  @Input() public fsDrawerResizer = this._el.nativeElement;\n  @Input() public type: 'main' | 'side';\n  @Input() public direction = 'left';\n  @Input() public resizable = true;\n  @Input() public parentContainer: ElementRef;\n  @Input() public actionsContainer: ElementRef;\n  @Input() public sizeController: DrawerSizeController;\n\n  private _dragStartHandler = this._dragStart.bind(this);\n  private _dragHandler = this._drag.bind(this);\n  private _dragEndHandler = this._dragEnd.bind(this);\n\n  private _x = 0;\n  private _width = 0;\n  private _actionsWidth = 0;\n\n  private _destroy$ = new Subject();\n\n  constructor(\n    private _el: ElementRef,\n    private _renderer: Renderer2,\n    private _ngZone: NgZone,\n  ) {}\n\n  public get width(): number {\n    return this._width;\n  }\n\n  private get minWidth(): number {\n    const minWidth = this.sizeController.getMinWidth(this.type);\n\n    if (minWidth && minWidth >= 0) {\n      if (minWidth > this.sizeController.screenWidth) {\n        return this.sizeController.screenWidth;\n      } else {\n        return minWidth;\n      }\n    }\n  }\n\n  private get maxWidth(): number {\n    const maxWidth = this.sizeController.getMaxWidth(this.type);\n    let parentContainerWidth = null;\n\n    if (this.parentContainer) {\n      parentContainerWidth = this._getElementWidth(this.parentContainer.nativeElement);\n    }\n\n    if (parentContainerWidth !== null) {\n      return !maxWidth || maxWidth >= parentContainerWidth\n        ? parentContainerWidth - this._actionsWidth * 2\n        : maxWidth;\n    } else {\n      return !maxWidth || maxWidth >= this.sizeController.screenWidth\n        ? this.sizeController.screenWidth\n        : maxWidth;\n    }\n  }\n\n  public ngOnInit() {\n\n    this.sizeController.registerElRef(this);\n\n    if (this.resizable) {\n      this._ngZone.runOutsideAngular(() => {\n        this._el.nativeElement.addEventListener('mousedown', this._dragStartHandler, false);\n        this._el.nativeElement.addEventListener('touchstart', this._dragStartHandler, false);\n      });\n\n      if (this.actionsContainer) {\n        this._actionsWidth = this._getElementWidth(this.actionsContainer.nativeElement)\n      }\n\n      this.setMinMaxStyles();\n\n      const minWidth = this.sizeController.getMinWidth(this.type);\n      let width = this.sizeController.getInitialWidth(this.type)\n        || this._getElementWidth(this.fsDrawerResizer);\n\n      if (width < minWidth) {\n        width = minWidth;\n      }\n\n      this.updateWidth(width);\n    }\n  }\n\n  public updateWidth(width) {\n    this._width = width;\n\n    requestAnimationFrame(() => {\n      this._renderer.setStyle(this.fsDrawerResizer, 'width', `${width}px`);\n    });\n  }\n\n  public ngOnDestroy() {\n    this._el.nativeElement.removeEventListener('mousedown', this._dragStartHandler, false);\n    this._el.nativeElement.removeEventListener('touchstart', this._dragStartHandler, false);\n\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  /**\n   * Set inline styles min/max width\n   */\n  public setMinMaxStyles() {\n    requestAnimationFrame(() => {\n      this._renderer.setStyle(this.fsDrawerResizer, 'min-width', `${this.minWidth}px`);\n      this._renderer.setStyle(this.fsDrawerResizer, 'max-width', `${this.maxWidth}px`)\n    });\n  }\n\n  /**\n   * Subscribe to move events and init base dimensions/restrictions\n   * @param event { MouseEvent }\n   */\n  private _dragStart(event: MouseEvent) {\n\n    this._x = this._getClientX(event);\n    this._width = this._getElementWidth(this.fsDrawerResizer);\n\n    this.setMinMaxStyles();\n\n    document.addEventListener('touchmove', this._dragHandler, false);\n    document.addEventListener('touchend', this._dragEndHandler, false);\n\n    document.addEventListener('mousemove', this._dragHandler, false);\n    document.addEventListener('mouseup', this._dragEndHandler, false);\n  }\n\n  /**\n   * Update coordinates during drag\n   * @param event\n   */\n  private _drag(event: MouseEvent) {\n    const clientX = this._getClientX(event);\n\n    const predictedWidth = this._calcWidth(this.direction, clientX);\n\n    this._updatePosition(clientX, predictedWidth);\n    this._emitResizeEvent();\n  }\n\n  /**\n   * Remove listeners when drag finished\n   * @param event\n   */\n  private _dragEnd(event: MouseEvent) {\n    document.removeEventListener('mousemove', this._dragHandler, false);\n    document.removeEventListener('mouseup', this._dragEndHandler, false);\n    document.removeEventListener('touchmove', this._dragHandler, false);\n    document.removeEventListener('touchend', this._dragEndHandler, false);\n  }\n\n  /**\n   *\n   * @param event\n   */\n  private _getClientX(event) {\n    return event.touches ? event.touches[0].clientX : event.clientX;\n  }\n\n  /**\n   * Will return width of element\n   * @param el\n   */\n  private _getElementWidth(el) {\n    return el.getBoundingClientRect().width;\n  }\n\n  /**\n   * Update width and position of target element\n   * @param clientX\n   * @param width\n   */\n  private _updatePosition(clientX: number, width: number) {\n    this._x = clientX;\n    this.updateWidth(width < 0 ? 0 : width)\n  }\n\n  /**\n   * Calc new width based on offset from previous position\n   * @param direction\n   * @param clientX\n   */\n  private _calcWidth(direction, clientX) {\n    const directionSign = direction === 'left' ? -1 : 1;\n\n    return this._width + (this._x - clientX) * directionSign;\n  }\n\n  /**\n   * Resize event for Window\n   */\n  private _emitResizeEvent() {\n    const resizeEvent = window.document.createEvent('UIEvents');\n    resizeEvent.initEvent('resize', true, false);\n\n    window.dispatchEvent(resizeEvent);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/** Injection token that can be used to access the data that was passed in to a drawer. */\nexport const DRAWER_DATA = new InjectionToken<any>('DrawerData');\n","import { Injectable, Injector, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType, PortalInjector } from '@angular/cdk/portal';\n\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, delay } from 'rxjs/operators';\n\nimport { FsDrawerComponent } from '../components/drawer/drawer.component';\nimport { DrawerRef } from '../classes/drawer-ref';\nimport { DrawerData } from '../classes/drawer-data';\nimport { IDrawerConfig } from '../interfaces/drawer-config.interface';\nimport { DRAWER_DATA } from './drawer-data';\n\n\n@Injectable()\nexport class FsDrawerService implements OnDestroy {\n\n  private _drawerRefs = new Set<DrawerRef<any>>();\n  private _destroy$ = new Subject();\n\n  constructor(\n    @Optional() @SkipSelf() private _parentDrawerService: FsDrawerService,\n    private _overlay: Overlay,\n    private _injector: Injector) {\n  }\n\n  public ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public open<TData = any>(component: ComponentType<any>, config?: IDrawerConfig<TData>) {\n    const overlayRef = this._createOverlay();\n\n    const dataFactory = DrawerData.createWithProxy(config.data);\n    const drawerRef = new DrawerRef(overlayRef, dataFactory, config);\n\n    const containerRef = this._attachDrawerContainer(overlayRef, drawerRef, dataFactory);\n    const componentRef = this._attachComponent(component, containerRef, drawerRef, dataFactory);\n\n    drawerRef.containerRef = containerRef;\n    containerRef.setDrawerRef(drawerRef);\n\n    drawerRef.componentRef = componentRef;\n\n    drawerRef.events();\n    drawerRef.open();\n\n    this._storeDrawerRef(drawerRef);\n\n    merge(\n      drawerRef.afterOpened$,\n      drawerRef.afterClosed$\n    )\n    .pipe(\n      takeUntil(this._destroy$)\n    )\n    .subscribe(() => {\n      setTimeout(() => {\n        this._applyBackdrop();\n        this._applyBodyOpenClass();\n      });\n    });\n\n    return drawerRef;\n  }\n\n  public closeAll() {\n    this._drawerRefs.forEach((ref) => ref.close());\n\n    if (this._parentDrawerService) {\n      this._parentDrawerService.closeAll();\n    }\n  }\n\n  private _applyBackdrop() {\n    Array.from(this._drawerRefs)\n    .forEach((drawerRef, index) => {\n      const backdrop = drawerRef.overlayRef.backdropElement;\n\n      if (backdrop) {\n        if (index && index === (this._drawerRefs.size - 1)) {\n          backdrop.classList.add('fs-drawer-backdrop-active');\n        } else {\n          backdrop.classList.remove('fs-drawer-backdrop-active');\n        }\n      }\n    });\n  }\n\n  private _applyBodyOpenClass() {\n    if (this._drawerRefs.size) {\n      document.body.classList.add('fs-drawer-open');\n    } else {\n      document.body.classList.remove('fs-drawer-open');\n    }\n  }\n\n  private _storeDrawerRef(ref) {\n    this._drawerRefs.add(ref);\n\n    this._pushDrawersCascade();\n\n    ref.destroy$\n      .pipe(\n        take(1),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this._drawerRefs.delete(ref);\n      });\n  }\n\n  /**\n   * In case, when we want to open more than 1 drawer\n   * our previously opened drawers should be visible\n   *\n   *      d1   d2   d3\n   *     ---- ---- ---\n   *    | x  | x1 | x2\n   *    | y  | y1 | y2\n   *    | z  | z1 | z2\n   *     ---- ---- ---\n   *\n   * Where d1, d2 - previously opened drawers\n   * d1 and d2 must be pushed left to be visible under just opened d3\n   */\n  private _pushDrawersCascade() {\n    if (this._drawerRefs.size > 1) {\n      // SetTimeout should be here because we must wait render newly opened drawer\n      // to be able to get his width\n      setTimeout(() => {\n        const refsArr = Array.from(this._drawerRefs.values());\n\n        for (let i = refsArr.length - 1; i > 0; i--) {\n          const prevRef = refsArr[i - 1];\n          const currRef = refsArr[i];\n\n          prevRef.resizeController.pushMainWidth(currRef);\n        }\n      })\n    }\n  }\n\n  private _createOverlay(): OverlayRef {\n    const overlayConfig = this._getOverlayConfig();\n    return this._overlay.create(overlayConfig);\n  }\n\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      hasBackdrop: true,\n      backdropClass: 'fs-drawer-backdrop'\n    });\n  }\n\n  private _attachDrawerContainer<T, R>(\n    overlayRef: OverlayRef,\n    drawerRef: DrawerRef<T, R>,\n    dataFactory: DrawerData\n  ) {\n    const injector = this._createInjector(drawerRef, dataFactory);\n    const containerPortal = new ComponentPortal(FsDrawerComponent, undefined, injector);\n    const containerRef = overlayRef.attach<FsDrawerComponent>(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private _attachComponent<T, R>(\n    componentRef: ComponentType<T>,\n    drawerContainer: FsDrawerComponent,\n    drawerRef: DrawerRef<T, R>,\n    dataFactory: DrawerData,\n  ) {\n\n    const injector = this._createInjector(drawerRef, dataFactory);\n\n    return drawerContainer.attachComponentPortal<T>(\n      new ComponentPortal<T>(componentRef, undefined, injector)\n    );\n  }\n\n\n  private _createInjector(componentRef, dataFactory) {\n    const injectionTokens = new WeakMap<any, any>([\n      [DrawerRef, componentRef],\n      [DRAWER_DATA, dataFactory]\n    ]);\n\n    return new PortalInjector(this._injector, injectionTokens);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { FsMenuModule } from '@firestitch/menu';\n\nimport { FsDrawerActionsComponent } from './components/drawer-actions/drawer-actions.component';\nimport { FsDrawerComponent } from './components/drawer/drawer.component';\nimport { FsDrawerSideComponent } from './components/drawer-side/drawer-side.component';\nimport { FsDrawerMenuComponent } from './components/drawer-menu/drawer-menu.component';\nimport { FsDrawerActionItemComponent } from './components/drawer-actions/drawer-action-item/drawer-action-item.component';\n\nimport { FsDrawerContentComponent } from './components/drawer-content/drawer-content.component';\nimport { FsDrawerActionDirective } from './directives/drawer-action.directive';\n\nimport { FsDrawerResizerDirective } from './directives/drawer-resizer.directive';\nimport { FsDrawerService } from './services/drawer.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatIconModule,\n    OverlayModule,\n    PortalModule,\n    FsMenuModule,\n    MatMenuModule,\n  ],\n  exports: [\n    FsDrawerComponent,\n    FsDrawerSideComponent,\n    FsDrawerContentComponent,\n    FsDrawerActionDirective,\n    FsDrawerResizerDirective,\n  ],\n  declarations: [\n    FsDrawerSideComponent,\n    FsDrawerComponent,\n    FsDrawerActionsComponent,\n    FsDrawerActionItemComponent,\n    FsDrawerContentComponent,\n    FsDrawerActionDirective,\n    FsDrawerResizerDirective,\n    FsDrawerMenuComponent,\n  ],\n  providers: [FsDrawerService],\n})\nexport class FsDrawerModule {}\n","/*\n * Public API Surface of fs-menu\n */\n\nexport { FsDrawerModule } from './app/fs-drawer.module';\n\nexport { FsDrawerComponent } from './app/components/drawer/drawer.component';\nexport { FsDrawerSideComponent } from './app/components/drawer-side/drawer-side.component';\nexport { FsDrawerContentComponent } from './app/components/drawer-content/drawer-content.component';\nexport { FsDrawerActionDirective } from './app/directives/drawer-action.directive';\nexport { FsDrawerResizerDirective } from './app/directives/drawer-resizer.directive';\n\nexport { FsDrawerService } from './app/services/drawer.service';\nexport { DRAWER_DATA } from './app/services/drawer-data';\nexport { DRAWER_MENU_DATA } from './app/services/drawer-menu-data';\n\nexport { DrawerRef } from './app/classes/drawer-ref';\nexport { DrawerMenuRef } from './app/classes/drawer-menu-ref';\n\nexport { DrawerData } from './app/classes/drawer-data';\n\nexport { IDrawerConfig } from './app/interfaces/drawer-config.interface';\nexport { DrawerDataProxy } from './app/interfaces/drawer-data.interface';\nexport { IFsDrawerActionConfig } from './app/interfaces/action.iterface';\n\nexport { FsDrawerAction } from './app/helpers/action-type.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {DrawerSizeController as Éµb} from './app/classes/drawer-size-controller';\nexport {FsDrawerActionItemComponent as Éµd} from './app/components/drawer-actions/drawer-action-item/drawer-action-item.component';\nexport {FsDrawerActionsComponent as Éµc} from './app/components/drawer-actions/drawer-actions.component';\nexport {FsDrawerMenuComponent as Éµe} from './app/components/drawer-menu/drawer-menu.component';\nexport {FsDrawerMenuService as Éµa} from './app/services/drawer-menu.service';"],"names":[],"mappings":"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"}