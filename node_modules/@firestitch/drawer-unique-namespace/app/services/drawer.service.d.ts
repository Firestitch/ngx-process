import { Injector, OnDestroy } from '@angular/core';
import { Overlay } from '@angular/cdk/overlay';
import { ComponentType } from '@angular/cdk/portal';
import { DrawerRef } from '../classes/drawer-ref';
import { IDrawerConfig } from '../interfaces/drawer-config.interface';
export declare class FsDrawerService implements OnDestroy {
    private _parentDrawerService;
    private _overlay;
    private _injector;
    private _drawerRefs;
    private _destroy$;
    constructor(_parentDrawerService: FsDrawerService, _overlay: Overlay, _injector: Injector);
    ngOnDestroy(): void;
    open<TData = any>(component: ComponentType<any>, config?: IDrawerConfig<TData>): DrawerRef<unknown, any>;
    closeAll(): void;
    private _applyBackdrop;
    private _applyBodyOpenClass;
    private _storeDrawerRef;
    /**
     * In case, when we want to open more than 1 drawer
     * our previously opened drawers should be visible
     *
     *      d1   d2   d3
     *     ---- ---- ---
     *    | x  | x1 | x2
     *    | y  | y1 | y2
     *    | z  | z1 | z2
     *     ---- ---- ---
     *
     * Where d1, d2 - previously opened drawers
     * d1 and d2 must be pushed left to be visible under just opened d3
     */
    private _pushDrawersCascade;
    private _createOverlay;
    private _getOverlayConfig;
    private _attachDrawerContainer;
    private _attachComponent;
    private _createInjector;
}
