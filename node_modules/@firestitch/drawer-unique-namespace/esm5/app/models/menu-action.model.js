import { __extends } from "tslib";
import { BaseAction } from './base-action';
var MenuAction = /** @class */ (function (_super) {
    __extends(MenuAction, _super);
    function MenuAction(data) {
        if (data === void 0) { data = {}; }
        var _this = _super.call(this, data) || this;
        _this.actions = [];
        _this._isGroup = false;
        if (Array.isArray(data.actions)) {
            _this._isGroup = true;
            _this.actions = data.actions.map(function (action) { return new MenuAction(action); });
        }
        _this._label = data.label || '';
        return _this;
    }
    Object.defineProperty(MenuAction.prototype, "isGroup", {
        get: function () {
            return this._isGroup;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MenuAction.prototype, "label", {
        get: function () {
            return this._label;
        },
        enumerable: true,
        configurable: true
    });
    MenuAction.prototype.updateRouterLink = function (data) {
        _super.prototype.updateRouterLink.call(this, data);
        if (this.actions.length > 0) {
            this.actions.forEach(function (action) {
                action.updateRouterLink(data);
            });
        }
    };
    MenuAction.prototype.checkVisibility = function (data) {
        _super.prototype.checkVisibility.call(this, data);
        if (this.actions.length > 0) {
            this.actions.forEach(function (action) {
                action.checkVisibility(data);
            });
        }
        if (this.actions.length > 0) {
            this._visible = this.actions.some(function (action) { return action.visible; });
        }
    };
    return MenuAction;
}(BaseAction));
export { MenuAction };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1hY3Rpb24ubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmlyZXN0aXRjaC9kcmF3ZXIvIiwic291cmNlcyI6WyJhcHAvbW9kZWxzL21lbnUtYWN0aW9uLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSTNDO0lBQWdDLDhCQUFVO0lBT3hDLG9CQUFZLElBQWM7UUFBZCxxQkFBQSxFQUFBLFNBQWM7UUFBMUIsWUFDRSxrQkFBTSxJQUFJLENBQUMsU0FRWjtRQWZNLGFBQU8sR0FBaUIsRUFBRSxDQUFDO1FBSWpCLGNBQVEsR0FBWSxLQUFLLENBQUM7UUFLekMsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMvQixLQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUVyQixLQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQUMsTUFBTSxJQUFLLE9BQUEsSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQXRCLENBQXNCLENBQUMsQ0FBQztTQUNyRTtRQUNELEtBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7O0lBQ2pDLENBQUM7SUFFRCxzQkFBSSwrQkFBTzthQUFYO1lBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3ZCLENBQUM7OztPQUFBO0lBRUQsc0JBQUksNkJBQUs7YUFBVDtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNyQixDQUFDOzs7T0FBQTtJQUVNLHFDQUFnQixHQUF2QixVQUF3QixJQUFJO1FBQzFCLGlCQUFNLGdCQUFnQixZQUFDLElBQUksQ0FBQyxDQUFDO1FBRTdCLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzNCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUMsTUFBTTtnQkFDMUIsTUFBTSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2hDLENBQUMsQ0FBQyxDQUFBO1NBQ0g7SUFDSCxDQUFDO0lBR00sb0NBQWUsR0FBdEIsVUFBdUIsSUFBZ0I7UUFDckMsaUJBQU0sZUFBZSxZQUFDLElBQUksQ0FBQyxDQUFDO1FBRTVCLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzNCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUMsTUFBTTtnQkFDMUIsTUFBTSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMvQixDQUFDLENBQUMsQ0FBQTtTQUNIO1FBRUQsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFDLE1BQU0sSUFBSyxPQUFBLE1BQU0sQ0FBQyxPQUFPLEVBQWQsQ0FBYyxDQUFDLENBQUM7U0FDL0Q7SUFDSCxDQUFDO0lBQ0gsaUJBQUM7QUFBRCxDQUFDLEFBbERELENBQWdDLFVBQVUsR0FrRHpDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUFjdGlvbiB9IGZyb20gJy4vYmFzZS1hY3Rpb24nO1xuaW1wb3J0IHsgRHJhd2VyRGF0YSB9IGZyb20gJy4uL2NsYXNzZXMvZHJhd2VyLWRhdGEnO1xuXG5cbmV4cG9ydCBjbGFzcyBNZW51QWN0aW9uIGV4dGVuZHMgQmFzZUFjdGlvbiB7XG4gIHB1YmxpYyBhY3Rpb25zOiBNZW51QWN0aW9uW10gPSBbXTtcblxuICBwcml2YXRlIF9sYWJlbDogc3RyaW5nO1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgX2lzR3JvdXA6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcihkYXRhOiBhbnkgPSB7fSkge1xuICAgIHN1cGVyKGRhdGEpO1xuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YS5hY3Rpb25zKSkge1xuICAgICAgdGhpcy5faXNHcm91cCA9IHRydWU7XG5cbiAgICAgIHRoaXMuYWN0aW9ucyA9IGRhdGEuYWN0aW9ucy5tYXAoKGFjdGlvbikgPT4gbmV3IE1lbnVBY3Rpb24oYWN0aW9uKSk7XG4gICAgfVxuICAgIHRoaXMuX2xhYmVsID0gZGF0YS5sYWJlbCB8fCAnJztcbiAgfVxuXG4gIGdldCBpc0dyb3VwKCkge1xuICAgIHJldHVybiB0aGlzLl9pc0dyb3VwO1xuICB9XG5cbiAgZ2V0IGxhYmVsKCkge1xuICAgIHJldHVybiB0aGlzLl9sYWJlbDtcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGVSb3V0ZXJMaW5rKGRhdGEpIHtcbiAgICBzdXBlci51cGRhdGVSb3V0ZXJMaW5rKGRhdGEpO1xuXG4gICAgaWYgKHRoaXMuYWN0aW9ucy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLmFjdGlvbnMuZm9yRWFjaCgoYWN0aW9uKSA9PiB7XG4gICAgICAgIGFjdGlvbi51cGRhdGVSb3V0ZXJMaW5rKGRhdGEpO1xuICAgICAgfSlcbiAgICB9XG4gIH1cblxuXG4gIHB1YmxpYyBjaGVja1Zpc2liaWxpdHkoZGF0YTogRHJhd2VyRGF0YSkge1xuICAgIHN1cGVyLmNoZWNrVmlzaWJpbGl0eShkYXRhKTtcblxuICAgIGlmICh0aGlzLmFjdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5hY3Rpb25zLmZvckVhY2goKGFjdGlvbikgPT4ge1xuICAgICAgICBhY3Rpb24uY2hlY2tWaXNpYmlsaXR5KGRhdGEpO1xuICAgICAgfSlcbiAgICB9XG5cbiAgICBpZiAodGhpcy5hY3Rpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMuX3Zpc2libGUgPSB0aGlzLmFjdGlvbnMuc29tZSgoYWN0aW9uKSA9PiBhY3Rpb24udmlzaWJsZSk7XG4gICAgfVxuICB9XG59XG4iXX0=