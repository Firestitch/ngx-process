import { __decorate, __extends, __metadata } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentRef, ElementRef, EmbeddedViewRef, OnDestroy, OnInit, ViewChild, ViewEncapsulation, } from '@angular/core';
import { BasePortalOutlet, CdkPortalOutlet, } from '@angular/cdk/portal';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { DrawerRef } from '../../classes/drawer-ref';
import { FsDrawerMenuService } from '../../services/drawer-menu.service';
import { DrawerSizeController } from '../../classes/drawer-size-controller';
var FsDrawerComponent = /** @class */ (function (_super) {
    __extends(FsDrawerComponent, _super);
    function FsDrawerComponent(_el, _drawerMenu, _drawerRef, _cdRef, _resizeController) {
        var _this = _super.call(this) || this;
        _this._el = _el;
        _this._drawerMenu = _drawerMenu;
        _this._drawerRef = _drawerRef;
        _this._cdRef = _cdRef;
        _this._resizeController = _resizeController;
        _this.isOpen = false;
        _this.isOpenSide = false;
        _this.initialized = false;
        _this._sideOpen = false;
        _this._destroy$ = new Subject();
        _this._drawerRef.resizeController = _this._resizeController;
        return _this;
    }
    Object.defineProperty(FsDrawerComponent.prototype, "sideOpen", {
        get: function () {
            return this._sideOpen;
        },
        set: function (value) {
            this._sideOpen = value;
            this._el.nativeElement.classList
                .toggle('side-open', this.sideOpen);
        },
        enumerable: true,
        configurable: true
    });
    FsDrawerComponent.prototype.ngOnInit = function () {
        this._listenDataChanges();
    };
    FsDrawerComponent.prototype.ngOnDestroy = function () {
        this._destroy$.next();
        this._destroy$.complete();
    };
    FsDrawerComponent.prototype.open = function () {
        this.isOpen = true;
    };
    FsDrawerComponent.prototype.close = function () {
        this.isOpen = false;
    };
    FsDrawerComponent.prototype.openSide = function () {
        this.isOpenSide = true;
    };
    FsDrawerComponent.prototype.closeSide = function () {
        this.isOpenSide = false;
    };
    FsDrawerComponent.prototype.setDrawerRef = function (value) {
        var _this = this;
        this.drawerRef = value;
        this.config = this.drawerRef.drawerConfig;
        // Need to be like a parent for children resize
        this.drawerRef.drawerContentContainer = this._drawerContentContainer;
        this.drawerRef.drawerActionsContainer = this._drawerActionsContainer;
        this.drawerRef.sideToggle$
            .pipe(takeUntil(this._destroy$))
            .subscribe(function (opened) {
            _this.sideOpen = opened;
        });
        this.initialized = true;
    };
    /**
     * Attach a ComponentPortal as content to this dialog container.
     * @param portal Portal to be attached as the dialog content.
     */
    FsDrawerComponent.prototype.attachComponentPortal = function (portal) {
        if (this._portalOutlet.hasAttached()) {
            throw Error('Drawer component already attached');
        }
        return this._portalOutlet.attachComponentPortal(portal);
    };
    /**
     * Attach a TemplatePortal as content to this dialog container.
     * @param portal Portal to be attached as the dialog content.
     */
    FsDrawerComponent.prototype.attachTemplatePortal = function (portal) {
        if (this._portalOutlet.hasAttached()) {
            throw Error('Drawer template already attached');
        }
        return this._portalOutlet.attachTemplatePortal(portal);
    };
    FsDrawerComponent.prototype._listenDataChanges = function () {
        var _this = this;
        this._drawerRef.dataChanged$
            .pipe(takeUntil(this._destroy$))
            .subscribe(function () {
            _this._cdRef.detectChanges();
        });
    };
    FsDrawerComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: FsDrawerMenuService },
        { type: DrawerRef },
        { type: ChangeDetectorRef },
        { type: DrawerSizeController }
    ]; };
    __decorate([
        ViewChild(CdkPortalOutlet, { static: true }),
        __metadata("design:type", CdkPortalOutlet)
    ], FsDrawerComponent.prototype, "_portalOutlet", void 0);
    __decorate([
        ViewChild('drawerContentContainer', { static: true }),
        __metadata("design:type", ElementRef)
    ], FsDrawerComponent.prototype, "_drawerContentContainer", void 0);
    __decorate([
        ViewChild('drawerActionsContainer', { read: ElementRef, static: true }),
        __metadata("design:type", ElementRef)
    ], FsDrawerComponent.prototype, "_drawerActionsContainer", void 0);
    FsDrawerComponent = __decorate([
        Component({
            selector: 'fs-drawer',
            template: "<div class=\"mat-elevation-z2 drawer\" #drawer\n     hidden\n     [ngClass]=\"config.position\"\n     [hidden]=\"!initialized\">\n  <ng-container>\n    <fs-drawer-actions class=\"drawer-actions\"\n                       #drawerActionsContainer\n                       type=\"main\"\n                       [fsDrawerResizer]=\"drawer\"\n                       [resizable]=\"drawerRef.drawerConfig.resizable\"\n                       [sizeController]=\"drawerRef.resizeController\"\n                       [direction]=\"config.position\"\n                       [actions]=\"config.actions\"\n                       [activeAction]=\"drawerRef.activeAction$ | async\">\n    </fs-drawer-actions>\n    <div class=\"drawer-container\" #drawerContentContainer>\n      <ng-template cdkPortalOutlet></ng-template>\n    </div>\n  </ng-container>\n</div>\n",
            providers: [
                FsDrawerMenuService,
                DrawerSizeController,
            ],
            host: {
                'class': 'fs-drawer-container',
            },
            encapsulation: ViewEncapsulation.None,
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        __metadata("design:paramtypes", [ElementRef,
            FsDrawerMenuService,
            DrawerRef,
            ChangeDetectorRef,
            DrawerSizeController])
    ], FsDrawerComponent);
    return FsDrawerComponent;
}(BasePortalOutlet));
export { FsDrawerComponent };
//# sourceMappingURL=data:application/json;base64,