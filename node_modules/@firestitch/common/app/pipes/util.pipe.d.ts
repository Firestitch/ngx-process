import { PipeTransform } from '@angular/core';
import * as i0 from "@angular/core";
export declare class FsUtilStringifyPipe implements PipeTransform {
    constructor();
    transform(value: any): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsUtilStringifyPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<FsUtilStringifyPipe, "fsUtilStringify">;
}
export declare class FsUtilGuidPipe implements PipeTransform {
    constructor();
    transform(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsUtilGuidPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<FsUtilGuidPipe, "fsUtilGuid">;
}
export declare class FsUtilIsEmptyPipe implements PipeTransform {
    transform(value: any): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsUtilIsEmptyPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<FsUtilIsEmptyPipe, "fsUtilIsEmpty">;
}
export declare class FsUtilIsNotEmptyPipe implements PipeTransform {
    transform(value: any): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsUtilIsNotEmptyPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<FsUtilIsNotEmptyPipe, "fsUtilIsNotEmpty">;
}
