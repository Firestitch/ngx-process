(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('lodash-es'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@firestitch/common', ['exports', '@angular/core', '@angular/common', 'lodash-es', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.firestitch = global.firestitch || {}, global.firestitch.common = {}), global.ng.core, global.ng.common, global.lodashEs, global.rxjs, global.rxjs.operators));
})(this, (function (exports, i0, common, lodashEs, rxjs, operators) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var FsArray = /** @class */ (function () {
        function FsArray() {
        }
        /**
         * @deprecated use import { nameValue } from @firestitch/common/array; instead
        */
        FsArray.prototype.nameValue = function (array, name, value) {
            console.warn('@deprecated use import { nameValue } from @firestitch/common/array; instead');
            var list = [];
            if (name || value) {
                var nameFn_1 = typeof name === 'function' ? name : function (item) { return item[name]; };
                var valueFn_1 = typeof value === 'function' ? value : function (item) { return item[value]; };
                array.forEach(function (item) {
                    list.push({ name: nameFn_1(item), value: valueFn_1(item) });
                });
            }
            else {
                array.forEach(function (name, value) {
                    list.push({ name: name, value: value });
                });
            }
            return list;
        };
        /**
         * @deprecated use import { remove } from @firestitch/common/array; instead
        */
        FsArray.prototype.remove = function (array, query) {
            console.warn('@deprecated use import { remove } from @firestitch/common/array; instead');
            var idx = this.indexOf(array, query);
            if (idx >= 0) {
                return array.splice(idx, 1);
            }
            return idx;
        };
        /**
         * @deprecated use import { indexOf } from @firestitch/common/array; instead
        */
        FsArray.prototype.indexOf = function (array, query) {
            var _this = this;
            console.warn('@deprecated use import { indexOf } from @firestitch/common/array; instead');
            if (typeof query !== 'function') {
                var queryObj_1 = query;
                query = function (item) {
                    return _this.compare(queryObj_1, item);
                };
            }
            for (var i = 0, len = array.length; i < len; i++) {
                if (query(array[i])) {
                    return i;
                }
            }
            return -1;
        };
        /**
         * @deprecated use import { compare } from @firestitch/common/array; instead
        */
        FsArray.prototype.compare = function (query, item) {
            console.warn('@deprecated use import { compare } from @firestitch/common/array; instead');
            var value = true;
            for (var key in query) {
                value = value && item[key] == query[key];
            }
            return value;
        };
        /**
         * @deprecated use import { filter } from @firestitch/common/array; instead
        */
        FsArray.prototype.filter = function (array, query) {
            var _this = this;
            console.warn('@deprecated use import { filter } from @firestitch/common/array; instead');
            if (typeof query !== 'function') {
                var queryObj_2 = query;
                query = function (item) {
                    return _this.compare(queryObj_2, item);
                };
            }
            var isarray = Array.isArray(array);
            var list = isarray ? [] : {};
            if (isarray)
                array.forEach(function (item, idx) {
                    if (query(item)) {
                        list.push(item);
                    }
                });
            else
                Object.keys(array).forEach(function (key) {
                    if (query(array[key])) {
                        list[key] = array[key];
                    }
                });
            return list;
        };
        /**
         * @deprecated use import { index } from @firestitch/common/array; instead
        */
        FsArray.prototype.index = function (array, property) {
            console.warn('@deprecated use import { index } from @firestitch/common/array; instead');
            var list = {};
            array.forEach(function (item, idx) {
                list[item[property]] = item;
            });
            return list;
        };
        /**
         * @deprecated use import { sort } from @firestitch/common/array; instead
        */
        FsArray.prototype.sort = function (array, query, reverse) {
            if (reverse === void 0) { reverse = false; }
            console.warn('@deprecated use import { sort } from @firestitch/common/array; instead');
            if (typeof query !== 'function') {
                var queryStr_1 = query;
                query = function (a, b) {
                    if (reverse) {
                        if (a[queryStr_1] < b[queryStr_1]) {
                            return 1;
                        }
                        else if (a[queryStr_1] > b[queryStr_1]) {
                            return -1;
                        }
                    }
                    else {
                        if (a[queryStr_1] > b[queryStr_1]) {
                            return 1;
                        }
                        else if (a[queryStr_1] < b[queryStr_1]) {
                            return -1;
                        }
                    }
                    return 0;
                };
            }
            array.sort(query);
            return array;
        };
        /**
         * @deprecated use import { rsort } from @firestitch/common/array; instead
        */
        FsArray.prototype.rsort = function (array, query) {
            console.warn('@deprecated use import { rsort } from @firestitch/common/array; instead');
            return this.sort(array, query, true);
        };
        /**
         * @deprecated use import { list } from @firestitch/common/array; instead
        */
        FsArray.prototype.list = function (array, property, index) {
            if (index === void 0) { index = null; }
            console.warn('@deprecated use import { list } from @firestitch/common/array; instead');
            var list = index ? {} : [];
            array.forEach(function (item, idx) {
                if (index) {
                    list[item[index]] = item[property];
                }
                else {
                    list.push(item[property]);
                }
            });
            return list;
        };
        /**
         * @deprecated use import { applyDepth } from @firestitch/common/array; instead
        */
        FsArray.prototype.applyDepth = function (objects, parent_property, id_property, depth_property) {
            if (id_property === void 0) { id_property = 'id'; }
            if (depth_property === void 0) { depth_property = 'depth'; }
            console.warn('@deprecated use import { applyDepth } from @firestitch/common/array; instead');
            var keyed = {};
            objects.forEach(function (object) {
                if (!object[parent_property]) {
                    object[depth_property] = 0;
                }
                keyed[object[id_property]] = object;
            });
            Object.keys(keyed).forEach(function (key) {
                Object.keys(keyed).forEach(function (key) {
                    var object = keyed[key];
                    if (!keyed[key][depth_property]) {
                        if (keyed[key][parent_property]) {
                            keyed[key][depth_property] = keyed[keyed[key][parent_property]][depth_property] + 1;
                        }
                    }
                });
            });
            return keyed;
        };
        /**
         * @deprecated use import { inArray } from @firestitch/common/array; instead
        */
        FsArray.prototype.inArray = function (values, array) {
            console.warn('@deprecated use import { inArray } from @firestitch/common/array; instead');
            if (!Array.isArray(values)) {
                values = [values];
            }
            for (var i = 0, len = values.length; i < len; i++) {
                if (array.indexOf(values[i]) >= 0) {
                    return true;
                }
            }
            return false;
        };
        /**
         * @deprecated use import { keyExists } from @firestitch/common/array; instead
        */
        FsArray.prototype.keyExists = function (array, key) {
            console.warn('@deprecated use import { keyExists } from @firestitch/common/array; instead');
            return array.hasOwnProperty(key);
        };
        /**
         * @deprecated use import { length } from @firestitch/common/array; instead
        */
        FsArray.prototype.length = function (array) {
            console.warn('@deprecated use import { length } from @firestitch/common/array; instead');
            return array.length;
        };
        /**
         * @deprecated use import { ksort } from @firestitch/common/array; instead
        */
        FsArray.prototype.ksort = function (unordered) {
            console.warn('@deprecated use import { ksort } from @firestitch/common/array; instead');
            Object.keys(unordered).sort().forEach(function (key) {
                var value = unordered[key];
                delete unordered[key];
                unordered[key] = value;
            });
        };
        return FsArray;
    }());
    FsArray.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsArray, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    FsArray.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsArray });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsArray, decorators: [{
                type: i0.Injectable
            }] });

    var FsMath = /** @class */ (function () {
        function FsMath() {
        }
        /**
         * @deprecated use _.round() instead {@link https://lodash.com/docs/4.17.5#round}
        */
        FsMath.prototype.round = function (number, precision) {
            console.warn('@deprecated use _.round() instead {@link https://lodash.com/docs/4.17.5#round}');
            precision = precision || 0;
            var factor = Math.pow(10, precision);
            var tempNumber = number * factor;
            var roundedTempNumber = Math.round(tempNumber);
            return roundedTempNumber / factor;
        };
        return FsMath;
    }());
    FsMath.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsMath, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    FsMath.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsMath });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsMath, decorators: [{
                type: i0.Injectable
            }] });

    var KEY_CANCEL$1 = 3, KEY_HELP$1 = 6, KEY_BACKSPACE$1 = 8, KEY_TAB$1 = 9, KEY_CLEAR$1 = 12, KEY_RETURN$1 = 13, KEY_ENTER$1 = 14, KEY_SHIFT$1 = 16, KEY_CONTROL$1 = 17, KEY_ALT$1 = 18, KEY_PAUSE$1 = 19, KEY_CAPS_LOCK$1 = 20, KEY_ESCAPE$1 = 27, KEY_SPACE$1 = 32, KEY_PAGE_UP$1 = 33, KEY_PAGE_DOWN$1 = 34, KEY_END$1 = 35, KEY_HOME$1 = 36, KEY_LEFT$1 = 37, KEY_UP$1 = 38, KEY_RIGHT$1 = 39, KEY_DOWN$1 = 40, KEY_PRINTSCREEN$1 = 44, KEY_INSERT$1 = 45, KEY_DELETE$1 = 46, KEY_0$1 = 48, KEY_1$1 = 49, KEY_2$1 = 50, KEY_3$1 = 51, KEY_4$1 = 52, KEY_5$1 = 53, KEY_6$1 = 54, KEY_7$1 = 55, KEY_8$1 = 56, KEY_9$1 = 57, KEY_SEMICOLON$1 = 59, KEY_EQUALS$1 = 61;
    /*
        Basically, just copy-pasted functionality from fs-boilerplate v1.x, with some small changes (like we dont have angular.bind anymore, had to go with a workaround)
        There might be a better way to organise constatns but I need to know use-cases
    */
    var FsUtil = /** @class */ (function () {
        function FsUtil() {
            this.intervals = {};
        }
        /**
        * @deprecated use @firestitch/common/util/guid instead
        */
        FsUtil.prototype.guid = function (pattern) {
            console.warn('@deprecated use @firestitch/common/util/guid instead');
            pattern = pattern || 'xxxxxx';
            return pattern.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        };
        /**
         * @deprecated use import { uuid } from @firestitch/common/util; instead
        */
        FsUtil.prototype.uuid = function () {
            console.warn('@deprecated use @firestitch/common/util/uuid instead');
            return this.guid('xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx');
        };
        /**
         * @deprecated use import { resolve } from @firestitch/common/util; instead
        */
        FsUtil.prototype.resolve = function (promise, defaults) {
            if (defaults === void 0) { defaults = []; }
            console.warn('@deprecated use @firestitch/common/util/resolve instead');
            var result = defaults;
            return new Promise(function (resolve) {
                promise.then(function (data) {
                    Object.keys(data).forEach(function (key) { return result[key] = data[key]; });
                    resolve(result);
                });
            });
        };
        /**
         * @deprecated use _.toInteger() instead
        */
        FsUtil.prototype.int = function (value) {
            console.warn('@deprecated use _.toInteger() instead');
            value = parseInt(value);
            if (isNaN(value)) {
                value = 0;
            }
            return value;
        };
        /**
         * @deprecated use _.toFinite() instead
        */
        FsUtil.prototype.float = function (value) {
            console.warn('@deprecated use _.toFinite() instead');
            value = parseFloat(value);
            if (isNaN(value)) {
                value = 0;
            }
            return value;
        };
        /**
         * @deprecated use _.toString() instead
        */
        FsUtil.prototype.string = function (string) {
            console.warn('@deprecated use _.toString() instead');
            if (string === null || string === undefined) {
                string = '';
            }
            return (string).toString();
        };
        /**
         * @deprecated use import { isEmpty } from @firestitch/common/util; instead
        */
        FsUtil.prototype.isEmpty = function (value, options) {
            console.warn('@deprecated use import { isEmpty } from @firestitch/common/util; instead');
            options = options || {};
            return value === undefined ||
                value === null ||
                value === false ||
                value === '' ||
                !this.string(value).length ||
                (this.isObject(value) &&
                    (value.constructor.name === 'Object' && !Object.keys(value).length)) ||
                (!options.zero && (value === 0 || value === '0'));
        };
        /**
         * @deprecated use _.isInteger() instead
        */
        FsUtil.prototype.isInt = function (value, type) {
            console.warn('@deprecated use _.isInteger() instead');
            var int = !!this.string(value).match(/^\d+$/);
            if (!int) {
                return false;
            }
            if (type) {
                return Number.isInteger(value);
            }
            return true;
        };
        /**
         * @deprecated use _.each() instead {@link https://lodash.com/docs/4.17.5#forEach}
        */
        FsUtil.prototype.each = function (object, func) {
            console.warn('@deprecated use _.each() instead {@link https://lodash.com/docs/4.17.5#forEach}');
            if (!this.isArray(object) && !this.isObject(object)) {
                return;
            }
            Object.keys(object).forEach(function (key) {
                func(object[key], key);
            });
        };
        /**
         * @deprecated use _.isArrayLikeObject() {@link https://lodash.com/docs/4.17.5#isArrayLikeObject}
         * or _.isObject() {@link https://lodash.com/docs/4.17.5#isObject} instead
        */
        FsUtil.prototype.isObject = function (value) {
            console.warn('@deprecated use _.isArrayLikeObject() {@link https://lodash.com/docs/4.17.5#isArrayLikeObject} or _.isObject() {@link https://lodash.com/docs/4.17.5#isObject} instead');
            return value !== null && typeof value === 'object' && !this.isArray(value);
        };
        /**
          * @deprecated use _.isString() instead {@link https://lodash.com/docs/4.17.5#isString}
        */
        FsUtil.prototype.isString = function (value) {
            console.warn('@deprecated use _.isString() instead {@link https://lodash.com/docs/4.17.5#isString}');
            return typeof value === 'string' || value instanceof String;
        };
        /**
         * @deprecated use _.isArray() instead {@link https://lodash.com/docs/4.17.5#isArray}
        */
        FsUtil.prototype.isArray = function (value) {
            console.warn('@deprecated use _.isArray() instead {@link https://lodash.com/docs/4.17.5#isArray}');
            return value instanceof Array;
        };
        /**
         * @deprecated use import { isNumeric } from @firestitch/common/util; instead
        */
        FsUtil.prototype.isNumeric = function (value) {
            console.warn('@deprecated use import { isNumeric } from @firestitch/common/util; instead');
            return this.string(value).length && !!this.string(value).match(/^-?\d*\.?\d*$/);
        };
        /**
         * @deprecated use import { isClass } from @firestitch/common/util; instead
        */
        FsUtil.prototype.isClass = function (value, cls) {
            console.warn('@deprecated use import { isClass } from @firestitch/common/util; instead');
            if (this.isObject(value)) {
                if (this.isString(cls)) {
                    if (value.constructor) {
                        if (value.constructor.name === cls) {
                            return true;
                        }
                    }
                }
                else {
                    if (value instanceof cls) {
                        return true;
                    }
                }
            }
            return false;
        };
        /**
          * @deprecated use _.isBoolean() instead {@link https://lodash.com/docs/4.17.5#isBoolean}
        */
        FsUtil.prototype.isBoolean = function (value) {
            console.warn('@deprecated use _.isBoolean() instead {@link https://lodash.com/docs/4.17.5#isBoolean}');
            return value === true || value === false;
        };
        /**
         * @deprecated use import { value } from @firestitch/common/util; instead
        */
        FsUtil.prototype.value = function (object, key, def) {
            console.warn('@deprecated use import { value } from @firestitch/common/util; instead');
            if (this.isObject(object) || this.isArray(object)) {
                if (object.hasOwnProperty(key)) {
                    return object[key];
                }
            }
            return def;
        };
        FsUtil.prototype.throttle = function (func, wait) {
            console.warn('@deprecated use import { throttle } from @firestitch/common/util; instead');
            var waiting = false; // Initially, we're not waiting
            return function () {
                if (!waiting) { // If we're not waiting
                    func.apply(null, arguments); // Execute users function
                    waiting = true; // Prevent future invocations
                    setTimeout(function () {
                        waiting = false; // And allow future invocations
                    }, wait);
                }
            };
        };
        /**
         * @deprecated use import { debounce } from @firestitch/common/util; instead
        */
        FsUtil.prototype.debounce = function (func, wait, immediate) {
            console.warn('@deprecated use import { debounce } from @firestitch/common/util; instead');
            var timeout;
            return function () {
                var context = this, args = arguments;
                var later = function () {
                    timeout = null;
                    if (!immediate)
                        func.apply(context, args);
                };
                var callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
                if (callNow)
                    func.apply(context, args);
            };
        };
        /**
         * @deprecated use import { length } from @firestitch/common/util; instead
        */
        FsUtil.prototype.length = function (object) {
            console.warn('@deprecated use import { length } from @firestitch/common/util; instead');
            if (this.isObject(object)) {
                return Object.keys(object).length;
            }
            if (this.isArray(object)) {
                return object.length;
            }
            return 0;
        };
        /**
         * @deprecated use import { boolean } from @firestitch/common/util; instead
        */
        FsUtil.prototype.boolean = function (value) {
            console.warn('@deprecated use import { boolean } from @firestitch/common/util; instead');
            return this.string(value).toLowerCase() !== 'false' && !!value;
        };
        /**
         * @deprecated use import { stringify } from @firestitch/common/util; instead
        */
        FsUtil.prototype.stringify = function (value) {
            console.warn('@deprecated use import { stringify } from @firestitch/common/util; instead');
            return JSON.stringify(value);
        };
        return FsUtil;
    }());
    FsUtil.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtil, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    FsUtil.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtil });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtil, decorators: [{
                type: i0.Injectable
            }] });

    var FsValidate = /** @class */ (function () {
        function FsValidate(fsUtil) {
            this.fsUtil = fsUtil;
        }
        /**
         * @deprecated use import { email } from @firestitch/common/validate; instead
        */
        FsValidate.prototype.phone = function (value) {
            var valid = /^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/.test(value);
            return valid || !String(value).length;
        };
        /**
          * @deprecated use import { email } from @firestitch/common/validate; instead
        */
        FsValidate.prototype.email = function (value) {
            return !!this.fsUtil.string(value).match(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/);
        };
        return FsValidate;
    }());
    FsValidate.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsValidate, deps: [{ token: FsUtil }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    FsValidate.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsValidate });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsValidate, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: FsUtil }]; } });

    function stringify(value) {
        return JSON.stringify(value);
    }

    function guid(pattern, options) {
        if (options === void 0) { options = { case: 'lower', numbers: true }; }
        pattern = pattern || 'xxxxxx';
        var s = '';
        if (options.numbers !== false) {
            s = '0123456789';
        }
        if (!options.case || options.case === 'lower' || options.case === 'mixed') {
            s = s.concat('abcdefghijklmnopqrstuvwxyz');
        }
        if (options.case === 'upper' || options.case === 'mixed') {
            s = s.concat('ABCDEFGHIJKLMNOPQRSTUVWXYZ');
        }
        var chars = s.match(/(.{1,1})/g);
        return pattern.replace(/[x]/g, function (c) {
            var i = (Math.random() * chars.length) | 0;
            return chars[i];
        });
    }

    function isEmpty(value, options) {
        options = options || {};
        return value === undefined ||
            value === null ||
            value === false ||
            value === '' ||
            !lodashEs.toString(value).length ||
            (lodashEs.isObject(value) &&
                (value.constructor.name === 'Object' && !Object.keys(value).length)) ||
            (!options.zero && (value === 0 || value === '0'));
    }

    var FsUtilStringifyPipe = /** @class */ (function () {
        function FsUtilStringifyPipe() {
        }
        FsUtilStringifyPipe.prototype.transform = function (value) {
            return stringify(value);
        };
        return FsUtilStringifyPipe;
    }());
    FsUtilStringifyPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilStringifyPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    FsUtilStringifyPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilStringifyPipe, name: "fsUtilStringify" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilStringifyPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'fsUtilStringify'
                    }]
            }], ctorParameters: function () { return []; } });
    var FsUtilGuidPipe = /** @class */ (function () {
        function FsUtilGuidPipe() {
        }
        FsUtilGuidPipe.prototype.transform = function () {
            return guid();
        };
        return FsUtilGuidPipe;
    }());
    FsUtilGuidPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilGuidPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    FsUtilGuidPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilGuidPipe, name: "fsUtilGuid" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilGuidPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'fsUtilGuid'
                    }]
            }], ctorParameters: function () { return []; } });
    var FsUtilIsEmptyPipe = /** @class */ (function () {
        function FsUtilIsEmptyPipe() {
        }
        FsUtilIsEmptyPipe.prototype.transform = function (value) {
            return isEmpty(value);
        };
        return FsUtilIsEmptyPipe;
    }());
    FsUtilIsEmptyPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilIsEmptyPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    FsUtilIsEmptyPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilIsEmptyPipe, name: "fsUtilIsEmpty" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilIsEmptyPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'fsUtilIsEmpty'
                    }]
            }] });
    var FsUtilIsNotEmptyPipe = /** @class */ (function () {
        function FsUtilIsNotEmptyPipe() {
        }
        FsUtilIsNotEmptyPipe.prototype.transform = function (value) {
            return !isEmpty(value);
        };
        return FsUtilIsNotEmptyPipe;
    }());
    FsUtilIsNotEmptyPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilIsNotEmptyPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    FsUtilIsNotEmptyPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilIsNotEmptyPipe, name: "fsUtilIsNotEmpty" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsUtilIsNotEmptyPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'fsUtilIsNotEmpty'
                    }]
            }] });

    function number(value, decimals) {
        return Number(value || 0).toLocaleString(undefined, { maximumFractionDigits: decimals });
    }

    var FsFormatNumberPipe = /** @class */ (function () {
        function FsFormatNumberPipe() {
        }
        FsFormatNumberPipe.prototype.transform = function (value, decimals) {
            return number(value, decimals);
        };
        return FsFormatNumberPipe;
    }());
    FsFormatNumberPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatNumberPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    FsFormatNumberPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatNumberPipe, name: "fsFormatNumber" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatNumberPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'fsFormatNumber'
                    }]
            }] });

    function currency(amount, precision, currencyCode, locale) {
        if (precision === void 0) { precision = [2, 10]; }
        if (currencyCode === void 0) { currencyCode = 'USD'; }
        if (locale === void 0) { locale = 'en-US'; }
        var digitsInfo = lodashEs.isArray(precision) ? precision : [precision, precision];
        return new common.CurrencyPipe(locale).transform(amount, currencyCode, 'symbol', "1." + digitsInfo[0] + "-" + digitsInfo[1]);
    }

    var FsFormatCurrencyPipe = /** @class */ (function () {
        function FsFormatCurrencyPipe(locale) {
            this.locale = locale;
        }
        FsFormatCurrencyPipe.prototype.transform = function (amount, precision, currencyCode) {
            return currency(amount, precision, currencyCode);
        };
        return FsFormatCurrencyPipe;
    }());
    FsFormatCurrencyPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatCurrencyPipe, deps: [{ token: i0.LOCALE_ID }], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    FsFormatCurrencyPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatCurrencyPipe, name: "fsFormatCurrency" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatCurrencyPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'fsFormatCurrency'
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.LOCALE_ID]
                        }] }];
        } });

    function truncate(value, limit, completeWords, ellipsis) {
        if (limit === void 0) { limit = 100; }
        if (completeWords === void 0) { completeWords = false; }
        if (ellipsis === void 0) { ellipsis = '...'; }
        value = value || '';
        if (completeWords) {
            limit = value.substr(0, limit).lastIndexOf(' ');
        }
        var result = "" + value.substr(0, limit);
        if (result !== value) {
            result += ellipsis;
        }
        return result;
    }

    var FsFormatTruncatePipe = /** @class */ (function () {
        function FsFormatTruncatePipe() {
        }
        FsFormatTruncatePipe.prototype.transform = function (value, limit, completeWords, ellipsis) {
            return truncate(value, limit, completeWords, ellipsis);
        };
        return FsFormatTruncatePipe;
    }());
    FsFormatTruncatePipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatTruncatePipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    FsFormatTruncatePipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatTruncatePipe, name: "fsFormatTruncate" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatTruncatePipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'fsFormatTruncate'
                    }]
            }], ctorParameters: function () { return []; } });

    function bytes(bytes) {
        if (!bytes) {
            return '0.00 B';
        }
        var e = Math.floor(Math.log(bytes) / Math.log(1024));
        var decimals = (bytes / 1024) > 1000 ? 2 : 0;
        console.log(bytes, (bytes / 1024), decimals);
        return ("" + (bytes / Math.pow(1024, e)).toFixed(decimals)).replace(/\.00/, '')
            + ' '
            + (e ? ' KMGTP'.charAt(e) : '') + 'B';
    }

    var FsFormatBytesPipe = /** @class */ (function () {
        function FsFormatBytesPipe() {
        }
        FsFormatBytesPipe.prototype.transform = function (value) {
            return bytes(value);
        };
        return FsFormatBytesPipe;
    }());
    FsFormatBytesPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatBytesPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    FsFormatBytesPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatBytesPipe, name: "fsFormatBytes" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatBytesPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'fsFormatBytes',
                    }]
            }] });

    var FsStopPropagationDirective = /** @class */ (function () {
        function FsStopPropagationDirective() {
        }
        FsStopPropagationDirective.prototype.preventClick = function (event) {
            event.stopPropagation();
        };
        return FsStopPropagationDirective;
    }());
    FsStopPropagationDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsStopPropagationDirective, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    FsStopPropagationDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: FsStopPropagationDirective, selector: "[fsStopPropagation]", host: { listeners: { "click": "preventClick($event)" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsStopPropagationDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[fsStopPropagation]',
                    }]
            }], propDecorators: { preventClick: [{
                    type: i0.HostListener,
                    args: ['click', ['$event']]
                }] } });

    var FsPreventDefaultDirective = /** @class */ (function () {
        function FsPreventDefaultDirective() {
        }
        FsPreventDefaultDirective.prototype.preventClick = function (event) {
            event.preventDefault();
        };
        return FsPreventDefaultDirective;
    }());
    FsPreventDefaultDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsPreventDefaultDirective, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
    FsPreventDefaultDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: FsPreventDefaultDirective, selector: "[fsPreventDefault]", host: { listeners: { "click": "preventClick($event)" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsPreventDefaultDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[fsPreventDefault]',
                    }]
            }], propDecorators: { preventClick: [{
                    type: i0.HostListener,
                    args: ['click', ['$event']]
                }] } });

    var FsAutofocusDirective = /** @class */ (function () {
        function FsAutofocusDirective(_el) {
            this._el = _el;
        }
        FsAutofocusDirective.prototype.ngAfterViewInit = function () {
            var _this = this;
            setTimeout(function () {
                _this._el.nativeElement.focus();
            });
        };
        return FsAutofocusDirective;
    }());
    FsAutofocusDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsAutofocusDirective, deps: [{ token: i0__namespace.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    FsAutofocusDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: FsAutofocusDirective, selector: "[autofocus]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsAutofocusDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[autofocus]',
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }]; } });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    function ordinalNumber(value) {
        value = String(value);
        var index = value.match(templateObject_1 || (templateObject_1 = __makeTemplateObject(["1?.$"], ["1?.$"])));
        var endings = [, 'st', 'nd', 'rd'];
        var ending = endings[index] || 'th';
        return value + ending;
    }
    var templateObject_1;

    var FsFormatOrdinalNumberPipe = /** @class */ (function () {
        function FsFormatOrdinalNumberPipe() {
        }
        FsFormatOrdinalNumberPipe.prototype.transform = function (value) {
            return ordinalNumber(value);
        };
        return FsFormatOrdinalNumberPipe;
    }());
    FsFormatOrdinalNumberPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatOrdinalNumberPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    FsFormatOrdinalNumberPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatOrdinalNumberPipe, name: "fsFormatOrdinalNumber" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsFormatOrdinalNumberPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'fsFormatOrdinalNumber',
                    }]
            }] });

    var FsCommonModule = /** @class */ (function () {
        function FsCommonModule() {
        }
        FsCommonModule.forRoot = function () {
            return {
                ngModule: FsCommonModule,
                providers: [
                    FsArray,
                    FsMath,
                    FsUtil,
                    FsValidate
                ]
            };
        };
        return FsCommonModule;
    }());
    FsCommonModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsCommonModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    FsCommonModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsCommonModule, declarations: [FsStopPropagationDirective,
            FsPreventDefaultDirective,
            FsAutofocusDirective,
            FsUtilGuidPipe,
            FsUtilIsEmptyPipe,
            FsUtilIsNotEmptyPipe,
            FsUtilStringifyPipe,
            FsFormatNumberPipe,
            FsFormatCurrencyPipe,
            FsFormatTruncatePipe,
            FsFormatBytesPipe,
            FsFormatOrdinalNumberPipe], imports: [common.CommonModule], exports: [FsStopPropagationDirective,
            FsPreventDefaultDirective,
            FsAutofocusDirective,
            FsUtilGuidPipe,
            FsUtilStringifyPipe,
            FsFormatNumberPipe,
            FsFormatCurrencyPipe,
            FsFormatTruncatePipe,
            FsUtilIsEmptyPipe,
            FsUtilIsNotEmptyPipe,
            FsFormatBytesPipe,
            FsFormatOrdinalNumberPipe] });
    FsCommonModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsCommonModule, imports: [[
                common.CommonModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsCommonModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            common.CommonModule,
                        ],
                        exports: [
                            FsStopPropagationDirective,
                            FsPreventDefaultDirective,
                            FsAutofocusDirective,
                            FsUtilGuidPipe,
                            FsUtilStringifyPipe,
                            FsFormatNumberPipe,
                            FsFormatCurrencyPipe,
                            FsFormatTruncatePipe,
                            FsUtilIsEmptyPipe,
                            FsUtilIsNotEmptyPipe,
                            FsFormatBytesPipe,
                            FsFormatOrdinalNumberPipe,
                        ],
                        declarations: [
                            FsStopPropagationDirective,
                            FsPreventDefaultDirective,
                            FsAutofocusDirective,
                            FsUtilGuidPipe,
                            FsUtilIsEmptyPipe,
                            FsUtilIsNotEmptyPipe,
                            FsUtilStringifyPipe,
                            FsFormatNumberPipe,
                            FsFormatCurrencyPipe,
                            FsFormatTruncatePipe,
                            FsFormatBytesPipe,
                            FsFormatOrdinalNumberPipe,
                        ],
                    }]
            }] });

    function email(value) {
        return !!String(value).match(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/);
    }

    function phone(value) {
        var valid = /^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4}/.test(value);
        return valid || !String(value).length;
    }

    /**
     * Check validity of the url.
     * Protocol (http/https) isn't required.
     * @param value
     * @returns {boolean}
     */
    function url(value) {
        var expression = /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#%[\]@!\$&'\(\)\*\+,;=.]+$/gm;
        var regexp = new RegExp(expression);
        return !!String(value).match(regexp);
    }

    function compare(query, item) {
        var value = true;
        for (var key in query) {
            value = value && item[key] == query[key];
        }
        return value;
    }

    function filter(array, query) {
        if (typeof query !== 'function') {
            var queryObj_1 = query;
            query = function (item) {
                return compare(queryObj_1, item);
            };
        }
        var isarray = Array.isArray(array);
        var list = isarray ? [] : {};
        if (isarray) {
            array.forEach(function (item, idx) {
                if (query(item)) {
                    list.push(item);
                }
            });
        }
        else {
            Object.keys(array).forEach(function (key) {
                if (query(array[key])) {
                    list[key] = array[key];
                }
            });
        }
        return list;
    }

    function inArray(values, array) {
        if (!Array.isArray(values)) {
            values = [values];
        }
        for (var i = 0, len = values.length; i < len; i++) {
            if (array.indexOf(values[i]) >= 0) {
                return true;
            }
        }
        return false;
    }

    function index(array, name, value) {
        if (value === void 0) { value = null; }
        var list = {};
        array.forEach(function (item) {
            list[item[name]] = value ? item[value] : item;
        });
        return list;
    }

    function indexOf(array, query) {
        if (typeof query !== 'function') {
            var queryObj_1 = query;
            query = function (item) {
                return compare(queryObj_1, item);
            };
        }
        for (var i = 0, len = array.length; i < len; i++) {
            if (query(array[i])) {
                return i;
            }
        }
        return -1;
    }

    function keyExists(array, key) {
        return array.hasOwnProperty(key);
    }

    function ksort(unordered) {
        Object.keys(unordered).sort().forEach(function (key) {
            var value = unordered[key];
            delete unordered[key];
            unordered[key] = value;
        });
    }

    function list(array, property, index) {
        if (index === void 0) { index = null; }
        var resultList = index ? {} : [];
        array.forEach(function (item, idx) {
            if (index) {
                resultList[item[index]] = item[property];
            }
            else {
                resultList.push(item[property]);
            }
        });
        return resultList;
    }

    function nameValue(array, name, value) {
        var list = [];
        if (name || value) {
            var nameFn_1 = typeof name === 'function' ? name : function (item) {
                return item[name];
            };
            var valueFn_1 = typeof value === 'function' ? value : function (item) {
                return item[value];
            };
            array.forEach(function (item) {
                list.push({ name: nameFn_1(item), value: valueFn_1(item) });
            });
        }
        else {
            array.forEach(function (n, v) {
                list.push({ name: n, value: v });
            });
        }
        return list;
    }

    function remove(array, query) {
        var idx = indexOf(array, query);
        if (idx >= 0) {
            return array.splice(idx, 1);
        }
        return idx;
    }

    function sort(array, query, reverse) {
        if (reverse === void 0) { reverse = false; }
        if (typeof query !== 'function') {
            var queryStr_1 = query;
            query = function (a, b) {
                if (reverse) {
                    if (a[queryStr_1] < b[queryStr_1]) {
                        return 1;
                    }
                    else if (a[queryStr_1] > b[queryStr_1]) {
                        return -1;
                    }
                }
                else {
                    if (a[queryStr_1] > b[queryStr_1]) {
                        return 1;
                    }
                    else if (a[queryStr_1] < b[queryStr_1]) {
                        return -1;
                    }
                }
                return 0;
            };
        }
        array.sort(query);
        return array;
    }

    function rsort(array, query) {
        return sort(array, query, true);
    }

    function find(array, query) {
        var data = filter(array, query);
        return data.length ? data[0] : null;
    }

    function boolean(value) {
        return lodashEs.toString(value).toLowerCase() !== 'false' && !!value;
    }

    function debounce(func, wait, immediate) {
        var timeout;
        return function () {
            var context = this, args = arguments;
            var later = function () {
                timeout = null;
                if (!immediate)
                    func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow)
                func.apply(context, args);
        };
    }

    var KEY_CANCEL = 3;
    var KEY_HELP = 6;
    var KEY_BACKSPACE = 8;
    var KEY_TAB = 9;
    var KEY_CLEAR = 12;
    var KEY_RETURN = 13;
    var KEY_ENTER = 14;
    var KEY_SHIFT = 16;
    var KEY_CONTROL = 17;
    var KEY_ALT = 18;
    var KEY_PAUSE = 19;
    var KEY_CAPS_LOCK = 20;
    var KEY_ESCAPE = 27;
    var KEY_SPACE = 32;
    var KEY_PAGE_UP = 33;
    var KEY_PAGE_DOWN = 34;
    var KEY_END = 35;
    var KEY_HOME = 36;
    var KEY_LEFT = 37;
    var KEY_UP = 38;
    var KEY_RIGHT = 39;
    var KEY_DOWN = 40;
    var KEY_PRINTSCREEN = 44;
    var KEY_INSERT = 45;
    var KEY_DELETE = 46;
    var KEY_0 = 48;
    var KEY_1 = 49;
    var KEY_2 = 50;
    var KEY_3 = 51;
    var KEY_4 = 52;
    var KEY_5 = 53;
    var KEY_6 = 54;
    var KEY_7 = 55;
    var KEY_8 = 56;
    var KEY_9 = 57;
    var KEY_SEMICOLON = 59;
    var KEY_EQUALS = 61;

    function length(object) {
        if (lodashEs.isObject(object)) {
            return Object.keys(object).length;
        }
        if (lodashEs.isArray(object)) {
            return object.length;
        }
        return 0;
    }

    function resolve(promise, defaults) {
        if (defaults === void 0) { defaults = []; }
        var result = defaults;
        return new Promise(function (resolve) {
            promise.then(function (data) {
                Object.keys(data).forEach(function (key) { return result[key] = data[key]; });
                resolve(result);
            });
        });
    }

    function uuid() {
        return guid('xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx');
    }

    function value(object, key, def) {
        if (typeof object === 'object' || Array.isArray(object)) {
            if (object.hasOwnProperty(key)) {
                return object[key];
            }
        }
        return def;
    }

    function isClass(value, cls) {
        if (typeof value === 'object') {
            if (typeof cls === 'string') {
                if (value.constructor) {
                    if (value.constructor.name === cls) {
                        return true;
                    }
                }
            }
            else {
                if (value instanceof cls) {
                    return true;
                }
            }
        }
        return false;
    }

    function isNumeric(value) {
        var str = lodashEs.toString(value);
        return str.length && !!str.match(/^-?\d*\.?\d*$/);
    }

    function throttle(func, wait) {
        var waiting = false; // Initially, we're not waiting
        return function () {
            if (!waiting) { // If we're not waiting
                func.apply(null, arguments); // Execute users function
                waiting = true; // Prevent future invocations
                setTimeout(function () {
                    waiting = false; // And allow future invocations
                }, wait);
            }
        };
    }

    var Operation = /** @class */ (function () {
        function Operation(target, name) {
            this.ready$ = new rxjs.Subject();
            this.name = name ? name : guid();
            if (target instanceof rxjs.Observable) {
                this.target = target;
            }
            else {
                this.target = rxjs.of(target);
            }
        }
        return Operation;
    }());

    exports.QueueState = void 0;
    (function (QueueState) {
        QueueState["Idle"] = "idle";
        QueueState["Processing"] = "processing";
    })(exports.QueueState || (exports.QueueState = {}));

    var Queue = /** @class */ (function () {
        function Queue(_limit) {
            if (_limit === void 0) { _limit = Infinity; }
            this._limit = _limit;
            this._done = new rxjs.Subject();
            this._queue = [];
            this._inProgress = [];
            this._total = 0;
            this._completed = 0;
            this._errors = 0;
            this._state = exports.QueueState.Idle;
            this._destroy$ = new rxjs.Subject();
        }
        Object.defineProperty(Queue.prototype, "total", {
            get: function () {
                return this._total;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Queue.prototype, "completed", {
            get: function () {
                return this._completed;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Queue.prototype, "pending", {
            get: function () {
                return this._queue.length;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Queue.prototype, "inProgress", {
            get: function () {
                return this._inProgress.length;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Queue.prototype, "errors", {
            get: function () {
                return this._errors;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Queue.prototype, "state", {
            get: function () {
                return this._state;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Queue.prototype, "empty", {
            get: function () {
                return !this._queue.length && !this._inProgress.length;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Queue.prototype, "pendingOperations", {
            get: function () {
                return this._queue
                    .map(function (operation) { return operation.name; });
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Queue.prototype, "inProgressOperations", {
            get: function () {
                return this._inProgress
                    .map(function (operation) { return operation.name; });
            },
            enumerable: false,
            configurable: true
        });
        Queue.prototype.isProcessing = function () {
            return this._state === exports.QueueState.Processing;
        };
        Queue.prototype.isIdle = function () {
            return this._state === exports.QueueState.Idle;
        };
        Queue.prototype.setLimit = function (value) {
            this._limit = value;
        };
        Queue.prototype.subscribe = function (fun, err, complete) {
            this._done
                .pipe(operators.takeUntil(this._destroy$))
                .subscribe(fun, err, complete);
        };
        Queue.prototype.complete = function (fun, err, complete) {
            var _this = this;
            rxjs.Observable.create(function (observer) {
                if (!_this.isProcessing()) {
                    observer.next();
                    observer.complete();
                    return;
                }
                _this.subscribe(function () {
                    observer.next();
                    observer.complete();
                }, function (error) {
                    observer.error(error);
                    _this.clear();
                });
            }).subscribe(fun, err, complete);
        };
        Queue.prototype.push = function (target, name) {
            var operation = new Operation(target, name);
            this._total++;
            this._state = exports.QueueState.Processing;
            if (this._inProgress.length < this._limit) {
                this._processOperation(operation);
            }
            else {
                this._queue.push(operation);
            }
            return operation.ready$;
        };
        Queue.prototype.clear = function () {
            this._queue = [];
            this._total = 0;
            this._errors = 0;
            this._completed = 0;
            this._state = exports.QueueState.Idle;
            this._done = new rxjs.Subject();
        };
        Queue.prototype.destroy = function () {
            this.clear();
            this._done.complete();
        };
        Queue.prototype._processOperation = function (operation) {
            var _this = this;
            this._inProgress.push(operation);
            operation.target
                .pipe(operators.delay(200), // Hack to prevent extra quick proccess execution
            operators.takeUntil(this._destroy$)).subscribe({
                next: function (data) {
                    operation.ready$.next(data);
                },
                error: function (error) {
                    var opIndex = _this._inProgress.indexOf(operation);
                    _this._inProgress.splice(opIndex, 1);
                    _this._errors++;
                    operation.ready$.error(error);
                    if (_this.empty) {
                        _this._state = exports.QueueState.Idle;
                        _this._done.error(error);
                    }
                },
                complete: function () {
                    var opIndex = _this._inProgress.indexOf(operation);
                    _this._inProgress.splice(opIndex, 1);
                    _this._completed++;
                    operation.ready$.complete();
                    if (_this.empty) {
                        _this._state = exports.QueueState.Idle;
                        _this._done.next();
                    }
                    else {
                        if (_this._queue.length) {
                            var queueItem = _this._queue.shift();
                            _this._processOperation(queueItem);
                        }
                    }
                }
            });
        };
        return Queue;
    }());

    function removeQueryParams(path) {
        return path.split('?')[0];
    }

    function getNormalizedPath(locationSrv) {
        var path = locationSrv.prepareExternalUrl(locationSrv.path());
        return removeQueryParams(path);
    }

    function acronym(str, length) {
        if (length === void 0) { length = 2; }
        var splittedString = str
            .replace(/[^a-zA-Z0-9]+/g, ' ')
            .split(' ');
        var result = '';
        for (var i = 0; i < length; i++) {
            if (!splittedString[i]) {
                if (splittedString.length === 1) {
                    for (var j = 1; j < length; j++) {
                        if (!splittedString[i - 1][j]) {
                            break;
                        }
                        result += splittedString[i - 1][j].toUpperCase();
                    }
                }
                break;
            }
            result += splittedString[i][0].toUpperCase();
        }
        return result;
    }

    function delayedRetry(delayMs, maxRetry, message) {
        if (maxRetry === void 0) { maxRetry = 5; }
        var retries = 0;
        return function (src) { return src.pipe(operators.retryWhen(function (errors) { return errors.pipe(operators.tap(function () {
            retries++;
            if (retries <= maxRetry) {
                console.info("Failed to load Resource. Retry in " + delayMs / 1000 + " sec. " + retries + "/" + maxRetry + " times...");
            }
        }), operators.concatMap(function (error) { return rxjs.iif(function () { return retries > maxRetry; }, rxjs.throwError(getErrorMessage(maxRetry, message)), rxjs.timer(delayMs)); })); })); };
    }
    var getErrorMessage = function (maxRetry, defaultMessage) {
        if (!defaultMessage) {
            return "Failed to load Resource for " + maxRetry + " times. Giving up.";
        }
        else {
            return defaultMessage;
        }
    };

    /*
     * Public API Surface of fs-menu
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.FsArray = FsArray;
    exports.FsAutofocusDirective = FsAutofocusDirective;
    exports.FsCommonModule = FsCommonModule;
    exports.FsFormatBytesPipe = FsFormatBytesPipe;
    exports.FsFormatCurrencyPipe = FsFormatCurrencyPipe;
    exports.FsFormatNumberPipe = FsFormatNumberPipe;
    exports.FsFormatOrdinalNumberPipe = FsFormatOrdinalNumberPipe;
    exports.FsFormatTruncatePipe = FsFormatTruncatePipe;
    exports.FsMath = FsMath;
    exports.FsPreventDefaultDirective = FsPreventDefaultDirective;
    exports.FsStopPropagationDirective = FsStopPropagationDirective;
    exports.FsUtil = FsUtil;
    exports.FsUtilGuidPipe = FsUtilGuidPipe;
    exports.FsUtilIsEmptyPipe = FsUtilIsEmptyPipe;
    exports.FsUtilIsNotEmptyPipe = FsUtilIsNotEmptyPipe;
    exports.FsUtilStringifyPipe = FsUtilStringifyPipe;
    exports.FsValidate = FsValidate;
    exports.KEY_0 = KEY_0;
    exports.KEY_1 = KEY_1;
    exports.KEY_2 = KEY_2;
    exports.KEY_3 = KEY_3;
    exports.KEY_4 = KEY_4;
    exports.KEY_5 = KEY_5;
    exports.KEY_6 = KEY_6;
    exports.KEY_7 = KEY_7;
    exports.KEY_8 = KEY_8;
    exports.KEY_9 = KEY_9;
    exports.KEY_ALT = KEY_ALT;
    exports.KEY_BACKSPACE = KEY_BACKSPACE;
    exports.KEY_CANCEL = KEY_CANCEL;
    exports.KEY_CAPS_LOCK = KEY_CAPS_LOCK;
    exports.KEY_CLEAR = KEY_CLEAR;
    exports.KEY_CONTROL = KEY_CONTROL;
    exports.KEY_DELETE = KEY_DELETE;
    exports.KEY_DOWN = KEY_DOWN;
    exports.KEY_END = KEY_END;
    exports.KEY_ENTER = KEY_ENTER;
    exports.KEY_EQUALS = KEY_EQUALS;
    exports.KEY_ESCAPE = KEY_ESCAPE;
    exports.KEY_HELP = KEY_HELP;
    exports.KEY_HOME = KEY_HOME;
    exports.KEY_INSERT = KEY_INSERT;
    exports.KEY_LEFT = KEY_LEFT;
    exports.KEY_PAGE_DOWN = KEY_PAGE_DOWN;
    exports.KEY_PAGE_UP = KEY_PAGE_UP;
    exports.KEY_PAUSE = KEY_PAUSE;
    exports.KEY_PRINTSCREEN = KEY_PRINTSCREEN;
    exports.KEY_RETURN = KEY_RETURN;
    exports.KEY_RIGHT = KEY_RIGHT;
    exports.KEY_SEMICOLON = KEY_SEMICOLON;
    exports.KEY_SHIFT = KEY_SHIFT;
    exports.KEY_SPACE = KEY_SPACE;
    exports.KEY_TAB = KEY_TAB;
    exports.KEY_UP = KEY_UP;
    exports.Queue = Queue;
    exports.acronym = acronym;
    exports.boolean = boolean;
    exports.bytes = bytes;
    exports.compare = compare;
    exports.currency = currency;
    exports.debounce = debounce;
    exports.delayedRetry = delayedRetry;
    exports.email = email;
    exports.filter = filter;
    exports.find = find;
    exports.getNormalizedPath = getNormalizedPath;
    exports.guid = guid;
    exports.inArray = inArray;
    exports.index = index;
    exports.indexOf = indexOf;
    exports.isClass = isClass;
    exports.isEmpty = isEmpty;
    exports.isNumeric = isNumeric;
    exports.keyExists = keyExists;
    exports.ksort = ksort;
    exports.length = length;
    exports.list = list;
    exports.nameValue = nameValue;
    exports.number = number;
    exports.ordinalNumber = ordinalNumber;
    exports.phone = phone;
    exports.remove = remove;
    exports.removeQueryParams = removeQueryParams;
    exports.resolve = resolve;
    exports.rsort = rsort;
    exports.sort = sort;
    exports.stringify = stringify;
    exports.throttle = throttle;
    exports.truncate = truncate;
    exports.url = url;
    exports.uuid = uuid;
    exports.value = value;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=firestitch-common.umd.js.map
