{"version":3,"file":"firestitch-drawer.js","sources":["../../src/app/helpers/action-type.enum.ts","../../src/app/models/base-action.ts","../../src/app/models/menu-action.model.ts","../../src/app/models/action.model.ts","../../src/app/models/drawer-config.model.ts","../../src/app/classes/drawer-ref.ts","../../src/app/components/drawer-menu/drawer-menu.component.ts","../../src/app/components/drawer-menu/drawer-menu.component.html","../../src/app/classes/drawer-menu-ref.ts","../../src/app/classes/drawer-data.ts","../../src/app/services/drawer-menu-data.ts","../../src/app/services/drawer-menu.service.ts","../../src/app/components/drawer-actions/drawer-action-item/drawer-action-item.component.ts","../../src/app/components/drawer-actions/drawer-action-item/drawer-action-item.component.html","../../src/app/components/drawer-actions/drawer-actions.component.ts","../../src/app/components/drawer-actions/drawer-actions.component.html","../../src/app/classes/persistance-controller.ts","../../src/app/services/drawer-store.service.ts","../../src/app/consts/sizes.cont.ts","../../src/app/classes/drawer-size-controller.ts","../../src/app/directives/drawer-resizer.directive.ts","../../src/app/components/drawer/drawer.component.ts","../../src/app/components/drawer/drawer.component.html","../../src/app/directives/drawer-action.directive.ts","../../src/app/components/drawer-side/drawer-side.component.ts","../../src/app/components/drawer-side/drawer-side.component.html","../../src/app/components/drawer-content/drawer-content.component.ts","../../src/app/fs-drawer.module.ts","../../src/app/services/drawer-data.ts","../../src/app/services/drawer-default-config.ts","../../src/app/services/drawer.service.ts","../../src/public_api.ts","../../src/firestitch-drawer.ts"],"sourcesContent":["export enum FsDrawerAction {\n  Button = 'button',\n  Menu = 'menu',\n  Component = 'component',\n}\n","import {\n  IDrawerActionLink,\n  IDrawerActionLinkFn,\n  IDrawerActionShowFn,\n  IMenuActionClick\n} from '../interfaces/action.iterface';\nimport { DrawerData } from '../classes/drawer-data';\n\nexport class BaseAction {\n\n  protected _visible = true;\n  protected _routerLink: IDrawerActionLink;\n\n  protected _icon: string;\n  protected readonly _show: IDrawerActionShowFn;\n  protected readonly _click: Function | null;\n  protected readonly _link: IDrawerActionLinkFn;\n\n  constructor(data: any = {}) {\n    this._icon = data.icon || '';\n    this._click = data.click || null;\n    this._link = data.link;\n    this._show = data.show || null;\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  get click() {\n    return this._click;\n  }\n\n  get routerLink() {\n    return this._routerLink;\n  }\n\n  get visible() {\n    return this._visible\n  }\n\n  public checkVisibility(data: DrawerData) {\n    if (this._show) {\n      this._visible = this._show(data);\n    }\n  }\n\n  public updateRouterLink(data: IMenuActionClick) {\n    if (this._visible && this._link) {\n      this._routerLink = this._link(data);\n    }\n  }\n}\n","import { BaseAction } from './base-action';\nimport { DrawerData } from '../classes/drawer-data';\n\n\nexport class MenuAction extends BaseAction {\n  public actions: MenuAction[] = [];\n\n  private _label: string;\n\n  private readonly _isGroup: boolean = false;\n\n  constructor(data: any = {}) {\n    super(data);\n\n    if (Array.isArray(data.actions)) {\n      this._isGroup = true;\n\n      this.actions = data.actions.map((action) => new MenuAction(action));\n    }\n    this._label = data.label || '';\n  }\n\n  get isGroup() {\n    return this._isGroup;\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  public updateRouterLink(data) {\n    super.updateRouterLink(data);\n\n    if (this.actions.length > 0) {\n      this.actions.forEach((action) => {\n        action.updateRouterLink(data);\n      })\n    }\n  }\n\n\n  public checkVisibility(data: DrawerData) {\n    super.checkVisibility(data);\n\n    if (this.actions.length > 0) {\n      this.actions.forEach((action) => {\n        action.checkVisibility(data);\n      })\n    }\n\n    if (this.actions.length > 0) {\n      this._visible = this.actions.some((action) => action.visible);\n    }\n  }\n}\n","import { FsDrawerAction } from '../helpers/action-type.enum';\nimport { BaseAction } from './base-action';\nimport { DrawerData } from '../classes/drawer-data';\nimport { MenuAction } from './menu-action.model';\n\n\nexport class Action extends BaseAction {\n  private _tooltip: string;\n  private _data: any = null;\n  private _disabled = false;\n\n  private readonly _toggle: boolean;\n  private readonly _type: FsDrawerAction;\n  private readonly _name: string;\n  private readonly _close: boolean = false;\n  private readonly _closeSide: boolean = true;\n  private readonly _menuActions: MenuAction[] = [];\n  private readonly _component = null;\n  private readonly _menuRefName = null;\n\n  constructor(data: any = {}) {\n    super(data);\n    this._icon = data.icon || '';\n    this._type = data.type || '';\n    this._name = data.name || '';\n    this._toggle = data.toggle === void 0 ? true : data.toggle;\n    this._tooltip = data.tooltip || '';\n    this._close = !!data.close;\n    this._component = data.component || null;\n    this._data = data.data === void 0 ? {} : data.data;\n    this._disabled = data.disabled ?? false;\n\n    if (this._type === FsDrawerAction.Component) {\n      this._menuRefName = data.name || data.icon;\n    }\n\n    if (this._type === FsDrawerAction.Menu && data.closeSide === void 0) {\n     this._closeSide = false;\n    } else {\n      this._closeSide = data.closeSide === void 0 ? true : !!data.closeSide;\n    }\n\n    if (Array.isArray(data.actions)) {\n      this._menuActions = data.actions.map((action) => new MenuAction(action));\n    }\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  set icon(value: string) {\n    this._icon = value;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get toggle() {\n    return this._toggle;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get tooltip() {\n    return this._tooltip;\n  }\n\n  set tooltip(value: string) {\n    this._tooltip = value;\n  }\n\n  get close() {\n    return this._close;\n  }\n\n  get closeSide() {\n    return this._closeSide;\n  }\n\n  get menuActions() {\n    return this._menuActions;\n  }\n\n  get component() {\n    return this._component;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  set data(value: any) {\n    this._data = value;\n  }\n\n  get menuRefName() {\n    return this._menuRefName;\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = value;\n  }\n\n  public updateRouterLink(data) {\n    if (this._visible) {\n      super.updateRouterLink(data);\n\n      if (this._menuActions.length > 0) {\n        this._menuActions.forEach((action) => {\n          action.updateRouterLink(data);\n        })\n      }\n    }\n  }\n\n  public checkVisibility(data: DrawerData) {\n    super.checkVisibility(data);\n\n    if (this._menuActions.length > 0) {\n      this._menuActions.forEach((action) => {\n        action.checkVisibility(data);\n      })\n    }\n\n    if (this.menuActions.length > 0) {\n      this._visible = this.menuActions.some((action) => action.visible);\n    }\n  }\n}\n","import { Action } from './action.model';\nimport { IDrawerConfig, IDrawerWidthConfig, IFsDrawerPersistance } from '../interfaces/drawer-config.interface';\n\n\nexport class DrawerConfig {\n  public disableClose: boolean;\n  public position: 'right' | 'left';\n  public activeAction: string;\n  public resizable: boolean;\n  public width: IDrawerWidthConfig;\n  public actions: Action[] | null;\n  public persist: IFsDrawerPersistance;\n\n  constructor(data: IDrawerConfig = {}) {\n    this.disableClose = data.disableClose || false;\n    this.position = data.position || 'right';\n    this.activeAction = data.activeAction || '';\n    this.persist = data.persist;\n\n    this.resizable = data.resizable === void 0 ? true : data.resizable;\n\n    if (data.width) {\n      this.width = data.width;\n    }\n\n    this.actions = data.actions && data.actions.map((action) => new Action(action)) || null;\n  }\n}\n","import { ComponentRef, ElementRef } from '@angular/core';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { OverlayRef } from '@angular/cdk/overlay';\n\nimport { BehaviorSubject, Observable, Subject, Subscriber, zip, pipe } from 'rxjs';\nimport { filter, take, takeUntil, tap, switchMap, map } from 'rxjs/operators';\n\nimport { DrawerData } from './drawer-data';\nimport type { FsDrawerComponent } from '../components/drawer/drawer.component';\nimport { DrawerConfig } from '../models/drawer-config.model';\nimport { DrawerMenuRef } from '../classes/drawer-menu-ref';\nimport { IDrawerConfig } from '../interfaces/drawer-config.interface';\nimport { DrawerSizeController } from './drawer-size-controller';\n\n\nexport class DrawerRef<T, R = any> {\n\n  public readonly drawerConfig: DrawerConfig;\n\n  /** Subject for notifying the user that the drawer has finished opening. */\n  private readonly _afterOpened$ = new Subject<void>();\n\n  /** Subject for notifying the user that the drawer has finished closing. */\n  private readonly _afterClosed$ = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the drawer has started closing. */\n  private readonly _closeStart$ = new Subject<Subscriber<void>>();\n\n  /** Subject for notifying the user that the drawer has started opening. */\n  private readonly _openStart$ = new Subject<Subscriber<void>>();\n\n  /** Subject for notifying the user that the drawer has started closing. */\n  private readonly _sideToggle = new Subject<boolean>();\n\n  /** Subject for notifying the user that the drawer has finished opening. */\n  private readonly _actionsUpdated$ = new Subject<string>();\n\n  /** Destroy notifier **/\n  private readonly _destroy$ = new Subject<void>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  /** Main drawer component and template */\n  private _drawerContainerRef: FsDrawerComponent;\n\n  /** Main drawer component and template */\n  private _drawerComponentRef: ComponentRef<T>;\n\n  /** Drawer Content Template */\n  private _drawerContainer: ElementRef;\n\n  /** Drawer Actions Template */\n  private _drawerActionsContainer: ElementRef;\n\n  private _resizeController: DrawerSizeController;\n\n  private _activeAction = new BehaviorSubject<string>(void 0);\n\n  private _menuRefs = new Map<string, DrawerMenuRef<T, R>>();\n\n  private _isOpen = false;\n  private _isSideOpen = false;\n\n\n  constructor(\n    private _overlayRef: OverlayRef,\n    private _dataFactory: DrawerData,\n    _config: IDrawerConfig\n  ) {\n    this.drawerConfig = new DrawerConfig(_config);\n    this._initActiveAction();\n  }\n\n  public get overlayRef() {\n    return this._overlayRef;\n  }\n\n  /**\n   * Getter for DRAWER_DATA for current drawer\n   */\n  public get drawerData() {\n    return { ...this._dataFactory.getValue() } // Like immutable.... TODO switch to Immer\n  }\n\n  public get destroy$() {\n    return this._destroy$.asObservable();\n  }\n\n  /**\n   * Set reference to drawer container\n   * @param value\n   */\n  public set containerRef(value: FsDrawerComponent) {\n    this._drawerContainerRef = value;\n  }\n\n  /**\n   * Set reference to drawer component\n   * @param value\n   */\n  public set componentRef(value: ComponentRef<T>) {\n    this._drawerComponentRef = value;\n  }\n\n  public set drawerContainer(value: ElementRef) {\n    this._drawerContainer = value;\n  }\n\n  public set drawerActionsContainer(value: ElementRef) {\n    this._drawerActionsContainer = value;\n  }\n\n  public get drawerContainer(): ElementRef {\n    return this._drawerContainer;\n  }\n\n  public get drawerActionsContainer(): ElementRef {\n    return this._drawerActionsContainer;\n  }\n\n  public get activeAction() {\n    return this._activeAction.getValue();\n  }\n\n  public get activeAction$() {\n    return this._activeAction.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Return actual status of the drawer\n   */\n  public get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  /**\n   * Return actual status of the side of the drawer\n   */\n  public get isSideOpen(): boolean {\n    return this._isSideOpen;\n  }\n\n  public set resizeController(value: DrawerSizeController) {\n    this._resizeController = value;\n  }\n\n  public get resizeController(): DrawerSizeController {\n    return this._resizeController;\n  }\n\n  /**\n   * Gets an observable that action was updated and change detection should be started\n   */\n  public get actionUpdated$(): Observable<string> {\n    return this._actionsUpdated$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  public get afterClosed$(): Observable<R | undefined> {\n    return this._afterClosed$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  public get afterOpened$(): Observable<void> {\n    return this._afterOpened$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog open starts.\n   */\n  public get openStart$(): Observable<Subscriber<void>> {\n    return this._openStart$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  public get closeStart$(): Observable<Subscriber<void>> {\n    return this._closeStart$.pipe(takeUntil(this._destroy$));\n  }\n\n  public closeWhen(): any {\n    return (source: Observable<T>) => {\n      this._closeStart$\n        .pipe(\n          switchMap((observer) => {\n            return source.pipe(\n              map(() => {\n                return observer;\n              })\n            );\n          })\n        )\n        .subscribe((observer) => {\n          observer.next();\n          observer.complete();\n        });\n\n\n\n        //   switchMap(() => {\n        //     debugger;\n        //     return source;\n        //   })\n        // )\n        // .subscribe((observer) => {\n        // source.pipe(\n        //   tap(() => {\n        //     debugger;\n        //     observer.next();\n        //     observer.complete();\n        //   }),\n        // );\n\n\n    return source;\n      // return new Observable(subscriber => {\n      //   source.subscribe({\n      //     next(value) {\n      //       if (value !== undefined && value !== null) {\n      //         subscriber.next(value);\n      //       }\n      //     },\n      //     error(error) {\n      //       subscriber.error(error);\n      //     },\n      //     complete() {\n      //       subscriber.complete();\n      //     }\n      //   })\n      // });\n    }\n  }\n\n  /**\n   * Gets an observable that is notified when data in DRAWER_DATA was changed\n   */\n  public get dataChanged$(): Observable<any> {\n    return this._dataFactory.dataChange$;\n  }\n\n  /**\n   * Gets an observable that is notify that side status toggled\n   */\n  public get sideToggle$(): Observable<boolean> {\n    return this._sideToggle.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Subscribe on keydown events to react on escape\n   */\n  public events() {\n    this._overlayRef.keydownEvents()\n      .pipe(\n        filter(event => event.keyCode === ESCAPE && !this.drawerConfig.disableClose),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => this.close());\n  }\n\n  /**\n   * Set value for DRAWER_DATA\n   * @param data\n   */\n  public dataChange(data) {\n    this._dataFactory.setValue(data);\n  }\n\n  /**\n   * Open drawer and notify observable\n   */\n  public open() {\n    new Observable<void>((obs) => {\n      setTimeout(() => { // FIXME Crutch\n        if (this._openStart$.observers.length) {\n          this._openStart$.next(obs);\n        } else {\n          obs.next();\n          obs.complete();\n        }\n      });\n    }).pipe(takeUntil(this._destroy$))\n      .subscribe({\n        next: () => {\n          if (this.activeAction) {\n            this.openSide();\n          }\n\n          this._drawerContainerRef.open();\n          this._afterOpened$.next();\n          this._afterOpened$.complete();\n        },\n        error: () => {\n          this.destroy();\n        },\n    });\n  }\n\n  /**\n   * Close the drawer.\n   * @param result Optional result to return to the dialog opener.\n   */\n  public close(result?: R): void {\n    new Observable<void>(observer => {\n      if (this._closeStart$.observers.length) {\n        zip(...this._closeStart$.observers.map(item => {\n          return Observable.create(closeObserver => {\n            item.next(closeObserver);\n          });\n        }))\n        .pipe(\n          takeUntil(this._destroy$)\n        )\n        .subscribe(() => {\n          observer.next();\n          observer.complete();\n        }, () => {\n          observer.error();\n        });\n      } else {\n        observer.next();\n        observer.complete();\n      }\n\n    }).pipe(takeUntil(this._destroy$))\n      .subscribe({\n      next: () => {\n        this._drawerContainerRef.close();\n        this._result = result;\n        this._afterClosed$.next(result);\n        this.destroy();\n      }\n    });\n  }\n\n  /**\n   * Open the side of the drawer\n   */\n  public openSide() {\n    this._isSideOpen = true;\n    this._sideToggle.next(this._isSideOpen);\n  }\n\n  /**\n   * Close the side of the drawer\n   */\n  public closeSide() {\n    this._isSideOpen = false;\n    this._sideToggle.next(this._isSideOpen);\n\n    this.activateAction(null);\n  }\n\n  /**\n   * Toggle the side of the drawer\n   */\n  public toggleSide() {\n    this.isSideOpen ? this.closeSide() : this.openSide();\n  }\n\n  /**\n   * Change active action\n   * @param name\n   */\n  public activateAction(name: string) {\n    this._activeAction.next(name);\n\n    if (name) {\n      this.openSide();\n    }\n  }\n\n  public enableAction(name: string): void {\n    const action = this.getAction(name);\n\n    if (action) {\n      action.disabled = false;\n      this._actionsUpdated$.next(name);\n    }\n  }\n\n  public disableAction(name: string): void {\n    const action = this.getAction(name);\n\n    if (action) {\n      action.disabled = true;\n      this._actionsUpdated$.next(name);\n    }\n  }\n\n  /**\n   * Store opened menu reference and subscribe for auto remove\n   * @param name\n   * @param ref\n   */\n  public addMenuRef(name: string, ref: DrawerMenuRef<T, R>) {\n    this._menuRefs.set(name, ref);\n\n    ref.afterClosed()\n      .pipe(\n        take(1),\n        takeUntil(this._destroy$)\n      )\n      .subscribe(() => {\n        this._menuRefs.delete(name);\n      })\n  }\n\n  /**\n   * Get opened menu reference by name\n   * @param name\n   */\n  public getMenuRef(name: string) {\n    return this._menuRefs.get(name);\n  }\n\n  public getAction(name: string) {\n    return this.drawerConfig.actions.find((action) => action.name === name);\n  }\n\n  /**\n   * Do update for icon for target action\n   * @param name\n   * @param icon\n   */\n  public updateActionIcon(name: string, icon: string) {\n    const action = this.getAction(name);\n\n    if (action) {\n      action.icon = icon;\n\n      this._actionsUpdated$.next(name);\n    }\n  }\n\n  /**\n   * Do update\n   * @param name\n   * @param data\n   */\n  public updateAction(name: string, data) {\n    const action = this.getAction(name);\n\n    if (action) {\n      const allowedFields = ['icon', 'type', 'toggle', 'tooltip', 'close', 'closeSide', 'component', 'data'];\n\n      const forUpdate = Object.keys(data).filter((key) => allowedFields.indexOf(key) > -1);\n\n      forUpdate.forEach((key) => {\n        action[key] = data[key];\n      });\n\n      this._actionsUpdated$.next(name);\n    }\n  }\n\n  public updateDrawerWidth(width: number) {\n    this.resizeController.updateMainWidth(width);\n  }\n\n  public updateSideDrawerWidth(width: number) {\n    this.resizeController.updateSideWidth(width);\n  }\n\n  public destroy() {\n    this._overlayRef.detachBackdrop();\n    this._overlayRef.detach();\n    this._drawerComponentRef.destroy();\n    this._dataFactory.destroy();\n\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private _initActiveAction() {\n    if (this.drawerConfig.activeAction) {\n      const action = this.drawerConfig.actions\n        .find((a) => a.name === this.drawerConfig.activeAction);\n\n      if (action) {\n        this._activeAction.next(this.drawerConfig.activeAction);\n      } else {\n        console.warn(\n          `Drawer active action - \"${this.drawerConfig.activeAction}\" does not exists\n        `);\n      }\n    }\n  }\n\n}\n\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  EmbeddedViewRef,\n  ViewChild,\n} from '@angular/core';\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  TemplatePortal\n} from '@angular/cdk/portal';\nimport { DrawerMenuRef } from '../../classes/drawer-menu-ref';\n\n@Component({\n  selector: 'fs-drawer-menu',\n  templateUrl: 'drawer-menu.component.html',\n  styleUrls: [ 'drawer-menu.component.scss' ],\n  host: {\n    'class': 'mat-elevation-z2'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsDrawerMenuComponent extends BasePortalOutlet {\n\n  @ViewChild(CdkPortalOutlet, { static: true }) _portalOutlet: CdkPortalOutlet;\n\n  public ref: DrawerMenuRef<any>;\n\n  constructor() {\n    super();\n  }\n\n  public setDrawerMenuRef(value: DrawerMenuRef<any>) {\n    this.ref = value;\n\n    // this.config = this.externalMenuRef.config;\n  }\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  public attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Drawer component already attached');\n    }\n\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  public attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Drawer template already attached');\n    }\n\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n}\n","<ng-template cdkPortalOutlet></ng-template>\n","import { ComponentRef } from '@angular/core';\nimport { OverlayRef } from '@angular/cdk/overlay';\n\nimport { Observable, Subject, Subscriber, zip } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { FsDrawerMenuComponent } from '../components/drawer-menu/drawer-menu.component';\nimport { DrawerData } from './drawer-data';\n\nexport class DrawerMenuRef<TCmp, R = any> {\n\n  /** Subject for notifying the user that the menu has finished closing. */\n  private readonly _afterClosed$ = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the menu has started closing. */\n  private readonly _closeStart$ = new Subject<Subscriber<void>>();\n\n  /** Destroy notifier **/\n  private readonly _destroy$ = new Subject<void>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  /** Main menu component and template */\n  private _externalMenuContainerRef: FsDrawerMenuComponent;\n\n  /** Main menu component and template */\n  private _externalMenuComponentRef: ComponentRef<TCmp>;\n\n\n  constructor(private _overlayRef: OverlayRef, private _dataFactory: DrawerData) {\n    this._overlayRef.backdropClick()\n      .pipe(\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this.close();\n      })\n  }\n\n  /**\n   * Getter for DRAWER_MENU_DATA for current drawer\n   */\n  get menuData() {\n    return { ...this._dataFactory.getValue() } // Like immutable.... TODO switch to Immer\n  }\n\n  /**\n   * Set reference to menu container\n   * @param value\n   */\n  set containerRef(value: FsDrawerMenuComponent) {\n    this._externalMenuContainerRef = value;\n  }\n\n  /**\n   * Set reference to menu component\n   * @param value\n   */\n  set componentRef(value: ComponentRef<TCmp>) {\n    this._externalMenuComponentRef = value;\n  }\n\n  /**\n   * Gets an observable that is notified when data in DRAWER_DATA was changed\n   */\n  get dataChanged$(): Observable<void> {\n    return this._dataFactory.dataChange$;\n  }\n\n  /**\n   * Set value for DRAWER_DATA\n   * @param data\n   */\n  public dataChange(data) {\n    this._dataFactory.setValue(data);\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  public afterClosed(): Observable<R | undefined> {\n    return this._afterClosed$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  public closeStart(): Observable<Subscriber<void>> {\n    return this._closeStart$.pipe(takeUntil(this._destroy$));\n  }\n\n  /**\n   * Close the menu.\n   * @param result Optional result to return to the dialog opener.\n   */\n  public close(result?: R): void {\n    new Observable<void>(observer => {\n      if (this._closeStart$.observers.length) {\n        zip(...this._closeStart$.observers.map((item) => {\n          return Observable.create(closeObserver => {\n            item.next(closeObserver);\n          });\n        }))\n        .pipe(\n          takeUntil(this._destroy$)\n        )\n        .subscribe(() => {\n          observer.next();\n          observer.complete();\n        }, () => {\n          observer.error();\n        });\n      } else {\n        observer.next();\n        observer.complete();\n      }\n\n    }).pipe(takeUntil(this._destroy$))\n      .subscribe({\n      next: () => {\n        this._result = result;\n        this._afterClosed$.next(result);\n        this.destroy();\n      }\n    });\n  }\n\n\n  public destroy() {\n    this._overlayRef.detachBackdrop();\n    this._overlayRef.detach();\n    this._externalMenuComponentRef && this._externalMenuComponentRef.destroy();\n\n    this._dataFactory.destroy();\n\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport class DrawerData {\n\n  private _data;\n  private _dataChange = new Subject<any>();\n  private _destroy = new Subject<void>();\n\n  constructor(data: any = {}) {\n    this._data = data;\n  }\n\n  public static createWithProxy(data: any = {}) {\n    const drawerData = new DrawerData(data);\n\n    return new Proxy(drawerData, {\n      get(target, property) {\n        if (typeof target[property] === 'function'\n          || property === '_data'\n          || target[property] instanceof Observable\n        ) {\n          return target[property];\n        } else {\n          return target._data[property];\n        }\n      },\n\n      set(target, property, value) {\n        if (property !== '_data') {\n          target._data[property] = value;\n        } else {\n          target[property] = value;\n        }\n\n        return true;\n      },\n\n      has(target, property) {\n        return property in target._data;\n      },\n\n      ownKeys(target) {\n        return Object.keys(target._data);\n      },\n\n      getOwnPropertyDescriptor(target, property) {\n        return Object.getOwnPropertyDescriptor(target._data, property);\n      }\n    });\n  }\n\n  get dataChange$(): Observable<void> {\n    return this._dataChange.pipe(takeUntil(this._destroy));\n  }\n\n  public getValue() {\n    return this._data;\n  }\n\n  public setValue(value) {\n    this._data = value;\n    this._dataChange.next(this._data);\n  }\n\n  public destroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/** Injection token that can be used to access the data that was passed in to a drawer. */\nexport const DRAWER_MENU_DATA = new InjectionToken<any>('fs.drawer.menu-data');\n","import {ElementRef, Injectable, Injector} from '@angular/core';\nimport { ConnectedPosition, Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType, PortalInjector } from '@angular/cdk/portal';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { FsDrawerMenuComponent } from '../components/drawer-menu/drawer-menu.component';\nimport { DrawerMenuRef } from '../classes/drawer-menu-ref';\nimport { DrawerData } from '../classes/drawer-data';\nimport { DRAWER_MENU_DATA } from '../services/drawer-menu-data';\n\n\n@Injectable()\nexport class FsDrawerMenuService {\n\n  constructor(private _overlay: Overlay,\n              private _injector: Injector,\n              private _breakpointObserver: BreakpointObserver) {\n  }\n\n  public create(component: ComponentType<any>, container: Element, config?: any) {\n    const overlayRef = this.createOverlay(container);\n    const dataFactory = DrawerData.createWithProxy(config.data);\n    const menuRef = new DrawerMenuRef(overlayRef, dataFactory);\n    const containerRef = this.attachContainer(overlayRef, menuRef, dataFactory);\n    const componentRef = this.attachComponent(component, containerRef, menuRef, dataFactory);\n    menuRef.containerRef = containerRef;\n    containerRef.setDrawerMenuRef(menuRef);\n\n    menuRef.componentRef = componentRef;\n\n    return menuRef;\n  }\n\n  private createOverlay(container: Element): OverlayRef {\n    const overlayConfig = this.getOverlayConfig(container);\n    return this._overlay.create(overlayConfig);\n  }\n\n  private getOverlayConfig(container: Element): OverlayConfig {\n    const element = new ElementRef(container); // positionStrategy needs ElementRef;\n\n    let strategy = null;\n    if (this._breakpointObserver.isMatched(Breakpoints.XSmall)) {\n      strategy = this._overlay\n        .position()\n        .global()\n        .centerHorizontally()\n        .centerVertically();\n    } else {\n      const positions: ConnectedPosition[] = [\n        { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' }\n      ];\n      strategy = this._overlay\n        .position()\n        .flexibleConnectedTo(element)\n        .withPositions(positions);\n    }\n\n    return new OverlayConfig({\n      positionStrategy: strategy,\n      scrollStrategy:  this._overlay.scrollStrategies.reposition(),\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop'\n    });\n  }\n\n  private attachContainer<T, R>(overlayRef: OverlayRef, menuRef: DrawerMenuRef<T, R>, dataFactory: DrawerData) {\n    const injector = this.createInjector(menuRef, dataFactory);\n    const containerPortal = new ComponentPortal(FsDrawerMenuComponent, undefined, injector);\n    const containerRef = overlayRef.attach<FsDrawerMenuComponent>(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private attachComponent<T, R>(\n    componentRef: ComponentType<T>,\n    externalContainer: FsDrawerMenuComponent,\n    externalRef: DrawerMenuRef<T, R>,\n    config: any,\n  ) {\n\n    const injector = this.createInjector(externalRef, config);\n\n    return externalContainer.attachComponentPortal<T>(\n      new ComponentPortal<T>(componentRef, undefined, injector)\n    );\n  }\n\n\n  private createInjector(componentRef, dataFactory: DrawerData) {\n    const injectionTokens = new WeakMap<any, any>([\n      [DrawerMenuRef, componentRef],\n      [DRAWER_MENU_DATA, dataFactory]\n    ]);\n\n    return new PortalInjector(this._injector, injectionTokens);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, EventEmitter,\n  Input,\n  OnChanges, OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { debounceTime, filter, takeUntil } from 'rxjs/operators';\n\nimport { DrawerRef } from '../../../classes/drawer-ref';\nimport { FsDrawerAction } from '../../../helpers/action-type.enum';\nimport { Action } from '../../../models/action.model';\n\n\n@Component({\n  selector: 'fs-drawer-action-item',\n  templateUrl: './drawer-action-item.component.html',\n  styleUrls: [\n    './drawer-action-item.component.scss',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsDrawerActionItemComponent implements OnInit, OnChanges {\n  @Input()\n  public action: Action;\n\n  @Input()\n  public activeAction: string;\n\n  @Output()\n  public actionClicked = new EventEmitter();\n\n  public isActive = false;\n  public actionTypes = FsDrawerAction;\n\n  private _destroy$ = new Subject<void>();\n\n  constructor(\n    public drawer: DrawerRef<any>,\n    private _cdRef: ChangeDetectorRef,\n  ) {\n    this._listenActionChanges();\n    this._listenDataChanges();\n  }\n\n  public ngOnInit(): void {\n    this._updateVisibilityAndLinks();\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.activeAction) {\n      this.isActive = this.action.name !== '' && this.action.name === this.activeAction;\n    }\n  }\n\n  public actionClick(event) {\n    this.actionClicked.emit(event);\n  }\n\n  public menuActionClick(action, event) {\n    if (action.click) {\n      action.click.call(null, {\n        data: this.drawer.drawerData,\n        event: event,\n        drawerRef: this.drawer,\n        action: action\n      });\n    }\n  }\n\n  private _listenActionChanges() {\n    this.drawer.actionUpdated$\n      .pipe(\n        filter((name) => name === this.action.name),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this._cdRef.detectChanges();\n      })\n  }\n\n  private _listenDataChanges() {\n    this.drawer.dataChanged$\n      .pipe(\n        takeUntil(this._destroy$),\n        debounceTime(50),\n      )\n      .subscribe(() => {\n        this._updateVisibilityAndLinks();\n      });\n  }\n\n\n  private _updateVisibilityAndLinks() {\n    this._updateVisibility();\n    this._updateRouterLinks();\n\n    this._cdRef.detectChanges();\n  }\n\n  private _updateVisibility() {\n    this.action.checkVisibility(this.drawer.drawerData);\n  }\n\n  private _updateRouterLinks() {\n    if (this.action.type === this.actionTypes.Menu) {\n      this.action.updateRouterLink({\n        data: this.drawer.drawerData,\n        drawerRef: this.drawer\n      });\n    }\n  }\n}\n","<ng-container [ngSwitch]=\"action.type\">\n  <ng-container *ngSwitchCase=\"actionTypes.Button\">\n    <button mat-icon-button\n            type=\"button\"\n            *ngIf=\"action.visible\"\n            [matTooltip]=\"action.tooltip\"\n            [disabled]=\"action.disabled\"\n            [class.active]=\"isActive\"\n            (click)=\"actionClick($event)\">\n      <i class=\"material-icons\">{{action.icon}}</i>\n    </button>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"actionTypes.Menu\">\n    <ng-container *ngIf=\"action.visible\">\n      <button mat-icon-button\n              type=\"button\"\n              class=\"sub-action\"\n              [fsMenuTriggerFor]=\"menu\"\n              [matTooltip]=\"action.tooltip\"\n              [disabled]=\"action.disabled\"\n              [class.active]=\"isActive\"\n              (click)=\"actionClick($event)\">\n        <i class=\"material-icons\">{{action.icon}}</i>\n      </button>\n\n      <fs-menu #menu>\n        <ng-container *ngFor=\"let menuAction of action.menuActions\">\n          <ng-container *ngIf=\"menuAction.isGroup else simpleMenuItem\">\n            <fs-menu-group [label]=\"menuAction.label\" [hidden]=\"!menuAction.visible\">\n              <ng-container *ngFor=\"let groupAction of menuAction.actions\">\n                <ng-template fs-menu-item\n                             [hidden]=\"!groupAction.visible\"\n                             [link]=\"groupAction.routerLink?.link\"\n                             [queryParams]=\"groupAction.routerLink?.queryParams\"\n                             (click)=\"menuActionClick(groupAction, $event);\">\n                  <mat-icon *ngIf=\"menuAction.icon\">{{groupAction.icon}}</mat-icon>\n                  {{groupAction.label}}\n                </ng-template>\n              </ng-container>\n            </fs-menu-group>\n          </ng-container>\n          <ng-template #simpleMenuItem>\n            <ng-template fs-menu-item\n                         [hidden]=\"!menuAction.visible\"\n                         [link]=\"menuAction.routerLink?.link\"\n                         [queryParams]=\"menuAction.routerLink?.queryParams\"\n                         (click)=\"menuActionClick(menuAction, $event);\">\n              <i class=\"material-icons\" *ngIf=\"menuAction.icon\">{{menuAction.icon}}</i>\n              <span>{{menuAction.label}}</span>\n            </ng-template>\n          </ng-template>\n        </ng-container>\n      </fs-menu>\n    </ng-container>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"actionTypes.Component\">\n    <button mat-icon-button\n            type=\"button\"\n            *ngIf=\"action.visible\"\n            [matTooltip]=\"action.tooltip\"\n            [disabled]=\"action.disabled\"\n            [class.active]=\"isActive\"\n            (click)=\"actionClick($event)\">\n      <i class=\"material-icons\">{{action.icon}}</i>\n    </button>\n  </ng-container>\n</ng-container>\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { FsDrawerAction } from '../../helpers/action-type.enum';\nimport { DrawerRef } from '../../classes/drawer-ref';\nimport { Action } from '../../models/action.model';\nimport { FsDrawerMenuService } from '../../services/drawer-menu.service';\n\n\n@Component({\n  selector: 'fs-drawer-actions',\n  templateUrl: './drawer-actions.component.html',\n  styleUrls: [ './drawer-actions.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsDrawerActionsComponent implements OnInit, OnDestroy {\n  @Input() public actions: Action[];\n  @Input() public activeAction: string;\n\n  private _destroy$ = new Subject<void>();\n\n  constructor(\n    private _drawerRef: DrawerRef<any>,\n    private _drawerMenu: FsDrawerMenuService,\n    private _cdRef: ChangeDetectorRef,\n  ) {}\n\n  public ngOnInit() {\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public actionClick(action, event) {\n    const hasComponentType = action.type === FsDrawerAction.Component;\n    const hasMenuType = action.type === FsDrawerAction.Menu;\n\n    if (hasComponentType) {\n      const menuRef = this._drawerMenu.create(action.component, event.srcElement, action);\n\n      this._drawerRef.addMenuRef(action.menuRefName, menuRef);\n\n      const params = {\n        event: event,\n        action: action,\n        drawerRef: this._drawerRef,\n        menuRef: menuRef\n      };\n      // Call click\n      action.click.call(null, params);\n\n      if (action.closeSide) {\n        this._drawerRef.closeSide();\n      }\n    } else if (action.click) {\n      const params = { event: event, action: action };\n      action.click.call(null, params);\n    }\n\n    if (action.close) {\n      this._drawerRef.close();\n    }\n\n    if (action.toggle && ((!hasComponentType && !hasMenuType) || action.closeSide)) {\n      if (this._drawerRef.isSideOpen && this._drawerRef.activeAction === action.name) {\n        this._drawerRef.toggleSide();\n      } else {\n        this._drawerRef.activateAction(action.name);\n      }\n    }\n  }\n\n  public muteEvent(e) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n  }\n}\n","<div class=\"actions-container\" (mousedown)=\"muteEvent($event)\" (dragstart)=\"muteEvent($event)\">\n  <div *ngFor=\"let action of actions\" class=\"action-btn\">\n    <fs-drawer-action-item [action]=\"action\"\n                           [activeAction]=\"activeAction\"\n                           (actionClicked)=\"actionClick(action, $event)\">\n    </fs-drawer-action-item>\n  </div>\n</div>\n<div class=\"drag-icon\">\n  <a mat-icon-button class=\"resize-icon\"><mat-icon>drag_indicator</mat-icon></a>\n</div>\n<div class=\"drag-ripple\"></div>\n","import { Injectable } from '@angular/core';\nimport { FsPersistanceStore } from '@firestitch/store';\n\n@Injectable()\nexport class FsDrawerPersistanceController extends FsPersistanceStore {\n\n  protected STORE_KEY = 'fs-drawer-persist'\n\n}\n","import { Injectable } from '@angular/core';\nimport { DrawerRef } from '../classes/drawer-ref';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DrawerStoreService {\n\n  private _openedDrawers: DrawerRef<any>[] = [];\n\n  public get drawerRefs(): DrawerRef<any>[] {\n    return [...this._openedDrawers];\n  }\n\n  public get numberOfOpenedDrawers(): number {\n    return this._openedDrawers.length;\n  }\n\n  public getLevelForRef(value: DrawerRef<any>): number {\n    return this._openedDrawers.indexOf(value) + 1;\n  }\n\n  public addRef(value: DrawerRef<any>): void {\n    if (this._openedDrawers.indexOf(value) === -1) {\n      this._openedDrawers.push(value);\n\n      this._pushDrawersCascade();\n    }\n  }\n\n  public deleteRef(value: DrawerRef<any>): void {\n    this._openedDrawers = this._openedDrawers\n      .filter((ref) => ref !== value);\n  }\n\n  /**\n   * In case, when we want to open more than 1 drawer\n   * our previously opened drawers should be visible\n   *\n   *      d1   d2   d3\n   *     ---- ---- ---\n   *    | x  | x1 | x2\n   *    | y  | y1 | y2\n   *    | z  | z1 | z2\n   *     ---- ---- ---\n   *\n   * Where d1, d2 - previously opened drawers\n   * d1 and d2 must be pushed left to be visible under just opened d3\n   */\n  private _pushDrawersCascade(): void {\n    if (this.numberOfOpenedDrawers > 1) {\n      // SetTimeout should be here because we must wait render newly opened drawer\n      // to be able to get his width\n      setTimeout(() => {\n        const refsArr = Array.from(this._openedDrawers.values());\n\n        for (let i = refsArr.length - 1; i > 0; i--) {\n          const prevRef = refsArr[i - 1];\n          const currRef = refsArr[i];\n\n          prevRef.resizeController.pushMainWidth(currRef);\n        }\n      })\n    }\n  }\n}\n","export const MAIN_DRAWER_DEFAULT_WIDTH = 500;\nexport const SIDE_DRAWER_DEFAULT_WIDTH = 200;\nexport const SIDE_RESIZE_BAR_WIDTH = 46;\nexport const MAIN_RESIZE_ACTION_BAR_WIDTH = 45;\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\n\nimport { fromEvent, Subject } from 'rxjs';\nimport { debounceTime, filter, takeUntil } from 'rxjs/operators';\n\nimport { DrawerRef } from '../classes/drawer-ref';\nimport { FsDrawerResizerDirective } from '../directives/drawer-resizer.directive';\nimport { IDrawerWidthDefinition } from '../interfaces/drawer-config.interface';\nimport { FsDrawerPersistanceController } from './persistance-controller';\nimport { DrawerStoreService } from '../services/drawer-store.service';\nimport {\n  MAIN_DRAWER_DEFAULT_WIDTH,\n  MAIN_RESIZE_ACTION_BAR_WIDTH,\n  SIDE_DRAWER_DEFAULT_WIDTH, SIDE_RESIZE_BAR_WIDTH\n} from '../consts/sizes.cont';\n\n\n@Injectable()\nexport class DrawerSizeController implements OnDestroy {\n\n  private _mainElRef: FsDrawerResizerDirective;\n  private _sideElRef: FsDrawerResizerDirective;\n\n  private _mainConfig: IDrawerWidthDefinition;\n  private _sideConfig: IDrawerWidthDefinition;\n\n  private _sideOpened = false;\n  private _screenWidth: number;\n\n  private readonly _borderPadding = 0;\n\n  private _destroy$ = new Subject<void>();\n\n  constructor(\n    private _drawerRef: DrawerRef<any>,\n    private _ngZone: NgZone,\n    private _persistanceController: FsDrawerPersistanceController,\n    private _drawerStore: DrawerStoreService,\n  ) {}\n\n  public get mainElRef() {\n    return this._mainElRef;\n  }\n\n  public get sideElRef() {\n    return this._sideElRef;\n  }\n\n  public get mainConfig(): IDrawerWidthDefinition {\n    return this._mainConfig;\n  }\n\n  public get sideConfig(): IDrawerWidthDefinition {\n    return this._sideConfig;\n  }\n\n  public get screenWidth(): number {\n    return this._screenWidth;\n  }\n\n  private get persistedMainWidth(): number {\n    return this._persistanceController.enabled\n      ? this._persistanceController.getDataFromScope('mainWidth')\n      : null;\n  }\n\n  private get persistedSideWidth(): number {\n    return this._persistanceController.enabled\n      ? this._persistanceController.getDataFromScope('sideWidth')\n      : null;\n  }\n\n  public init(): void {\n    this._initDefaultConfigs();\n    this._updateScreenWidth();\n    this._listenWindowResize();\n    this._listenSideToggle();\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public registerElRef(el: FsDrawerResizerDirective) {\n    if (el.isMainDrawer) {\n      this._registerMainRef(el);\n      this._listenWidthChanges(el);\n    } else if (el.isSideDrawer) {\n      this._registerSideRef(el);\n      this._listenWidthChanges(el);\n    } else {\n      throw Error('Unrecognized resize element type')\n    }\n  }\n\n  public removeElRef(el: FsDrawerResizerDirective) {\n    if (el.isMainDrawer) {\n      this._removeMainRef();\n    } else if (el.isSideDrawer) {\n      this._removeSideRef();\n    }\n  }\n\n  public getInitialWidth(type: 'main' | 'side'): number {\n    if (type === 'main') {\n      return this.mainConfig.initial;\n    } else if (type === 'side') {\n      return this.sideConfig.initial;\n    } else {\n      return void 0;\n    }\n  }\n\n  public getMinWidth(type: 'main' | 'side'): number {\n    if (type === 'main') {\n      return this.mainConfig.min ?? 0;\n    } else if (type === 'side') {\n      return this.sideConfig.min ?? 0;\n    } else {\n      return 0;\n    }\n  }\n\n  public getMaxWidth(type: 'main' | 'side'): number {\n    if (type === 'main') {\n      return this.mainConfig.max ?? window.innerWidth;\n    } else if (type === 'side') {\n      return this.sideConfig.max ?? window.innerWidth;\n    } else {\n      return window.innerWidth;\n    }\n  }\n\n  /**\n   * Update width from outside with all calculations to be done\n   * @param width\n   */\n  public updateMainWidth(width: number) {\n    const sideWidth = (this.sideElRef && this.sideElRef.width) || 0;\n    this.mainElRef.updateWidth(sideWidth + width);\n  }\n\n  /**\n   * Update width from outside with all calculations to be done\n   * @param width\n   */\n  public updateSideWidth(width: number) {\n    if (this.sideElRef) {\n      const currentWidth = this.mainElRef.width - this.sideElRef.width;\n      this.mainElRef.updateWidth(currentWidth + width);\n      this.sideElRef.updateWidth(width);\n    }\n  }\n\n  /**\n   * Push current drawer to be visible under new one opened\n   * @param inFrontDrawer\n   */\n  public pushMainWidth(inFrontDrawer: DrawerRef<any>) {\n    const inFrontDrawerTotalWidth = inFrontDrawer.resizeController.mainElRef.width\n      + MAIN_RESIZE_ACTION_BAR_WIDTH;\n\n    if (this.mainElRef.width <= inFrontDrawerTotalWidth) {\n      this.updateMainWidth(inFrontDrawerTotalWidth);\n    }\n  }\n\n  /**\n   * Listen for browser resize and update restrictions\n   */\n  private _listenWindowResize() {\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent(window, 'resize')\n        .pipe(\n          debounceTime(50),\n          takeUntil(this._destroy$),\n        )\n        .subscribe(() => {\n          this._updateScreenWidth();\n          this._updateMinMaxStyles();\n        });\n    });\n  }\n\n  /**\n   * Copy initial configs or set default values\n   */\n  private _initDefaultConfigs() {\n    // Main initialization\n    this._mainConfig =\n      (this._drawerRef.drawerConfig.width && this._drawerRef.drawerConfig.width.main)\n      || {};\n\n    this._mainConfig.initial = this.persistedMainWidth\n      || this._mainConfig.initial\n      || MAIN_DRAWER_DEFAULT_WIDTH;\n\n\n    // Side initialization\n    this._sideConfig =\n      (this._drawerRef.drawerConfig.width && this._drawerRef.drawerConfig.width.side)\n      || {};\n\n    this._sideConfig.initial = this.persistedSideWidth\n      || this._sideConfig.initial\n      || SIDE_DRAWER_DEFAULT_WIDTH;\n  }\n\n  private _registerMainRef(el: FsDrawerResizerDirective) {\n    this._mainElRef = el;\n  }\n\n  private _registerSideRef(el: FsDrawerResizerDirective) {\n    this._sideElRef = el;\n  }\n\n  private _removeMainRef() {\n    this._mainElRef = null;\n  }\n\n  private _removeSideRef() {\n    this._sideElRef = null;\n  }\n\n  /**\n   * Update current window size\n   */\n  private _updateScreenWidth(): void {\n    this._screenWidth = (window.innerWidth - this._borderPadding);\n  }\n\n  /**\n   * Update min&max css props for containers\n   */\n  private _updateMinMaxStyles(): void {\n    this.mainElRef.setMinMaxStyles();\n\n    if (this.sideElRef) {\n      this.sideElRef.setMinMaxStyles();\n    }\n  }\n\n  private _listenSideToggle(): void {\n    this._drawerRef.sideToggle$\n      .pipe(\n        takeUntil(this._destroy$),\n      )\n      .subscribe((opened: boolean) => {\n        if (this._sideOpened === opened) {\n          return;\n        }\n\n        this._sideOpened = opened;\n\n        if (opened) {\n          const currentWidth = this.mainElRef.width;\n          const sideWidth = this.getInitialWidth('side');\n\n          this._mainElRef.updateWidth(currentWidth + sideWidth + SIDE_RESIZE_BAR_WIDTH);\n        } else {\n          const actualSideWidth = this.sideElRef.fsDrawerResizer.getBoundingClientRect().width;\n          const mainWidth = this.mainElRef.width - actualSideWidth - SIDE_RESIZE_BAR_WIDTH;\n\n          this._mainElRef.updateWidth(mainWidth);\n        }\n      })\n  }\n\n  private _listenWidthChanges(el: FsDrawerResizerDirective) {\n    if (!this._persistanceController.enabled) {\n      return;\n    }\n\n    el.width$\n      .pipe(\n        debounceTime(200),\n        filter(() => {\n          return this._drawerStore.getLevelForRef(el.drawerRef) === this._drawerStore.numberOfOpenedDrawers;\n        }),\n      )\n      .subscribe({\n        next: () => {\n          const sideWidth = this._sideElRef?.width || 0;\n\n          if (this._mainElRef) {\n            this._persistanceController.saveDataToScope(\n              'mainWidth',\n              this._mainElRef.width - sideWidth - SIDE_RESIZE_BAR_WIDTH,\n            );\n          }\n\n          if (this._sideElRef) {\n            this._persistanceController.saveDataToScope(\n              'sideWidth',\n              sideWidth\n            );\n          }\n        }\n      })\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { DrawerSizeController } from '../classes/drawer-size-controller';\nimport { DrawerRef } from '../classes/drawer-ref';\nimport { MAIN_RESIZE_ACTION_BAR_WIDTH, SIDE_RESIZE_BAR_WIDTH } from '../consts/sizes.cont';\n\n\n@Directive({\n  selector: '[fsDrawerResizer]',\n  host: {\n    '[style.cursor]': '\"col-resize\"',\n  }\n})\nexport class FsDrawerResizerDirective implements OnInit, OnDestroy {\n\n  @Input() public fsDrawerResizer = this._el.nativeElement;\n  @Input() public type: 'main' | 'side';\n  @Input() public direction = 'left';\n  @Input() public resizable = true;\n  @Input() public parentContainer: ElementRef;\n  @Input() public actionsContainer: ElementRef;\n  @Input() public sizeController: DrawerSizeController;\n\n  private _dragStartHandler = this._dragStart.bind(this);\n  private _dragHandler = this._drag.bind(this);\n  private _dragEndHandler = this._dragEnd.bind(this);\n\n  private _x = 0;\n  private _width$ = new BehaviorSubject<number>(0);\n  private _actionsWidth = 0;\n\n  private _destroy$ = new Subject();\n\n  constructor(\n    private _el: ElementRef,\n    private _renderer: Renderer2,\n    private _ngZone: NgZone,\n    private _drawerRef: DrawerRef<any>,\n  ) {}\n\n  public get drawerRef(): DrawerRef<any> {\n    return this._drawerRef;\n  }\n\n  public get isMainDrawer(): boolean {\n    return this.type === 'main';\n  }\n\n  public get isSideDrawer(): boolean {\n    return this.type === 'side';\n  }\n\n  public get width(): number {\n    return this._width$.getValue();\n  }\n\n  public get width$(): Observable<number> {\n    return this._width$.pipe(takeUntil(this._destroy$));\n  }\n\n  private get minWidth(): number {\n    const minWidth = this.sizeController.getMinWidth(this.type);\n\n    if (minWidth && minWidth >= 0) {\n      const screenWidth = this.sizeController.screenWidth;\n      const barWidth = this.barWidth;\n\n      if (screenWidth - minWidth < barWidth) {\n        return this.sizeController.screenWidth - barWidth;\n      } else {\n        return minWidth;\n      }\n    }\n  }\n\n  private get maxWidth(): number {\n    const maxWidth = this.sizeController.getMaxWidth(this.type);\n    let parentContainerWidth = null;\n\n    if (this.parentContainer) {\n      parentContainerWidth = this._getElementWidth(this.parentContainer.nativeElement);\n    }\n\n    if (parentContainerWidth !== null) {\n      return !maxWidth || maxWidth >= parentContainerWidth\n        ? parentContainerWidth - this._actionsWidth * 2\n        : maxWidth;\n    } else {\n      return !maxWidth || maxWidth >= this.sizeController.screenWidth\n        ? this.sizeController.screenWidth\n        : maxWidth;\n    }\n  }\n\n  public get barWidth(): number {\n    return this.isMainDrawer\n      ? MAIN_RESIZE_ACTION_BAR_WIDTH\n      : SIDE_RESIZE_BAR_WIDTH;\n  }\n\n  public ngOnInit() {\n\n    this.sizeController.registerElRef(this);\n\n    if (this.resizable) {\n      this._ngZone.runOutsideAngular(() => {\n        this._el.nativeElement.addEventListener('mousedown', this._dragStartHandler, false);\n        this._el.nativeElement.addEventListener('touchstart', this._dragStartHandler, false);\n      });\n\n      if (this.actionsContainer) {\n        this._actionsWidth = this._getElementWidth(this.actionsContainer.nativeElement)\n      }\n\n      this.setMinMaxStyles();\n\n      const minWidth = this.sizeController.getMinWidth(this.type);\n      let width = this.sizeController.getInitialWidth(this.type)\n        || this._getElementWidth(this.fsDrawerResizer);\n\n      if (width < minWidth) {\n        width = minWidth;\n      }\n\n      this.updateWidth(width);\n    }\n  }\n\n  public updateWidth(width) {\n    const minConfiguredWidth = this.sizeController.getMinWidth(this.type);\n    const maxConfiguredWidth = this.sizeController.getMaxWidth(this.type);\n    const availableWidth = this.sizeController.screenWidth;\n\n    // newWidth should not be\n    // greater than maxConfiguredWidth\n    // and not lesser than minConfiguredWidth\n    width = Math.max(minConfiguredWidth, Math.min(width, maxConfiguredWidth));\n    // and sure it shouldn't be greater than screen width\n    width = Math.min(width, availableWidth);\n\n    if (width === this.width) {\n      return;\n    }\n\n    this._width$.next(width);\n\n    requestAnimationFrame(() => {\n      this._renderer.setStyle(this.fsDrawerResizer, 'width', `${width}px`);\n    });\n  }\n\n  public ngOnDestroy() {\n    this._el.nativeElement.removeEventListener('mousedown', this._dragStartHandler, false);\n    this._el.nativeElement.removeEventListener('touchstart', this._dragStartHandler, false);\n\n    this.sizeController.removeElRef(this);\n\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  /**\n   * Set inline styles min/max width\n   */\n  public setMinMaxStyles() {\n    requestAnimationFrame(() => {\n      this._renderer.setStyle(this.fsDrawerResizer, 'min-width', `${this.minWidth}px`);\n      this._renderer.setStyle(this.fsDrawerResizer, 'max-width', `${this.maxWidth}px`)\n    });\n  }\n\n  /**\n   * Subscribe to move events and init base dimensions/restrictions\n   * @param event { MouseEvent }\n   */\n  private _dragStart(event: MouseEvent) {\n\n    this._x = this._getClientX(event);\n    this.updateWidth(this._getElementWidth(this.fsDrawerResizer))\n\n    this.setMinMaxStyles();\n\n    document.addEventListener('touchmove', this._dragHandler, false);\n    document.addEventListener('touchend', this._dragEndHandler, false);\n\n    document.addEventListener('mousemove', this._dragHandler, false);\n    document.addEventListener('mouseup', this._dragEndHandler, false);\n  }\n\n  /**\n   * Update coordinates during drag\n   * @param event\n   */\n  private _drag(event: MouseEvent) {\n    const clientX = this._getClientX(event);\n\n    const predictedWidth = this._calcWidth(this.direction, clientX);\n\n    this._updatePosition(clientX, predictedWidth);\n    // this._emitResizeEvent();\n  }\n\n  /**\n   * Remove listeners when drag finished\n   * @param event\n   */\n  private _dragEnd(event: MouseEvent) {\n    document.removeEventListener('mousemove', this._dragHandler, false);\n    document.removeEventListener('mouseup', this._dragEndHandler, false);\n    document.removeEventListener('touchmove', this._dragHandler, false);\n    document.removeEventListener('touchend', this._dragEndHandler, false);\n  }\n\n  /**\n   *\n   * @param event\n   */\n  private _getClientX(event) {\n    return event.touches ? event.touches[0].clientX : event.clientX;\n  }\n\n  /**\n   * Will return width of element\n   * @param el\n   */\n  private _getElementWidth(el) {\n    return el.getBoundingClientRect().width;\n  }\n\n  /**\n   * Update width and position of target element\n   * @param clientX\n   * @param width\n   */\n  private _updatePosition(clientX: number, width: number) {\n    this._x = clientX;\n    this.updateWidth(width < 0 ? 0 : width)\n  }\n\n  /**\n   * Calc new width based on offset from previous position\n   * @param direction\n   * @param clientX\n   */\n  private _calcWidth(direction, clientX) {\n    const directionSign = direction === 'left' ? -1 : 1;\n\n    return this.width + (this._x - clientX) * directionSign;\n  }\n\n  // /**\n  //  * Resize event for Window\n  //  */\n  // private _emitResizeEvent() {\n  //   const resizeEvent = window.document.createEvent('UIEvents');\n  //   resizeEvent.initEvent('resize', true, false);\n  //\n  //   window.dispatchEvent(resizeEvent);\n  // }\n}\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  TemplatePortal,\n} from '@angular/cdk/portal';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { DrawerRef } from '../../classes/drawer-ref';\nimport { DrawerConfig } from '../../models/drawer-config.model';\nimport { FsDrawerMenuService } from '../../services/drawer-menu.service';\nimport { DrawerSizeController } from '../../classes/drawer-size-controller';\nimport { FsDrawerPersistanceController } from '../../classes/persistance-controller';\nimport { getNormalizedPath } from '@firestitch/common';\n\n\n@Component({\n  selector: 'fs-drawer',\n  templateUrl: './drawer.component.html',\n  providers: [\n    FsDrawerMenuService,\n    FsDrawerPersistanceController,\n    DrawerSizeController,\n  ],\n  host: {\n    'class': 'fs-drawer-container',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsDrawerComponent extends BasePortalOutlet implements OnInit, OnDestroy {\n\n  public config: DrawerConfig;\n  public isOpen = false;\n  public isOpenSide = false;\n\n  public drawerRef: DrawerRef<any>;\n\n  public initialized = false;\n\n  @ViewChild(CdkPortalOutlet, { static: true })\n  private _portalOutlet: CdkPortalOutlet;\n\n  @ViewChild('drawerContainer', { static: true })\n  private _drawerContainer: ElementRef;\n\n  @ViewChild('drawerActionsContainer', { read: ElementRef, static: true })\n  private _drawerActionsContainer: ElementRef;\n\n  private _sideOpen = false;\n  private _destroy$ = new Subject();\n\n  constructor(\n    private _el: ElementRef<HTMLElement>,\n    private _drawerMenu: FsDrawerMenuService,\n    private _drawerRef: DrawerRef<any>,\n    private _cdRef: ChangeDetectorRef,\n    private _resizeController: DrawerSizeController,\n    private _persistanceController: FsDrawerPersistanceController,\n    private _location: Location,\n  ) {\n    super();\n\n    this._drawerRef.resizeController = this._resizeController;\n  }\n\n  public get sideOpen() {\n    return this._sideOpen;\n  }\n\n  public set sideOpen(value: boolean) {\n    this._sideOpen = value;\n\n    this._el.nativeElement.classList\n      .toggle('side-open', this.sideOpen);\n  }\n\n  public ngOnInit() {\n    this._listenDataChanges();\n\n    this.config = this.drawerRef.drawerConfig;\n    if (this.config.persist) {\n      const namespace = getNormalizedPath(this._location);\n      this._persistanceController.setConfig(this.config.persist, namespace);\n    }\n\n    this._resizeController.init();\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public open() {\n    this.isOpen = true;\n  }\n\n  public close() {\n    this.isOpen = false;\n  }\n\n  public openSide() {\n    this.isOpenSide = true;\n  }\n\n  public closeSide() {\n    this.isOpenSide = false;\n  }\n\n  public setDrawerRef(value: DrawerRef<any>) {\n    this.drawerRef = value;\n\n    // Need to be like a parent for children resize\n    this.drawerRef.drawerContainer = this._drawerContainer;\n    this.drawerRef.drawerActionsContainer = this._drawerActionsContainer;\n\n    this.drawerRef.sideToggle$\n      .pipe(\n        takeUntil(this._destroy$),\n      )\n      .subscribe((opened) => {\n        this.sideOpen = opened;\n      });\n\n    this.initialized = true;\n  }\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  public attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Drawer component already attached');\n    }\n\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  public attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Drawer template already attached');\n    }\n\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  private _listenDataChanges() {\n    this._drawerRef.dataChanged$\n      .pipe(\n        takeUntil(this._destroy$)\n      )\n      .subscribe(() => {\n        this._cdRef.detectChanges();\n      });\n  }\n}\n","<div class=\"mat-elevation-z2 drawer\" #drawer\n     hidden\n     [ngClass]=\"config.position\"\n     [hidden]=\"!initialized\">\n  <ng-container>\n    <fs-drawer-actions class=\"drawer-actions\"\n                       #drawerActionsContainer\n                       type=\"main\"\n                       [fsDrawerResizer]=\"drawer\"\n                       [resizable]=\"drawerRef.drawerConfig.resizable\"\n                       [sizeController]=\"drawerRef.resizeController\"\n                       [direction]=\"config.position\"\n                       [actions]=\"config.actions\"\n                       [activeAction]=\"drawerRef.activeAction$ | async\">\n    </fs-drawer-actions>\n    <div class=\"drawer-container\" #drawerContainer>\n      <ng-template cdkPortalOutlet></ng-template>\n    </div>\n  </ng-container>\n</div>\n","import { Directive, Input, } from '@angular/core';\n\n@Directive({\n  selector: '[fsDrawerAction]',\n})\nexport class FsDrawerActionDirective {\n\n  @Input('fsDrawerAction') public name: string;\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { DrawerRef } from '../../classes/drawer-ref';\nimport { FsDrawerActionDirective } from '../../directives/drawer-action.directive';\n\n\n@Component({\n  selector: '[fsDrawerSide]',\n  templateUrl: './drawer-side.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [\n    './drawer-side.component.scss',\n  ],\n})\nexport class FsDrawerSideComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @Input('fsDrawerSide') public drawer: DrawerRef<any>;\n\n  @HostBinding('class.side') public classSide = true;\n\n  @ContentChildren(FsDrawerActionDirective) actions: QueryList<FsDrawerActionDirective>;\n\n  @ContentChildren(FsDrawerActionDirective, { read: TemplateRef })\n  actionsTemplates: QueryList<TemplateRef<any>>;\n\n  public activeTemplate: TemplateRef<any> = null;\n\n  private _hidden = false;\n  private _destroy$ = new EventEmitter();\n\n  constructor(\n    private _cdRef: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    private _elRef: ElementRef,\n  ) {}\n\n  public set hidden(value: boolean) {\n    this._hidden = value;\n\n    if (this._hidden) {\n      this._renderer.setAttribute(this._elRef.nativeElement, 'hidden', 'true');\n    } else {\n      this._renderer.removeAttribute(this._elRef.nativeElement, 'hidden');\n    }\n  }\n  public ngOnInit() {\n\n    this.hidden = true;\n\n    if (!this.drawer) {\n      console.error('Drawer reference is null for @Input(\"fsDrawerSide\")');\n    }\n\n    this._subscribeToActionChanges();\n  }\n\n  public ngAfterViewInit() {\n    setTimeout(() => {\n      // Check current side status\n      if (this.drawer) {\n        this.hidden = !this.drawer.isSideOpen;\n      }\n\n      this._updateActiveActionTemplate();\n\n      this._cdRef.detectChanges();\n    });\n  }\n\n  public ngOnDestroy() {\n    this._destroy$.emit();\n    this._destroy$.complete();\n  }\n\n  private _subscribeToActionChanges() {\n    if (this.drawer) {\n      this.drawer.sideToggle$\n        .pipe(\n          takeUntil(this._destroy$),\n        )\n        .subscribe(() => {\n          this.hidden = !this.drawer.isSideOpen;\n          this._updateActiveActionTemplate();\n\n          this._cdRef.detectChanges();\n        });\n    }\n  }\n\n  private _updateActiveActionTemplate() {\n    if (this.drawer) {\n      const activatedAction = this.drawer.activeAction;\n\n      if (this.drawer.isSideOpen && activatedAction) {\n        const selectedActionIndex = this.actions\n          .toArray()\n          .findIndex((action) => action.name === activatedAction);\n\n        this.activeTemplate = this.actionsTemplates.toArray()[selectedActionIndex];\n      } else {\n        this.activeTemplate = null;\n      }\n    }\n  }\n}\n","<ng-container [ngSwitch]=\"drawer.drawerConfig.position\" *ngIf=\"activeTemplate\">\n  <ng-container *ngSwitchCase=\"'right'\">\n    <div class=\"side-container\" #sideContainer>\n      <div class=\"side-content\">\n        <ng-template [ngTemplateOutlet]=\"activeTemplate\"></ng-template>\n      </div>\n    </div>\n    <div class=\"resize-side\"\n         resizable=\"true\"\n         direction=\"left\"\n         type=\"side\"\n         [fsDrawerResizer]=\"sideContainer\"\n         [resizable]=\"drawer.drawerConfig.resizable\"\n         [sizeController]=\"drawer.resizeController\"\n         [parentContainer]=\"drawer.drawerContainer\"\n         [actionsContainer]=\"drawer.drawerActionsContainer\"\n    >\n      <a mat-icon-button class=\"resize-icon\"><mat-icon>drag_indicator</mat-icon></a>\n    </div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'left'\">\n    <div class=\"resize-side\"\n         resizable=\"true\"\n         direction=\"right\"\n         [fsDrawerResizer]=\"sideContainer\"\n    >\n    <a mat-icon-button class=\"resize-icon\"><mat-icon>drag_indicator</mat-icon></a>\n    </div>\n    <div class=\"side-container\" #sideContainer>\n      <div class=\"side-content\">\n        <ng-template [ngTemplateOutlet]=\"activeTemplate\"></ng-template>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: '[fsDrawerContent]',\n  template: '<div class=\"content\"><ng-content></ng-content></div>',\n  host: {\n    'class': 'content-container'\n  }\n})\nexport class FsDrawerContentComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { FsMenuModule } from '@firestitch/menu';\n\nimport { FsDrawerActionsComponent } from './components/drawer-actions/drawer-actions.component';\nimport { FsDrawerComponent } from './components/drawer/drawer.component';\nimport { FsDrawerSideComponent } from './components/drawer-side/drawer-side.component';\nimport { FsDrawerMenuComponent } from './components/drawer-menu/drawer-menu.component';\nimport { FsDrawerActionItemComponent } from './components/drawer-actions/drawer-action-item/drawer-action-item.component';\n\nimport { FsDrawerContentComponent } from './components/drawer-content/drawer-content.component';\nimport { FsDrawerActionDirective } from './directives/drawer-action.directive';\n\nimport { FsDrawerResizerDirective } from './directives/drawer-resizer.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatIconModule,\n    OverlayModule,\n    PortalModule,\n    FsMenuModule,\n    MatMenuModule,\n  ],\n  exports: [\n    FsDrawerComponent,\n    FsDrawerSideComponent,\n    FsDrawerContentComponent,\n    FsDrawerActionDirective,\n    FsDrawerResizerDirective,\n  ],\n  declarations: [\n    FsDrawerSideComponent,\n    FsDrawerComponent,\n    FsDrawerActionsComponent,\n    FsDrawerActionItemComponent,\n    FsDrawerContentComponent,\n    FsDrawerActionDirective,\n    FsDrawerResizerDirective,\n    FsDrawerMenuComponent,\n  ],\n})\nexport class FsDrawerModule {}\n","import { InjectionToken } from '@angular/core';\n\n/** Injection token that can be used to access the data that was passed in to a drawer. */\nexport const DRAWER_DATA = new InjectionToken<any>('DrawerData');\n","import { InjectionToken } from '@angular/core';\nimport { IDrawerConfig } from '../interfaces/drawer-config.interface';\n\nexport const DRAWER_DEFAULT_CONFIG = new InjectionToken<IDrawerConfig>('fs.drawer-default-config');\n","import { Inject, Injectable, Injector, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType, PortalInjector } from '@angular/cdk/portal';\n\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { merge as _merge } from 'lodash-es';\nimport { FsDrawerComponent } from '../components/drawer/drawer.component';\nimport { DrawerRef } from '../classes/drawer-ref';\nimport { DrawerData } from '../classes/drawer-data';\nimport { IDrawerConfig } from '../interfaces/drawer-config.interface';\nimport { DRAWER_DATA } from './drawer-data';\nimport { DrawerStoreService } from './drawer-store.service';\nimport { DRAWER_DEFAULT_CONFIG } from './drawer-default-config';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FsDrawerService implements OnDestroy {\n\n  private _destroy$ = new Subject();\n\n  constructor(\n    @Optional() @SkipSelf() private _parentDrawerService: FsDrawerService,\n    @Optional() @Inject(DRAWER_DEFAULT_CONFIG) private _defaultConfig,\n    private _overlay: Overlay,\n    private _injector: Injector,\n    private _drawerStore: DrawerStoreService,\n  ) {}\n\n  public ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public open<TData = any>(component: ComponentType<any>, config?: IDrawerConfig<TData>) {\n    const overlayRef = this._createOverlay();\n\n    const dataFactory = DrawerData.createWithProxy(config.data);\n\n    delete config.data;\n    config = _merge({}, this._defaultConfig || {}, config);\n\n    const drawerRef = new DrawerRef(overlayRef, dataFactory, config);\n\n    const containerRef = this._attachDrawerContainer(overlayRef, drawerRef, dataFactory);\n    const componentRef = this._attachComponent(component, containerRef, drawerRef, dataFactory);\n\n    drawerRef.containerRef = containerRef;\n    containerRef.setDrawerRef(drawerRef);\n\n    drawerRef.componentRef = componentRef;\n\n    drawerRef.events();\n    drawerRef.open();\n\n    this._storeDrawerRef(drawerRef);\n\n    merge(\n      drawerRef.afterOpened$,\n      drawerRef.afterClosed$\n    )\n    .pipe(\n      takeUntil(this._destroy$)\n    )\n    .subscribe(() => {\n      setTimeout(() => {\n        this._applyBackdrop();\n        this._applyBodyOpenClass();\n      });\n    });\n\n    return drawerRef;\n  }\n\n  public closeAll() {\n    this._drawerStore.drawerRefs\n      .forEach((ref) => ref.close());\n\n    if (this._parentDrawerService) {\n      this._parentDrawerService.closeAll();\n    }\n  }\n\n  private _applyBackdrop() {\n    Array.from(this._drawerStore.drawerRefs)\n      .forEach((drawerRef, index) => {\n        const backdrop = drawerRef.overlayRef.backdropElement;\n\n        if (backdrop) {\n          if (index && index === (this._drawerStore.numberOfOpenedDrawers - 1)) {\n            backdrop.classList.add('fs-drawer-backdrop-active');\n          } else {\n            backdrop.classList.remove('fs-drawer-backdrop-active');\n          }\n        }\n      });\n  }\n\n  private _applyBodyOpenClass() {\n    if (this._drawerStore.numberOfOpenedDrawers) {\n      document.body.classList.add('fs-drawer-open');\n    } else {\n      document.body.classList.remove('fs-drawer-open');\n    }\n  }\n\n  private _storeDrawerRef(ref) {\n    this._drawerStore.addRef(ref);\n\n    ref.destroy$\n      .pipe(\n        take(1),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this._drawerStore.deleteRef(ref);\n      });\n  }\n\n  private _createOverlay(): OverlayRef {\n    const overlayConfig = this._getOverlayConfig();\n    return this._overlay.create(overlayConfig);\n  }\n\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      hasBackdrop: true,\n      backdropClass: 'fs-drawer-backdrop'\n    });\n  }\n\n  private _attachDrawerContainer<T, R>(\n    overlayRef: OverlayRef,\n    drawerRef: DrawerRef<T, R>,\n    dataFactory: DrawerData\n  ) {\n    const injector = this._createInjector(drawerRef, dataFactory);\n    const containerPortal = new ComponentPortal(FsDrawerComponent, undefined, injector);\n    const containerRef = overlayRef.attach<FsDrawerComponent>(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private _attachComponent<T, R>(\n    componentRef: ComponentType<T>,\n    drawerContainer: FsDrawerComponent,\n    drawerRef: DrawerRef<T, R>,\n    dataFactory: DrawerData,\n  ) {\n\n    const injector = this._createInjector(drawerRef, dataFactory);\n\n    return drawerContainer.attachComponentPortal<T>(\n      new ComponentPortal<T>(componentRef, undefined, injector)\n    );\n  }\n\n\n  private _createInjector(componentRef, dataFactory) {\n    const injectionTokens = new WeakMap<any, any>([\n      [DrawerRef, componentRef],\n      [DRAWER_DATA, dataFactory]\n    ]);\n\n    return new PortalInjector(this._injector, injectionTokens);\n  }\n\n\n}\n","/*\n * Public API Surface of fs-menu\n */\n\nexport { FsDrawerModule } from './app/fs-drawer.module';\n\nexport { FsDrawerComponent } from './app/components/drawer/drawer.component';\nexport { FsDrawerSideComponent } from './app/components/drawer-side/drawer-side.component';\nexport { FsDrawerContentComponent } from './app/components/drawer-content/drawer-content.component';\nexport { FsDrawerActionDirective } from './app/directives/drawer-action.directive';\nexport { FsDrawerResizerDirective } from './app/directives/drawer-resizer.directive';\n\nexport { FsDrawerService } from './app/services/drawer.service';\nexport { DRAWER_DATA } from './app/services/drawer-data';\nexport { DRAWER_MENU_DATA } from './app/services/drawer-menu-data';\nexport { DRAWER_DEFAULT_CONFIG } from './app/services/drawer-default-config';\n\nexport { DrawerRef } from './app/classes/drawer-ref';\nexport { DrawerMenuRef } from './app/classes/drawer-menu-ref';\n\nexport { DrawerData } from './app/classes/drawer-data';\n\nexport { IDrawerConfig } from './app/interfaces/drawer-config.interface';\nexport { DrawerDataProxy } from './app/interfaces/drawer-data.interface';\nexport { IFsDrawerActionConfig } from './app/interfaces/action.iterface';\n\nexport { FsDrawerAction } from './app/helpers/action-type.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i1.DrawerRef","i2","i2.FsDrawerMenuService","i3.FsDrawerActionItemComponent","i4","i5","i6","i2.FsDrawerPersistanceController","i3.DrawerStoreService","i1.FsDrawerMenuService","i2.DrawerRef","i3.DrawerSizeController","i4.FsDrawerPersistanceController","i6.FsDrawerActionsComponent","i7.FsDrawerResizerDirective","i8","i3","i4.FsDrawerResizerDirective","_merge","merge","i2.DrawerStoreService"],"mappings":"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"}