import { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { DrawerRef } from '../../../classes/drawer-ref';
import { FsDrawerAction } from '../../../helpers/action-type.enum';
import { Action } from '../../../models/action.model';
import * as i0 from "@angular/core";
export declare class FsDrawerActionItemComponent implements OnInit, OnChanges {
    drawer: DrawerRef<any>;
    private _cdRef;
    action: Action;
    activeAction: string;
    actionClicked: EventEmitter<any>;
    isActive: boolean;
    actionTypes: typeof FsDrawerAction;
    private _destroy$;
    constructor(drawer: DrawerRef<any>, _cdRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    actionClick(event: any): void;
    menuActionClick(action: any, event: any): void;
    private _listenActionChanges;
    private _listenDataChanges;
    private _updateVisibilityAndLinks;
    private _updateVisibility;
    private _updateRouterLinks;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsDrawerActionItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FsDrawerActionItemComponent, "fs-drawer-action-item", never, { "action": "action"; "activeAction": "activeAction"; }, { "actionClicked": "actionClicked"; }, never, never>;
}
