import { Injector, OnDestroy } from '@angular/core';
import { Overlay } from '@angular/cdk/overlay';
import { ComponentType } from '@angular/cdk/portal';
import { DrawerRef } from '../classes/drawer-ref';
import { IDrawerConfig } from '../interfaces/drawer-config.interface';
import { DrawerStoreService } from './drawer-store.service';
import * as i0 from "@angular/core";
export declare class FsDrawerService implements OnDestroy {
    private _parentDrawerService;
    private _defaultConfig;
    private _overlay;
    private _injector;
    private _drawerStore;
    private _destroy$;
    constructor(_parentDrawerService: FsDrawerService, _defaultConfig: any, _overlay: Overlay, _injector: Injector, _drawerStore: DrawerStoreService);
    ngOnDestroy(): void;
    open<TData = any>(component: ComponentType<any>, config?: IDrawerConfig<TData>): DrawerRef<unknown, any>;
    closeAll(): void;
    private _applyBackdrop;
    private _applyBodyOpenClass;
    private _storeDrawerRef;
    private _createOverlay;
    private _getOverlayConfig;
    private _attachDrawerContainer;
    private _attachComponent;
    private _createInjector;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsDrawerService, [{ optional: true; skipSelf: true; }, { optional: true; }, null, null, null]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<FsDrawerService>;
}
