{"version":3,"file":"firestitch-store.js","sources":["../../src/app/classes/store-object.ts","../../src/app/services/store.service.ts","../../src/app/fs-store.module.ts","../../src/app/services/persistance-store.ts","../../src/public_api.ts","../../src/firestitch-store.ts"],"sourcesContent":["export class FsStoreObject {\n  static readonly EVENT_SET = 'set';\n  static readonly EVENT_REMOVE = 'remove';\n  static readonly EVENT_INIT = 'init';\n\n  constructor(public name, public event, public value?) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Observer } from 'rxjs';\n\nimport { FsStoreObject } from '../classes/store-object';\nimport { StoreObserver } from './../interfaces/store-observer';\n\n@Injectable()\nexport class FsStore {\n\n  private _storage: any = window.localStorage;\n  private _storeObservers = [];\n\n  public observe(name: string): Observable<FsStoreObject> {\n    return new Observable((observer: Observer<any>) => {\n      this._getObservers().push({ name: name, observer: observer });\n      observer.next(new FsStoreObject(name, FsStoreObject.EVENT_INIT, this.get(name)));\n    });\n  }\n\n  public get(key, options: { default?: boolean } = {}) {\n\n    if (this._storage.hasOwnProperty(key)) {\n      try {\n        return JSON.parse(this._storage[key]);\n      } catch (e) {}\n    }\n\n    if (options.default !== undefined) {\n      return options.default;\n    }\n\n    return undefined;\n  }\n\n  public set(name, value, options: Object = {}) {\n    this._storage[name] = JSON.stringify(value);\n    this._getObservers()\n      .filter((storeObserver: StoreObserver) => {\n        return storeObserver.name === name;\n      }).forEach((storeObserver: StoreObserver) => {\n        storeObserver.observer.next(new FsStoreObject(name, FsStoreObject.EVENT_SET, value));\n      });\n\n    return this;\n  }\n\n  public remove(name, options: Object = {}) {\n    delete this._storage[name];\n    this._getObservers()\n      .filter((item: StoreObserver) => {\n        return item.name === name;\n      })\n      .forEach((storeObserver: StoreObserver) => {\n        storeObserver.observer.next(new FsStoreObject(name, FsStoreObject.EVENT_REMOVE));\n      });\n\n    return this;\n  }\n\n  public clear() {\n    for (let i = 0; i < this._storage.length; i++) {\n      const key = this._storage.key(i);\n      this._getObservers().forEach(item => {\n        item.observer.next(new FsStoreObject(key, FsStoreObject.EVENT_REMOVE));\n      });\n    }\n    this._storage.clear();\n\n    return this;\n  }\n\n  private _getObservers(): StoreObserver[] {\n    return this._storeObservers;\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FsStore } from './services/store.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ]\n})\nexport class FsStoreModule {\n  static forRoot(): ModuleWithProviders<FsStoreModule> {\n    return {\n      ngModule: FsStoreModule,\n      providers: [\n        FsStore\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { FsStore } from './store.service';\n\nimport { isAfter, subMinutes } from 'date-fns';\nimport { pickBy, cloneDeep } from 'lodash-es';\n\nimport { FsPersistance, FsPersistanceConfig } from '../interfaces/persistance.interface';\n\n\n@Injectable()\nexport class FsPersistanceStore<T extends FsPersistance = any, TData = any> {\n\n  protected _value: { data: TData, date: Date };\n  protected _enabled = false;\n  protected _namespace: string;\n  protected _openedInDialog = false;\n  protected _persistConfig: FsPersistanceConfig;\n\n  protected STORE_KEY: string;\n\n  constructor(\n    protected _store: FsStore,\n    protected _route: ActivatedRoute,\n  ) {\n    // Initialize store\n    if (!this._store.get(this.STORE_KEY)) {\n      this._store.set(this.STORE_KEY, {});\n    }\n  }\n\n  public get enabled(): boolean {\n    return this._enabled;\n  }\n\n  public get value(): { data: TData, date: Date } {\n    return cloneDeep(this._value);\n  }\n\n  public get namespace(): string {\n    return this._namespace;\n  }\n\n  public setConfig(persistanceConfig: T, namespace: string, inDialog = false): void {\n    this._namespace = namespace;\n    this._openedInDialog = inDialog;\n\n    if (typeof persistanceConfig === 'object') {\n      this._persistConfig = { ...<FsPersistanceConfig>persistanceConfig };\n    } else {\n      this._persistConfig = {};\n    }\n\n    if (this._route.snapshot.queryParams.persist === 'clear') {\n      this.save({}, true);\n    }\n\n    // if filter in dialog - we should disable persistance\n    if (\n      this._route.snapshot.queryParams.persist !== 'disable'\n      && persistanceConfig\n      && !this._openedInDialog\n    ) {\n      this._enabled = true;\n    }\n\n    this.restore();\n  }\n\n  public save(data, force = false): void {\n    if (!this._enabled && !force) {\n      return;\n    }\n\n    if (typeof data === 'object') {\n      data = pickBy(data, (val) => {\n        return val !== null && val !== void 0;\n      });\n    }\n\n    // if filter in dialog - we should disable persistance\n    if (!this._namespace && !force) {\n      return;\n    }\n\n    this._putDataToLocalStore({\n      data,\n      date: new Date()\n    })\n  }\n\n  /**\n   * Restoring values from local storage\n   */\n  public restore(): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    let value = this._retrieveDataFromLocalStore();\n\n    // Default value if data doesn't exists\n    if (!value || !value.data) {\n      value = { data: {}, date: new Date() };\n    } else if (value) {\n      // Check if data is too old\n      if (this._persistConfig.timeout) {\n        const date = new Date(value.date);\n\n        if (isAfter(subMinutes(date, this._persistConfig.timeout), new Date())) {\n          value = { data: {}, date: new Date() };\n        }\n      }\n    }\n\n    this._value = value;\n  }\n\n  public clear() {\n    this.save({});\n  }\n\n  public getDataFromScope<TScopeData = any>(name: string): TScopeData {\n    return this.value.data[name];\n  }\n\n  public saveDataToScope<TScopeData = any>(name: string, value: TScopeData): void {\n    const data = {\n      ...this.value.data,\n      [name]: value\n    };\n\n    this.save(data);\n  }\n\n  private _putDataToLocalStore(value) {\n    const storeData = this._store.get(this.STORE_KEY) || {};\n    storeData[this._namespace] = value;\n\n    this._value = value;\n\n    this._store.set(this.STORE_KEY, storeData);\n  }\n\n  private _retrieveDataFromLocalStore() {\n    const storeData = this._store.get(this.STORE_KEY);\n\n    if (storeData) {\n      return storeData[this._namespace];\n    } else {\n      return {};\n    }\n  }\n}\n","/*\n * Public API Surface of fs-menu\n */\n\n// Modules\nexport { FsStoreModule } from './app/fs-store.module';\n\n// Classes\nexport { FsStoreObject } from './app/classes/store-object';\n\n// Services\nexport { FsStore } from './app/services/store.service';\nexport { FsPersistanceStore } from './app/services/persistance-store';\n\n// Interfaces\nexport { FsPersistanceConfig, FsPersistance } from './app/interfaces/persistance.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.FsStore"],"mappings":"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"}