{"version":3,"file":"firestitch-store.umd.js","sources":["../../src/app/classes/store-object.ts","../../src/app/services/store.service.ts","../../src/app/fs-store.module.ts","../../src/app/services/persistance-store.ts","../../src/public_api.ts","../../src/firestitch-store.ts"],"sourcesContent":["export class FsStoreObject {\n  static readonly EVENT_SET = 'set';\n  static readonly EVENT_REMOVE = 'remove';\n  static readonly EVENT_INIT = 'init';\n\n  constructor(public name, public event, public value?) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Observer } from 'rxjs';\n\nimport { FsStoreObject } from '../classes/store-object';\nimport { StoreObserver } from './../interfaces/store-observer';\n\n@Injectable()\nexport class FsStore {\n\n  private _storage: any = window.localStorage;\n  private _storeObservers = [];\n\n  public observe(name: string): Observable<FsStoreObject> {\n    return new Observable((observer: Observer<any>) => {\n      this._getObservers().push({ name: name, observer: observer });\n      observer.next(new FsStoreObject(name, FsStoreObject.EVENT_INIT, this.get(name)));\n    });\n  }\n\n  public get(key, options: { default?: boolean } = {}) {\n\n    if (this._storage.hasOwnProperty(key)) {\n      try {\n        return JSON.parse(this._storage[key]);\n      } catch (e) {}\n    }\n\n    if (options.default !== undefined) {\n      return options.default;\n    }\n\n    return undefined;\n  }\n\n  public set(name, value, options: Object = {}) {\n    this._storage[name] = JSON.stringify(value);\n    this._getObservers()\n      .filter((storeObserver: StoreObserver) => {\n        return storeObserver.name === name;\n      }).forEach((storeObserver: StoreObserver) => {\n        storeObserver.observer.next(new FsStoreObject(name, FsStoreObject.EVENT_SET, value));\n      });\n\n    return this;\n  }\n\n  public remove(name, options: Object = {}) {\n    delete this._storage[name];\n    this._getObservers()\n      .filter((item: StoreObserver) => {\n        return item.name === name;\n      })\n      .forEach((storeObserver: StoreObserver) => {\n        storeObserver.observer.next(new FsStoreObject(name, FsStoreObject.EVENT_REMOVE));\n      });\n\n    return this;\n  }\n\n  public clear() {\n    for (let i = 0; i < this._storage.length; i++) {\n      const key = this._storage.key(i);\n      this._getObservers().forEach(item => {\n        item.observer.next(new FsStoreObject(key, FsStoreObject.EVENT_REMOVE));\n      });\n    }\n    this._storage.clear();\n\n    return this;\n  }\n\n  private _getObservers(): StoreObserver[] {\n    return this._storeObservers;\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FsStore } from './services/store.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ]\n})\nexport class FsStoreModule {\n  static forRoot(): ModuleWithProviders<FsStoreModule> {\n    return {\n      ngModule: FsStoreModule,\n      providers: [\n        FsStore\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { FsStore } from './store.service';\n\nimport { isAfter, subMinutes } from 'date-fns';\nimport { pickBy, cloneDeep } from 'lodash-es';\n\nimport { FsPersistance, FsPersistanceConfig } from '../interfaces/persistance.interface';\n\n\n@Injectable()\nexport class FsPersistanceStore<T extends FsPersistance = any, TData = any> {\n\n  protected _value: { data: TData, date: Date };\n  protected _enabled = false;\n  protected _namespace: string;\n  protected _openedInDialog = false;\n  protected _persistConfig: FsPersistanceConfig;\n\n  protected STORE_KEY: string;\n\n  constructor(\n    protected _store: FsStore,\n    protected _route: ActivatedRoute,\n  ) {\n    // Initialize store\n    if (!this._store.get(this.STORE_KEY)) {\n      this._store.set(this.STORE_KEY, {});\n    }\n  }\n\n  public get enabled(): boolean {\n    return this._enabled;\n  }\n\n  public get value(): { data: TData, date: Date } {\n    return cloneDeep(this._value);\n  }\n\n  public get namespace(): string {\n    return this._namespace;\n  }\n\n  public setConfig(persistanceConfig: T, namespace: string, inDialog = false): void {\n    this._namespace = namespace;\n    this._openedInDialog = inDialog;\n\n    if (typeof persistanceConfig === 'object') {\n      this._persistConfig = { ...<FsPersistanceConfig>persistanceConfig };\n    } else {\n      this._persistConfig = {};\n    }\n\n    if (this._route.snapshot.queryParams.persist === 'clear') {\n      this.save({}, true);\n    }\n\n    // if filter in dialog - we should disable persistance\n    if (\n      this._route.snapshot.queryParams.persist !== 'disable'\n      && persistanceConfig\n      && !this._openedInDialog\n    ) {\n      this._enabled = true;\n    }\n\n    this.restore();\n  }\n\n  public save(data, force = false): void {\n    if (!this._enabled && !force) {\n      return;\n    }\n\n    if (typeof data === 'object') {\n      data = pickBy(data, (val) => {\n        return val !== null && val !== void 0;\n      });\n    }\n\n    // if filter in dialog - we should disable persistance\n    if (!this._namespace && !force) {\n      return;\n    }\n\n    this._putDataToLocalStore({\n      data,\n      date: new Date()\n    })\n  }\n\n  /**\n   * Restoring values from local storage\n   */\n  public restore(): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    let value = this._retrieveDataFromLocalStore();\n\n    // Default value if data doesn't exists\n    if (!value || !value.data) {\n      value = { data: {}, date: new Date() };\n    } else if (value) {\n      // Check if data is too old\n      if (this._persistConfig.timeout) {\n        const date = new Date(value.date);\n\n        if (isAfter(subMinutes(date, this._persistConfig.timeout), new Date())) {\n          value = { data: {}, date: new Date() };\n        }\n      }\n    }\n\n    this._value = value;\n  }\n\n  public clear() {\n    this.save({});\n  }\n\n  public getDataFromScope<TScopeData = any>(name: string): TScopeData {\n    return this.value.data[name];\n  }\n\n  public saveDataToScope<TScopeData = any>(name: string, value: TScopeData): void {\n    const data = {\n      ...this.value.data,\n      [name]: value\n    };\n\n    this.save(data);\n  }\n\n  private _putDataToLocalStore(value) {\n    const storeData = this._store.get(this.STORE_KEY) || {};\n    storeData[this._namespace] = value;\n\n    this._value = value;\n\n    this._store.set(this.STORE_KEY, storeData);\n  }\n\n  private _retrieveDataFromLocalStore() {\n    const storeData = this._store.get(this.STORE_KEY);\n\n    if (storeData) {\n      return storeData[this._namespace];\n    } else {\n      return {};\n    }\n  }\n}\n","/*\n * Public API Surface of fs-menu\n */\n\n// Modules\nexport { FsStoreModule } from './app/fs-store.module';\n\n// Classes\nexport { FsStoreObject } from './app/classes/store-object';\n\n// Services\nexport { FsStore } from './app/services/store.service';\nexport { FsPersistanceStore } from './app/services/persistance-store';\n\n// Interfaces\nexport { FsPersistanceConfig, FsPersistance } from './app/interfaces/persistance.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Observable","i0","Injectable","CommonModule","NgModule","cloneDeep","pickBy","isAfter","subMinutes","i1.FsStore","i2"],"mappings":"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"}